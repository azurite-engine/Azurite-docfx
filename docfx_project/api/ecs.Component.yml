### YamlMime:ManagedReference
items:
- uid: "ecs.Component"
  id: "Component"
  parent: "ecs"
  children:
  - "ecs.Component.Component()"
  - "ecs.Component.Component(ecs.Component.ComponentOrder)"
  - "ecs.Component.ComponentOrder"
  - "ecs.Component.compareTo(ecs.Component)"
  - "ecs.Component.debug()"
  - "ecs.Component.gameObject"
  - "ecs.Component.position()"
  - "ecs.Component.remove()"
  - "ecs.Component.setPosition(org.joml.Vector2f)"
  - "ecs.Component.start()"
  - "ecs.Component.update(float)"
  langs:
  - "java"
  name: "Component"
  nameWithType: "Component"
  fullName: "ecs.Component"
  type: "Class"
  package: "ecs"
  summary: "Abstract structure for ECS Components. It is highly recommended to use this when implementing any system that can/should be applied to a GameObject."
  syntax:
    content: "public abstract class Component implements Comparable<Component>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.Comparable<ecs.Component>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.Component.Component()"
  id: "Component()"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "Component()"
  nameWithType: "Component.Component()"
  fullName: "ecs.Component.Component()"
  overload: "ecs.Component.Component*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Component()"
- uid: "ecs.Component.Component(ecs.Component.ComponentOrder)"
  id: "Component(ecs.Component.ComponentOrder)"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "Component(Component.ComponentOrder order)"
  nameWithType: "Component.Component(Component.ComponentOrder order)"
  fullName: "ecs.Component.Component(Component.ComponentOrder order)"
  overload: "ecs.Component.Component*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Component(Component.ComponentOrder order)"
    parameters:
    - id: "order"
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.compareTo(ecs.Component)"
  id: "compareTo(ecs.Component)"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "compareTo(Component o)"
  nameWithType: "Component.compareTo(Component o)"
  fullName: "ecs.Component.compareTo(Component o)"
  overload: "ecs.Component.compareTo*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public int compareTo(Component o)"
    parameters:
    - id: "o"
      type: "ecs.Component"
    return:
      type: "int"
- uid: "ecs.Component.debug()"
  id: "debug()"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "debug()"
  nameWithType: "Component.debug()"
  fullName: "ecs.Component.debug()"
  overload: "ecs.Component.debug*"
  type: "Method"
  package: "ecs"
  summary: "Get an array of debug lines to be rendered in debug mode"
  syntax:
    content: "public DebugPrimitive[] debug()"
    return:
      type: "util.debug.DebugPrimitive[]"
      description: "an array of lines to be rendered in debug mode"
- uid: "ecs.Component.gameObject"
  id: "gameObject"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "gameObject"
  nameWithType: "Component.gameObject"
  fullName: "ecs.Component.gameObject"
  type: "Field"
  package: "ecs"
  summary: "Parent GameObject"
  syntax:
    content: "public GameObject gameObject"
    return:
      type: "ecs.GameObject"
- uid: "ecs.Component.position()"
  id: "position()"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "position()"
  nameWithType: "Component.position()"
  fullName: "ecs.Component.position()"
  overload: "ecs.Component.position*"
  type: "Method"
  package: "ecs"
  summary: "Shortcut to get the current position of the parent gameobject."
  syntax:
    content: "protected Vector2f position()"
    return:
      type: "org.joml.Vector2f"
      description: "the current position of the parent gameobject"
- uid: "ecs.Component.remove()"
  id: "remove()"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "remove()"
  nameWithType: "Component.remove()"
  fullName: "ecs.Component.remove()"
  overload: "ecs.Component.remove*"
  type: "Method"
  package: "ecs"
  summary: "Called when component is removed from GameObject."
  syntax:
    content: "public void remove()"
- uid: "ecs.Component.setPosition(org.joml.Vector2f)"
  id: "setPosition(org.joml.Vector2f)"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "setPosition(Vector2f position)"
  nameWithType: "Component.setPosition(Vector2f position)"
  fullName: "ecs.Component.setPosition(Vector2f position)"
  overload: "ecs.Component.setPosition*"
  type: "Method"
  package: "ecs"
  summary: "Shortcut to overwrite the current position of the parent gameobject."
  syntax:
    content: "protected void setPosition(Vector2f position)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
- uid: "ecs.Component.start()"
  id: "start()"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "start()"
  nameWithType: "Component.start()"
  fullName: "ecs.Component.start()"
  overload: "ecs.Component.start*"
  type: "Method"
  package: "ecs"
  summary: "Called once on Component initialization."
  syntax:
    content: "public void start()"
- uid: "ecs.Component.update(float)"
  id: "update(float)"
  parent: "ecs.Component"
  langs:
  - "java"
  name: "update(float dt)"
  nameWithType: "Component.update(float dt)"
  fullName: "ecs.Component.update(float dt)"
  overload: "ecs.Component.update*"
  type: "Method"
  package: "ecs"
  summary: "Called once per frame for each Component"
  syntax:
    content: "public void update(float dt)"
    parameters:
    - id: "dt"
      type: "float"
      description: "Engine.deltaTime"
references:
- uid: "ecs.Component.ComponentOrder"
  name: "Component.ComponentOrder"
  nameWithType: "Component.ComponentOrder"
  fullName: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.Component*"
  name: "Component"
  nameWithType: "Component.Component"
  fullName: "ecs.Component.Component"
  package: "ecs"
- uid: "ecs.Component.start*"
  name: "start"
  nameWithType: "Component.start"
  fullName: "ecs.Component.start"
  package: "ecs"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ecs.Component.update*"
  name: "update"
  nameWithType: "Component.update"
  fullName: "ecs.Component.update"
  package: "ecs"
- uid: "util.debug.DebugPrimitive[]"
  spec.java:
  - uid: "util.debug.DebugPrimitive"
    name: "DebugPrimitive"
    fullName: "util.debug.DebugPrimitive"
  - name: "[]"
    fullName: "[]"
- uid: "ecs.Component.debug*"
  name: "debug"
  nameWithType: "Component.debug"
  fullName: "ecs.Component.debug"
  package: "ecs"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "ecs.Component.position*"
  name: "position"
  nameWithType: "Component.position"
  fullName: "ecs.Component.position"
  package: "ecs"
- uid: "ecs.Component.setPosition*"
  name: "setPosition"
  nameWithType: "Component.setPosition"
  fullName: "ecs.Component.setPosition"
  package: "ecs"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ecs.Component.compareTo*"
  name: "compareTo"
  nameWithType: "Component.compareTo"
  fullName: "ecs.Component.compareTo"
  package: "ecs"
- uid: "ecs.Component.remove*"
  name: "remove"
  nameWithType: "Component.remove"
  fullName: "ecs.Component.remove"
  package: "ecs"
- uid: "ecs.GameObject"
  name: "GameObject"
  nameWithType: "GameObject"
  fullName: "ecs.GameObject"
- uid: "java.lang.Comparable<ecs.Component>"
  name: "Comparable<Component>"
  nameWithType: "Comparable<Component>"
  fullName: "java.lang.Comparable<ecs.Component>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Comparable"
  name: "Comparable"
  nameWithType: "Comparable"
  fullName: "java.lang.Comparable"
