### YamlMime:ManagedReference
items:
- uid: "graphics.postprocess.ForwardToTexture"
  id: "ForwardToTexture"
  parent: "graphics.postprocess"
  children:
  - "graphics.postprocess.ForwardToTexture.ForwardToTexture(graphics.postprocess.PostProcessStep.Target)"
  - "graphics.postprocess.ForwardToTexture.createShader()"
  - "graphics.postprocess.ForwardToTexture.prepare()"
  - "graphics.postprocess.ForwardToTexture.setTexture(graphics.Texture)"
  - "graphics.postprocess.ForwardToTexture.uploadUniforms(graphics.Shader)"
  langs:
  - "java"
  name: "ForwardToTexture"
  nameWithType: "ForwardToTexture"
  fullName: "graphics.postprocess.ForwardToTexture"
  type: "Class"
  package: "graphics.postprocess"
  summary: "A Post Processing Step that renders the texture as-is to another framebuffer. Perfect for debugging steps.\n\nNOTE: If you want to forward any texture to the screen, the scene class has a forwardToScreen field that can be used"
  syntax:
    content: "public class ForwardToTexture extends PostProcessStep"
  inheritance:
  - "java.lang.Object"
  - "graphics.postprocess.PostProcessStep"
  inheritedMembers:
  - "graphics.postprocess.PostProcessStep.apply()"
  - "graphics.postprocess.PostProcessStep.createFramebuffer()"
  - "graphics.postprocess.PostProcessStep.createShader()"
  - "graphics.postprocess.PostProcessStep.init()"
  - "graphics.postprocess.PostProcessStep.prepare()"
  - "graphics.postprocess.PostProcessStep.uploadUniforms(graphics.Shader)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.postprocess.ForwardToTexture.ForwardToTexture(graphics.postprocess.PostProcessStep.Target)"
  id: "ForwardToTexture(graphics.postprocess.PostProcessStep.Target)"
  parent: "graphics.postprocess.ForwardToTexture"
  langs:
  - "java"
  name: "ForwardToTexture(PostProcessStep.Target target)"
  nameWithType: "ForwardToTexture.ForwardToTexture(PostProcessStep.Target target)"
  fullName: "graphics.postprocess.ForwardToTexture.ForwardToTexture(PostProcessStep.Target target)"
  overload: "graphics.postprocess.ForwardToTexture.ForwardToTexture*"
  type: "Constructor"
  package: "graphics.postprocess"
  summary: "Default Constructor"
  syntax:
    content: "public ForwardToTexture(PostProcessStep.Target target)"
    parameters:
    - id: "target"
      type: "graphics.postprocess.PostProcessStep.Target"
      description: "Where the final texture is to be rendered"
- uid: "graphics.postprocess.ForwardToTexture.createShader()"
  id: "createShader()"
  parent: "graphics.postprocess.ForwardToTexture"
  langs:
  - "java"
  name: "createShader()"
  nameWithType: "ForwardToTexture.createShader()"
  fullName: "graphics.postprocess.ForwardToTexture.createShader()"
  overload: "graphics.postprocess.ForwardToTexture.createShader*"
  overridden: "graphics.postprocess.PostProcessStep.createShader()"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Create the shader to be used for this step"
  syntax:
    content: "public Shader createShader()"
    return:
      type: "graphics.Shader"
      description: "the created shader"
- uid: "graphics.postprocess.ForwardToTexture.prepare()"
  id: "prepare()"
  parent: "graphics.postprocess.ForwardToTexture"
  langs:
  - "java"
  name: "prepare()"
  nameWithType: "ForwardToTexture.prepare()"
  fullName: "graphics.postprocess.ForwardToTexture.prepare()"
  overload: "graphics.postprocess.ForwardToTexture.prepare*"
  overridden: "graphics.postprocess.PostProcessStep.prepare()"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Prepare the framebuffer by clearing it and binding any textures required"
  syntax:
    content: "public void prepare()"
- uid: "graphics.postprocess.ForwardToTexture.setTexture(graphics.Texture)"
  id: "setTexture(graphics.Texture)"
  parent: "graphics.postprocess.ForwardToTexture"
  langs:
  - "java"
  name: "setTexture(Texture texture)"
  nameWithType: "ForwardToTexture.setTexture(Texture texture)"
  fullName: "graphics.postprocess.ForwardToTexture.setTexture(Texture texture)"
  overload: "graphics.postprocess.ForwardToTexture.setTexture*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Set the input texture"
  syntax:
    content: "public void setTexture(Texture texture)"
    parameters:
    - id: "texture"
      type: "graphics.Texture"
      description: "input texture"
- uid: "graphics.postprocess.ForwardToTexture.uploadUniforms(graphics.Shader)"
  id: "uploadUniforms(graphics.Shader)"
  parent: "graphics.postprocess.ForwardToTexture"
  langs:
  - "java"
  name: "uploadUniforms(Shader shader)"
  nameWithType: "ForwardToTexture.uploadUniforms(Shader shader)"
  fullName: "graphics.postprocess.ForwardToTexture.uploadUniforms(Shader shader)"
  overload: "graphics.postprocess.ForwardToTexture.uploadUniforms*"
  overridden: "graphics.postprocess.PostProcessStep.uploadUniforms(graphics.Shader)"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Upload uniforms to the shader"
  syntax:
    content: "protected void uploadUniforms(Shader shader)"
    parameters:
    - id: "shader"
      type: "graphics.Shader"
references:
- uid: "graphics.postprocess.PostProcessStep.Target"
  name: "PostProcessStep.Target"
  nameWithType: "PostProcessStep.Target"
  fullName: "graphics.postprocess.PostProcessStep.Target"
- uid: "graphics.postprocess.ForwardToTexture.ForwardToTexture*"
  name: "ForwardToTexture"
  nameWithType: "ForwardToTexture.ForwardToTexture"
  fullName: "graphics.postprocess.ForwardToTexture.ForwardToTexture"
  package: "graphics.postprocess"
- uid: "graphics.Shader"
  name: "Shader"
  nameWithType: "Shader"
  fullName: "graphics.Shader"
- uid: "graphics.postprocess.ForwardToTexture.createShader*"
  name: "createShader"
  nameWithType: "ForwardToTexture.createShader"
  fullName: "graphics.postprocess.ForwardToTexture.createShader"
  package: "graphics.postprocess"
- uid: "graphics.postprocess.ForwardToTexture.prepare*"
  name: "prepare"
  nameWithType: "ForwardToTexture.prepare"
  fullName: "graphics.postprocess.ForwardToTexture.prepare"
  package: "graphics.postprocess"
- uid: "graphics.postprocess.ForwardToTexture.uploadUniforms*"
  name: "uploadUniforms"
  nameWithType: "ForwardToTexture.uploadUniforms"
  fullName: "graphics.postprocess.ForwardToTexture.uploadUniforms"
  package: "graphics.postprocess"
- uid: "graphics.Texture"
  name: "Texture"
  nameWithType: "Texture"
  fullName: "graphics.Texture"
- uid: "graphics.postprocess.ForwardToTexture.setTexture*"
  name: "setTexture"
  nameWithType: "ForwardToTexture.setTexture"
  fullName: "graphics.postprocess.ForwardToTexture.setTexture"
  package: "graphics.postprocess"
- uid: "graphics.postprocess.PostProcessStep"
  name: "PostProcessStep"
  nameWithType: "PostProcessStep"
  fullName: "graphics.postprocess.PostProcessStep"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "graphics.postprocess.PostProcessStep.createFramebuffer()"
  name: "PostProcessStep.createFramebuffer()"
  nameWithType: "PostProcessStep.createFramebuffer()"
  fullName: "graphics.postprocess.PostProcessStep.createFramebuffer()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "graphics.postprocess.PostProcessStep.createShader()"
  name: "PostProcessStep.createShader()"
  nameWithType: "PostProcessStep.createShader()"
  fullName: "graphics.postprocess.PostProcessStep.createShader()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "graphics.postprocess.PostProcessStep.prepare()"
  name: "PostProcessStep.prepare()"
  nameWithType: "PostProcessStep.prepare()"
  fullName: "graphics.postprocess.PostProcessStep.prepare()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "graphics.postprocess.PostProcessStep.uploadUniforms(graphics.Shader)"
  name: "PostProcessStep.uploadUniforms(Shader)"
  nameWithType: "PostProcessStep.uploadUniforms(Shader)"
  fullName: "graphics.postprocess.PostProcessStep.uploadUniforms(graphics.Shader)"
- uid: "graphics.postprocess.PostProcessStep.apply()"
  name: "PostProcessStep.apply()"
  nameWithType: "PostProcessStep.apply()"
  fullName: "graphics.postprocess.PostProcessStep.apply()"
- uid: "graphics.postprocess.PostProcessStep.init()"
  name: "PostProcessStep.init()"
  nameWithType: "PostProcessStep.init()"
  fullName: "graphics.postprocess.PostProcessStep.init()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
