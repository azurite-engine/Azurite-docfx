### YamlMime:ManagedReference
items:
- uid: "io.xml.XMLTokenType"
  id: "XMLTokenType"
  parent: "io.xml"
  children:
  - "io.xml.XMLTokenType.ATTR_EQUALS"
  - "io.xml.XMLTokenType.CLOSE_TAG"
  - "io.xml.XMLTokenType.COMMENT_TAG"
  - "io.xml.XMLTokenType.IDENTIFIER"
  - "io.xml.XMLTokenType.OPEN_COMMENT"
  - "io.xml.XMLTokenType.OPEN_TAG"
  - "io.xml.XMLTokenType.QUOTATION"
  - "io.xml.XMLTokenType.SLASH"
  - "io.xml.XMLTokenType.SPACING"
  - "io.xml.XMLTokenType.valueOf(java.lang.String)"
  - "io.xml.XMLTokenType.values()"
  langs:
  - "java"
  name: "XMLTokenType"
  nameWithType: "XMLTokenType"
  fullName: "io.xml.XMLTokenType"
  type: "Enum"
  package: "io.xml"
  syntax:
    content: "public enum XMLTokenType extends Enum<XMLTokenType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.xml.XMLTokenType.ATTR_EQUALS"
  id: "ATTR_EQUALS"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "ATTR_EQUALS"
  nameWithType: "XMLTokenType.ATTR_EQUALS"
  fullName: "io.xml.XMLTokenType.ATTR_EQUALS"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType ATTR_EQUALS"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.CLOSE_TAG"
  id: "CLOSE_TAG"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "CLOSE_TAG"
  nameWithType: "XMLTokenType.CLOSE_TAG"
  fullName: "io.xml.XMLTokenType.CLOSE_TAG"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType CLOSE_TAG"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.COMMENT_TAG"
  id: "COMMENT_TAG"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "COMMENT_TAG"
  nameWithType: "XMLTokenType.COMMENT_TAG"
  fullName: "io.xml.XMLTokenType.COMMENT_TAG"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType COMMENT_TAG"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.IDENTIFIER"
  id: "IDENTIFIER"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "IDENTIFIER"
  nameWithType: "XMLTokenType.IDENTIFIER"
  fullName: "io.xml.XMLTokenType.IDENTIFIER"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType IDENTIFIER"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.OPEN_COMMENT"
  id: "OPEN_COMMENT"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "OPEN_COMMENT"
  nameWithType: "XMLTokenType.OPEN_COMMENT"
  fullName: "io.xml.XMLTokenType.OPEN_COMMENT"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType OPEN_COMMENT"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.OPEN_TAG"
  id: "OPEN_TAG"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "OPEN_TAG"
  nameWithType: "XMLTokenType.OPEN_TAG"
  fullName: "io.xml.XMLTokenType.OPEN_TAG"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType OPEN_TAG"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.QUOTATION"
  id: "QUOTATION"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "QUOTATION"
  nameWithType: "XMLTokenType.QUOTATION"
  fullName: "io.xml.XMLTokenType.QUOTATION"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType QUOTATION"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.SLASH"
  id: "SLASH"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "SLASH"
  nameWithType: "XMLTokenType.SLASH"
  fullName: "io.xml.XMLTokenType.SLASH"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType SLASH"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.SPACING"
  id: "SPACING"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "SPACING"
  nameWithType: "XMLTokenType.SPACING"
  fullName: "io.xml.XMLTokenType.SPACING"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final XMLTokenType SPACING"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.XMLTokenType()"
  id: "XMLTokenType()"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "XMLTokenType()"
  nameWithType: "XMLTokenType.XMLTokenType()"
  fullName: "io.xml.XMLTokenType.XMLTokenType()"
  overload: "io.xml.XMLTokenType.XMLTokenType*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "private XMLTokenType()"
- uid: "io.xml.XMLTokenType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "XMLTokenType.valueOf(String name)"
  fullName: "io.xml.XMLTokenType.valueOf(String name)"
  overload: "io.xml.XMLTokenType.valueOf*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public static XMLTokenType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLTokenType.values()"
  id: "values()"
  parent: "io.xml.XMLTokenType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "XMLTokenType.values()"
  fullName: "io.xml.XMLTokenType.values()"
  overload: "io.xml.XMLTokenType.values*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public static XMLTokenType[] values()"
    return:
      type: "io.xml.XMLTokenType[]"
references:
- uid: "io.xml.XMLTokenType.XMLTokenType*"
  name: "XMLTokenType"
  nameWithType: "XMLTokenType.XMLTokenType"
  fullName: "io.xml.XMLTokenType.XMLTokenType"
  package: "io.xml"
- uid: "io.xml.XMLTokenType[]"
  spec.java:
  - uid: "io.xml.XMLTokenType"
    name: "XMLTokenType"
    fullName: "io.xml.XMLTokenType"
  - name: "[]"
    fullName: "[]"
- uid: "io.xml.XMLTokenType.values*"
  name: "values"
  nameWithType: "XMLTokenType.values"
  fullName: "io.xml.XMLTokenType.values"
  package: "io.xml"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "io.xml.XMLTokenType.valueOf*"
  name: "valueOf"
  nameWithType: "XMLTokenType.valueOf"
  fullName: "io.xml.XMLTokenType.valueOf"
  package: "io.xml"
- uid: "java.lang.Enum<io.xml.XMLTokenType>"
  name: "Enum<XMLTokenType>"
  nameWithType: "Enum<XMLTokenType>"
  fullName: "java.lang.Enum<io.xml.XMLTokenType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
