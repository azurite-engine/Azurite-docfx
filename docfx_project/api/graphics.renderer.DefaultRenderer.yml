### YamlMime:ManagedReference
items:
- uid: "graphics.renderer.DefaultRenderer"
  id: "DefaultRenderer"
  parent: "graphics.renderer"
  children:
  - "graphics.renderer.DefaultRenderer.DefaultRenderer()"
  - "graphics.renderer.DefaultRenderer.add(ecs.GameObject)"
  - "graphics.renderer.DefaultRenderer.createBatch(int)"
  - "graphics.renderer.DefaultRenderer.createFramebuffer()"
  - "graphics.renderer.DefaultRenderer.createShader()"
  - "graphics.renderer.DefaultRenderer.prepare()"
  - "graphics.renderer.DefaultRenderer.rebuffer()"
  - "graphics.renderer.DefaultRenderer.remove(ecs.GameObject)"
  - "graphics.renderer.DefaultRenderer.uploadUniforms(graphics.Shader)"
  langs:
  - "java"
  name: "DefaultRenderer"
  nameWithType: "DefaultRenderer"
  fullName: "graphics.renderer.DefaultRenderer"
  type: "Class"
  package: "graphics.renderer"
  summary: "# Azurite #\n\nUsed to render sprites, which are rendered as `Primitive.QUAD`s with textures. This should be used to render any renderable `gameObject`."
  syntax:
    content: "public class DefaultRenderer extends Renderer"
  inheritance:
  - "java.lang.Object"
  - "graphics.renderer.Renderer"
  inheritedMembers:
  - "graphics.renderer.Renderer.add(ecs.GameObject)"
  - "graphics.renderer.Renderer.clean()"
  - "graphics.renderer.Renderer.createBatch(int)"
  - "graphics.renderer.Renderer.createFramebuffer()"
  - "graphics.renderer.Renderer.createShader()"
  - "graphics.renderer.Renderer.fetchColorAttachment(int)"
  - "graphics.renderer.Renderer.getAvailableBatch(graphics.Texture,int)"
  - "graphics.renderer.Renderer.init()"
  - "graphics.renderer.Renderer.prepare()"
  - "graphics.renderer.Renderer.rebuffer()"
  - "graphics.renderer.Renderer.remove(ecs.GameObject)"
  - "graphics.renderer.Renderer.render()"
  - "graphics.renderer.Renderer.uploadUniforms(graphics.Shader)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.renderer.DefaultRenderer.DefaultRenderer()"
  id: "DefaultRenderer()"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "DefaultRenderer()"
  nameWithType: "DefaultRenderer.DefaultRenderer()"
  fullName: "graphics.renderer.DefaultRenderer.DefaultRenderer()"
  overload: "graphics.renderer.DefaultRenderer.DefaultRenderer*"
  type: "Constructor"
  package: "graphics.renderer"
  syntax:
    content: "public DefaultRenderer()"
- uid: "graphics.renderer.DefaultRenderer.add(ecs.GameObject)"
  id: "add(ecs.GameObject)"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "add(GameObject gameObject)"
  nameWithType: "DefaultRenderer.add(GameObject gameObject)"
  fullName: "graphics.renderer.DefaultRenderer.add(GameObject gameObject)"
  overload: "graphics.renderer.DefaultRenderer.add*"
  overridden: "graphics.renderer.Renderer.add(ecs.GameObject)"
  type: "Method"
  package: "graphics.renderer"
  summary: "Add a gameObject to this renderer"
  syntax:
    content: "public void add(GameObject gameObject)"
    parameters:
    - id: "gameObject"
      type: "ecs.GameObject"
      description: "the GameObject with renderable components"
- uid: "graphics.renderer.DefaultRenderer.createBatch(int)"
  id: "createBatch(int)"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "createBatch(int zIndex)"
  nameWithType: "DefaultRenderer.createBatch(int zIndex)"
  fullName: "graphics.renderer.DefaultRenderer.createBatch(int zIndex)"
  overload: "graphics.renderer.DefaultRenderer.createBatch*"
  overridden: "graphics.renderer.Renderer.createBatch(int)"
  type: "Method"
  package: "graphics.renderer"
  summary: "Create a new Batch with appropriate parameters"
  syntax:
    content: "protected RenderBatch createBatch(int zIndex)"
    parameters:
    - id: "zIndex"
      type: "int"
    return:
      type: "graphics.renderer.RenderBatch"
      description: "a new batch"
- uid: "graphics.renderer.DefaultRenderer.createFramebuffer()"
  id: "createFramebuffer()"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "createFramebuffer()"
  nameWithType: "DefaultRenderer.createFramebuffer()"
  fullName: "graphics.renderer.DefaultRenderer.createFramebuffer()"
  overload: "graphics.renderer.DefaultRenderer.createFramebuffer*"
  overridden: "graphics.renderer.Renderer.createFramebuffer()"
  type: "Method"
  package: "graphics.renderer"
  summary: "Create a framebuffer"
  syntax:
    content: "protected Framebuffer createFramebuffer()"
    return:
      type: "graphics.Framebuffer"
      description: "the created Framebuffer"
- uid: "graphics.renderer.DefaultRenderer.createShader()"
  id: "createShader()"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "createShader()"
  nameWithType: "DefaultRenderer.createShader()"
  fullName: "graphics.renderer.DefaultRenderer.createShader()"
  overload: "graphics.renderer.DefaultRenderer.createShader*"
  overridden: "graphics.renderer.Renderer.createShader()"
  type: "Method"
  package: "graphics.renderer"
  summary: "Create a shader"
  syntax:
    content: "protected Shader createShader()"
    return:
      type: "graphics.Shader"
      description: "the created shader"
- uid: "graphics.renderer.DefaultRenderer.prepare()"
  id: "prepare()"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "prepare()"
  nameWithType: "DefaultRenderer.prepare()"
  fullName: "graphics.renderer.DefaultRenderer.prepare()"
  overload: "graphics.renderer.DefaultRenderer.prepare*"
  overridden: "graphics.renderer.Renderer.prepare()"
  type: "Method"
  package: "graphics.renderer"
  summary: "Prepare for rendering. Do anything like setting background here."
  syntax:
    content: "protected void prepare()"
- uid: "graphics.renderer.DefaultRenderer.rebuffer()"
  id: "rebuffer()"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "rebuffer()"
  nameWithType: "DefaultRenderer.rebuffer()"
  fullName: "graphics.renderer.DefaultRenderer.rebuffer()"
  overload: "graphics.renderer.DefaultRenderer.rebuffer*"
  overridden: "graphics.renderer.Renderer.rebuffer()"
  type: "Method"
  package: "graphics.renderer"
  summary: "Rebuffer all the data into batches"
  syntax:
    content: "protected void rebuffer()"
- uid: "graphics.renderer.DefaultRenderer.remove(ecs.GameObject)"
  id: "remove(ecs.GameObject)"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "remove(GameObject gameObject)"
  nameWithType: "DefaultRenderer.remove(GameObject gameObject)"
  fullName: "graphics.renderer.DefaultRenderer.remove(GameObject gameObject)"
  overload: "graphics.renderer.DefaultRenderer.remove*"
  overridden: "graphics.renderer.Renderer.remove(ecs.GameObject)"
  type: "Method"
  package: "graphics.renderer"
  summary: "Remove a gameObject from this renderer"
  syntax:
    content: "public void remove(GameObject gameObject)"
    parameters:
    - id: "gameObject"
      type: "ecs.GameObject"
      description: "the GameObject with renderable components"
- uid: "graphics.renderer.DefaultRenderer.uploadUniforms(graphics.Shader)"
  id: "uploadUniforms(graphics.Shader)"
  parent: "graphics.renderer.DefaultRenderer"
  langs:
  - "java"
  name: "uploadUniforms(Shader shader)"
  nameWithType: "DefaultRenderer.uploadUniforms(Shader shader)"
  fullName: "graphics.renderer.DefaultRenderer.uploadUniforms(Shader shader)"
  overload: "graphics.renderer.DefaultRenderer.uploadUniforms*"
  overridden: "graphics.renderer.Renderer.uploadUniforms(graphics.Shader)"
  type: "Method"
  package: "graphics.renderer"
  summary: "Upload uniforms to the shader"
  syntax:
    content: "protected void uploadUniforms(Shader shader)"
    parameters:
    - id: "shader"
      type: "graphics.Shader"
      description: "the shader"
references:
- uid: "graphics.renderer.DefaultRenderer.DefaultRenderer*"
  name: "DefaultRenderer"
  nameWithType: "DefaultRenderer.DefaultRenderer"
  fullName: "graphics.renderer.DefaultRenderer.DefaultRenderer"
  package: "graphics.renderer"
- uid: "graphics.Shader"
  name: "Shader"
  nameWithType: "Shader"
  fullName: "graphics.Shader"
- uid: "graphics.renderer.DefaultRenderer.createShader*"
  name: "createShader"
  nameWithType: "DefaultRenderer.createShader"
  fullName: "graphics.renderer.DefaultRenderer.createShader"
  package: "graphics.renderer"
- uid: "graphics.Framebuffer"
  name: "Framebuffer"
  nameWithType: "Framebuffer"
  fullName: "graphics.Framebuffer"
- uid: "graphics.renderer.DefaultRenderer.createFramebuffer*"
  name: "createFramebuffer"
  nameWithType: "DefaultRenderer.createFramebuffer"
  fullName: "graphics.renderer.DefaultRenderer.createFramebuffer"
  package: "graphics.renderer"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "graphics.renderer.RenderBatch"
  name: "RenderBatch"
  nameWithType: "RenderBatch"
  fullName: "graphics.renderer.RenderBatch"
- uid: "graphics.renderer.DefaultRenderer.createBatch*"
  name: "createBatch"
  nameWithType: "DefaultRenderer.createBatch"
  fullName: "graphics.renderer.DefaultRenderer.createBatch"
  package: "graphics.renderer"
- uid: "graphics.renderer.DefaultRenderer.uploadUniforms*"
  name: "uploadUniforms"
  nameWithType: "DefaultRenderer.uploadUniforms"
  fullName: "graphics.renderer.DefaultRenderer.uploadUniforms"
  package: "graphics.renderer"
- uid: "graphics.renderer.DefaultRenderer.rebuffer*"
  name: "rebuffer"
  nameWithType: "DefaultRenderer.rebuffer"
  fullName: "graphics.renderer.DefaultRenderer.rebuffer"
  package: "graphics.renderer"
- uid: "ecs.GameObject"
  name: "GameObject"
  nameWithType: "GameObject"
  fullName: "ecs.GameObject"
- uid: "graphics.renderer.DefaultRenderer.add*"
  name: "add"
  nameWithType: "DefaultRenderer.add"
  fullName: "graphics.renderer.DefaultRenderer.add"
  package: "graphics.renderer"
- uid: "graphics.renderer.DefaultRenderer.remove*"
  name: "remove"
  nameWithType: "DefaultRenderer.remove"
  fullName: "graphics.renderer.DefaultRenderer.remove"
  package: "graphics.renderer"
- uid: "graphics.renderer.DefaultRenderer.prepare*"
  name: "prepare"
  nameWithType: "DefaultRenderer.prepare"
  fullName: "graphics.renderer.DefaultRenderer.prepare"
  package: "graphics.renderer"
- uid: "graphics.renderer.Renderer"
  name: "Renderer"
  nameWithType: "Renderer"
  fullName: "graphics.renderer.Renderer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "graphics.renderer.Renderer.init()"
  name: "Renderer.init()"
  nameWithType: "Renderer.init()"
  fullName: "graphics.renderer.Renderer.init()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "graphics.renderer.Renderer.remove(ecs.GameObject)"
  name: "Renderer.remove(GameObject)"
  nameWithType: "Renderer.remove(GameObject)"
  fullName: "graphics.renderer.Renderer.remove(ecs.GameObject)"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "graphics.renderer.Renderer.createShader()"
  name: "Renderer.createShader()"
  nameWithType: "Renderer.createShader()"
  fullName: "graphics.renderer.Renderer.createShader()"
- uid: "graphics.renderer.Renderer.uploadUniforms(graphics.Shader)"
  name: "Renderer.uploadUniforms(Shader)"
  nameWithType: "Renderer.uploadUniforms(Shader)"
  fullName: "graphics.renderer.Renderer.uploadUniforms(graphics.Shader)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "graphics.renderer.Renderer.createFramebuffer()"
  name: "Renderer.createFramebuffer()"
  nameWithType: "Renderer.createFramebuffer()"
  fullName: "graphics.renderer.Renderer.createFramebuffer()"
- uid: "graphics.renderer.Renderer.rebuffer()"
  name: "Renderer.rebuffer()"
  nameWithType: "Renderer.rebuffer()"
  fullName: "graphics.renderer.Renderer.rebuffer()"
- uid: "graphics.renderer.Renderer.getAvailableBatch(graphics.Texture,int)"
  name: "Renderer.getAvailableBatch(Texture,int)"
  nameWithType: "Renderer.getAvailableBatch(Texture,int)"
  fullName: "graphics.renderer.Renderer.getAvailableBatch(graphics.Texture,int)"
- uid: "graphics.renderer.Renderer.clean()"
  name: "Renderer.clean()"
  nameWithType: "Renderer.clean()"
  fullName: "graphics.renderer.Renderer.clean()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "graphics.renderer.Renderer.add(ecs.GameObject)"
  name: "Renderer.add(GameObject)"
  nameWithType: "Renderer.add(GameObject)"
  fullName: "graphics.renderer.Renderer.add(ecs.GameObject)"
- uid: "graphics.renderer.Renderer.fetchColorAttachment(int)"
  name: "Renderer.fetchColorAttachment(int)"
  nameWithType: "Renderer.fetchColorAttachment(int)"
  fullName: "graphics.renderer.Renderer.fetchColorAttachment(int)"
- uid: "graphics.renderer.Renderer.render()"
  name: "Renderer.render()"
  nameWithType: "Renderer.render()"
  fullName: "graphics.renderer.Renderer.render()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "graphics.renderer.Renderer.createBatch(int)"
  name: "Renderer.createBatch(int)"
  nameWithType: "Renderer.createBatch(int)"
  fullName: "graphics.renderer.Renderer.createBatch(int)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "graphics.renderer.Renderer.prepare()"
  name: "Renderer.prepare()"
  nameWithType: "Renderer.prepare()"
  fullName: "graphics.renderer.Renderer.prepare()"
