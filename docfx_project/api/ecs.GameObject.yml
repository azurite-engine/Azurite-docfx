### YamlMime:ManagedReference
items:
- uid: "ecs.GameObject"
  id: "GameObject"
  parent: "ecs"
  children:
  - "ecs.GameObject.<T>getComponent(java.lang.Class<T>)"
  - "ecs.GameObject.<T>getComponents(java.lang.Class<T>)"
  - "ecs.GameObject.<T>removeComponent(java.lang.Class<T>)"
  - "ecs.GameObject.DEFAULT_GAMEOBJECT_NAME"
  - "ecs.GameObject.DEFAULT_Z_INDEX"
  - "ecs.GameObject.GameObject(java.lang.String,int)"
  - "ecs.GameObject.GameObject(java.lang.String,java.util.List<ecs.Component>,org.joml.Vector2f,int)"
  - "ecs.GameObject.GameObject(java.lang.String,org.joml.Vector2f,int)"
  - "ecs.GameObject.GameObject(org.joml.Vector2f)"
  - "ecs.GameObject.GameObject(org.joml.Vector2f,int)"
  - "ecs.GameObject.GameObject(scene.Scene,java.lang.String,org.joml.Vector2f,int)"
  - "ecs.GameObject.addComponent(ecs.Component)"
  - "ecs.GameObject.getComponents()"
  - "ecs.GameObject.getParentScene()"
  - "ecs.GameObject.getPositionData()"
  - "ecs.GameObject.getReadOnlyPosition()"
  - "ecs.GameObject.getUniqueId()"
  - "ecs.GameObject.name()"
  - "ecs.GameObject.setZIndex(int)"
  - "ecs.GameObject.start()"
  - "ecs.GameObject.update(float)"
  - "ecs.GameObject.zIndex()"
  langs:
  - "java"
  name: "GameObject"
  nameWithType: "GameObject"
  fullName: "ecs.GameObject"
  type: "Class"
  package: "ecs"
  summary: "A GameObject is the root of the Entity Component system used to store all entities in Azurite games. Each GameObject can contain any of a number of available components including spriteRenderers and lights. By default, each GameObject contains a Transform, which holds the X and Y position, and width and height of the object in pixels."
  syntax:
    content: "public class GameObject"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.GameObject.<T>getComponent(java.lang.Class<T>)"
  id: "<T>getComponent(java.lang.Class<T>)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "<T>getComponent(Class<T> componentClass)"
  nameWithType: "GameObject.<T>getComponent(Class<T> componentClass)"
  fullName: "ecs.GameObject.<T>getComponent(Class<T> componentClass)"
  overload: "ecs.GameObject.getComponent*"
  type: "Method"
  package: "ecs"
  summary: "Takes a parameter of a class that extends component and returns it if it is contained in the GameObject's list of components."
  syntax:
    content: "public T <T>getComponent(Class<T> componentClass)"
    parameters:
    - id: "componentClass"
      type: "java.lang.Class<T>"
      description: "of component (ie. \"SpriteRenderer.class\")"
    return:
      type: "T"
      description: "Component of type passed as param is contained in GameObject"
- uid: "ecs.GameObject.<T>getComponents(java.lang.Class<T>)"
  id: "<T>getComponents(java.lang.Class<T>)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "<T>getComponents(Class<T> componentClass)"
  nameWithType: "GameObject.<T>getComponents(Class<T> componentClass)"
  fullName: "ecs.GameObject.<T>getComponents(Class<T> componentClass)"
  overload: "ecs.GameObject.getComponents*"
  type: "Method"
  package: "ecs"
  summary: "Takes a parameter of a class that extends component and returns it if it is contained in the GameObject's list of components."
  syntax:
    content: "public List<T> <T>getComponents(Class<T> componentClass)"
    parameters:
    - id: "componentClass"
      type: "java.lang.Class<T>"
      description: "of component (ie. \"SpriteRenderer.class\")"
    return:
      type: "java.util.List<T>"
      description: "all components of type passed as param is contained in GameObject"
- uid: "ecs.GameObject.<T>removeComponent(java.lang.Class<T>)"
  id: "<T>removeComponent(java.lang.Class<T>)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "<T>removeComponent(Class<T> componentClass)"
  nameWithType: "GameObject.<T>removeComponent(Class<T> componentClass)"
  fullName: "ecs.GameObject.<T>removeComponent(Class<T> componentClass)"
  overload: "ecs.GameObject.removeComponent*"
  type: "Method"
  package: "ecs"
  summary: "Takes a parameter of a class that extends component and removed it from the GameObject if it is contained in the list of components."
  syntax:
    content: "public void <T>removeComponent(Class<T> componentClass)"
    parameters:
    - id: "componentClass"
      type: "java.lang.Class<T>"
      description: "of component (ie. \"SpriteRenderer.class\")"
- uid: "ecs.GameObject.DEFAULT_GAMEOBJECT_NAME"
  id: "DEFAULT_GAMEOBJECT_NAME"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "DEFAULT_GAMEOBJECT_NAME"
  nameWithType: "GameObject.DEFAULT_GAMEOBJECT_NAME"
  fullName: "ecs.GameObject.DEFAULT_GAMEOBJECT_NAME"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final String DEFAULT_GAMEOBJECT_NAME"
    return:
      type: "java.lang.String"
- uid: "ecs.GameObject.DEFAULT_Z_INDEX"
  id: "DEFAULT_Z_INDEX"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "DEFAULT_Z_INDEX"
  nameWithType: "GameObject.DEFAULT_Z_INDEX"
  fullName: "ecs.GameObject.DEFAULT_Z_INDEX"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final int DEFAULT_Z_INDEX"
    return:
      type: "int"
- uid: "ecs.GameObject.GameObject(java.lang.String,int)"
  id: "GameObject(java.lang.String,int)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "GameObject(String name, int zIndex)"
  nameWithType: "GameObject.GameObject(String name, int zIndex)"
  fullName: "ecs.GameObject.GameObject(String name, int zIndex)"
  overload: "ecs.GameObject.GameObject*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public GameObject(String name, int zIndex)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "zIndex"
      type: "int"
- uid: "ecs.GameObject.GameObject(java.lang.String,java.util.List<ecs.Component>,org.joml.Vector2f,int)"
  id: "GameObject(java.lang.String,java.util.List<ecs.Component>,org.joml.Vector2f,int)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)"
  nameWithType: "GameObject.GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)"
  fullName: "ecs.GameObject.GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)"
  overload: "ecs.GameObject.GameObject*"
  type: "Constructor"
  package: "ecs"
  summary: "Creates a new GameObject."
  syntax:
    content: "public GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "componentList"
      type: "java.util.List<ecs.Component>"
    - id: "position"
      type: "org.joml.Vector2f"
    - id: "zIndex"
      type: "int"
- uid: "ecs.GameObject.GameObject(java.lang.String,org.joml.Vector2f,int)"
  id: "GameObject(java.lang.String,org.joml.Vector2f,int)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "GameObject(String name, Vector2f position, int zIndex)"
  nameWithType: "GameObject.GameObject(String name, Vector2f position, int zIndex)"
  fullName: "ecs.GameObject.GameObject(String name, Vector2f position, int zIndex)"
  overload: "ecs.GameObject.GameObject*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public GameObject(String name, Vector2f position, int zIndex)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "position"
      type: "org.joml.Vector2f"
    - id: "zIndex"
      type: "int"
- uid: "ecs.GameObject.GameObject(org.joml.Vector2f)"
  id: "GameObject(org.joml.Vector2f)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "GameObject(Vector2f position)"
  nameWithType: "GameObject.GameObject(Vector2f position)"
  fullName: "ecs.GameObject.GameObject(Vector2f position)"
  overload: "ecs.GameObject.GameObject*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public GameObject(Vector2f position)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
- uid: "ecs.GameObject.GameObject(org.joml.Vector2f,int)"
  id: "GameObject(org.joml.Vector2f,int)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "GameObject(Vector2f position, int zIndex)"
  nameWithType: "GameObject.GameObject(Vector2f position, int zIndex)"
  fullName: "ecs.GameObject.GameObject(Vector2f position, int zIndex)"
  overload: "ecs.GameObject.GameObject*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public GameObject(Vector2f position, int zIndex)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
    - id: "zIndex"
      type: "int"
- uid: "ecs.GameObject.GameObject(scene.Scene,java.lang.String,org.joml.Vector2f,int)"
  id: "GameObject(scene.Scene,java.lang.String,org.joml.Vector2f,int)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "GameObject(Scene scene, String name, Vector2f position, int zIndex)"
  nameWithType: "GameObject.GameObject(Scene scene, String name, Vector2f position, int zIndex)"
  fullName: "ecs.GameObject.GameObject(Scene scene, String name, Vector2f position, int zIndex)"
  overload: "ecs.GameObject.GameObject*"
  type: "Constructor"
  package: "ecs"
  summary: "Creates a new GameObject."
  syntax:
    content: "public GameObject(Scene scene, String name, Vector2f position, int zIndex)"
    parameters:
    - id: "scene"
      type: "scene.Scene"
      description: "the scene to add the GameObject to. By default, GameObjects are added to the currentScene."
    - id: "name"
      type: "java.lang.String"
      description: "name of the GameObject"
    - id: "position"
      type: "org.joml.Vector2f"
    - id: "zIndex"
      type: "int"
- uid: "ecs.GameObject.addComponent(ecs.Component)"
  id: "addComponent(ecs.Component)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "addComponent(Component c)"
  nameWithType: "GameObject.addComponent(Component c)"
  fullName: "ecs.GameObject.addComponent(Component c)"
  overload: "ecs.GameObject.addComponent*"
  type: "Method"
  package: "ecs"
  summary: "Adds a new component to the GameObject's list."
  syntax:
    content: "public GameObject addComponent(Component c)"
    parameters:
    - id: "c"
      type: "ecs.Component"
      description: "the new component"
    return:
      type: "ecs.GameObject"
      description: "the gameobject itself"
- uid: "ecs.GameObject.getComponents()"
  id: "getComponents()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "getComponents()"
  nameWithType: "GameObject.getComponents()"
  fullName: "ecs.GameObject.getComponents()"
  overload: "ecs.GameObject.getComponents*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public List<Component> getComponents()"
    return:
      type: "java.util.List<ecs.Component>"
      description: "List of Components in GameObject"
- uid: "ecs.GameObject.getParentScene()"
  id: "getParentScene()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "getParentScene()"
  nameWithType: "GameObject.getParentScene()"
  fullName: "ecs.GameObject.getParentScene()"
  overload: "ecs.GameObject.getParentScene*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public Scene getParentScene()"
    return:
      type: "scene.Scene"
      description: "the parent scene of this gameObject"
- uid: "ecs.GameObject.getPositionData()"
  id: "getPositionData()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "getPositionData()"
  nameWithType: "GameObject.getPositionData()"
  fullName: "ecs.GameObject.getPositionData()"
  overload: "ecs.GameObject.getPositionData*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public float[] getPositionData()"
    return:
      type: "float[]"
- uid: "ecs.GameObject.getReadOnlyPosition()"
  id: "getReadOnlyPosition()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "getReadOnlyPosition()"
  nameWithType: "GameObject.getReadOnlyPosition()"
  fullName: "ecs.GameObject.getReadOnlyPosition()"
  overload: "ecs.GameObject.getReadOnlyPosition*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public Vector2f getReadOnlyPosition()"
    return:
      type: "org.joml.Vector2f"
- uid: "ecs.GameObject.getUniqueId()"
  id: "getUniqueId()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "getUniqueId()"
  nameWithType: "GameObject.getUniqueId()"
  fullName: "ecs.GameObject.getUniqueId()"
  overload: "ecs.GameObject.getUniqueId*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public long getUniqueId()"
    return:
      type: "long"
      description: "the universal and unique id among all objects"
- uid: "ecs.GameObject.name()"
  id: "name()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "name()"
  nameWithType: "GameObject.name()"
  fullName: "ecs.GameObject.name()"
  overload: "ecs.GameObject.name*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public String name()"
    return:
      type: "java.lang.String"
- uid: "ecs.GameObject.setZIndex(int)"
  id: "setZIndex(int)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "setZIndex(int z)"
  nameWithType: "GameObject.setZIndex(int z)"
  fullName: "ecs.GameObject.setZIndex(int z)"
  overload: "ecs.GameObject.setZIndex*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setZIndex(int z)"
    parameters:
    - id: "z"
      type: "int"
- uid: "ecs.GameObject.start()"
  id: "start()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "start()"
  nameWithType: "GameObject.start()"
  fullName: "ecs.GameObject.start()"
  overload: "ecs.GameObject.start*"
  type: "Method"
  package: "ecs"
  summary: "Called once on gameObject creation, also starts any components that are passed to the constructor."
  syntax:
    content: "public void start()"
- uid: "ecs.GameObject.update(float)"
  id: "update(float)"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "update(float dt)"
  nameWithType: "GameObject.update(float dt)"
  fullName: "ecs.GameObject.update(float dt)"
  overload: "ecs.GameObject.update*"
  type: "Method"
  package: "ecs"
  summary: "Called once every frame for each GameObject, calls the update method for each component it contains"
  syntax:
    content: "public void update(float dt)"
    parameters:
    - id: "dt"
      type: "float"
- uid: "ecs.GameObject.zIndex()"
  id: "zIndex()"
  parent: "ecs.GameObject"
  langs:
  - "java"
  name: "zIndex()"
  nameWithType: "GameObject.zIndex()"
  fullName: "ecs.GameObject.zIndex()"
  overload: "ecs.GameObject.zIndex*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public int zIndex()"
    return:
      type: "int"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.List<ecs.Component>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "ecs.Component"
    name: "Component"
    fullName: "ecs.Component"
  - name: ">"
    fullName: ">"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ecs.GameObject.GameObject*"
  name: "GameObject"
  nameWithType: "GameObject.GameObject"
  fullName: "ecs.GameObject.GameObject"
  package: "ecs"
- uid: "scene.Scene"
  name: "Scene"
  nameWithType: "Scene"
  fullName: "scene.Scene"
- uid: "ecs.GameObject.start*"
  name: "start"
  nameWithType: "GameObject.start"
  fullName: "ecs.GameObject.start"
  package: "ecs"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ecs.GameObject.update*"
  name: "update"
  nameWithType: "GameObject.update"
  fullName: "ecs.GameObject.update"
  package: "ecs"
- uid: "ecs.GameObject.getParentScene*"
  name: "getParentScene"
  nameWithType: "GameObject.getParentScene"
  fullName: "ecs.GameObject.getParentScene"
  package: "ecs"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "ecs.GameObject.getUniqueId*"
  name: "getUniqueId"
  nameWithType: "GameObject.getUniqueId"
  fullName: "ecs.GameObject.getUniqueId"
  package: "ecs"
- uid: "ecs.GameObject.getReadOnlyPosition*"
  name: "getReadOnlyPosition"
  nameWithType: "GameObject.getReadOnlyPosition"
  fullName: "ecs.GameObject.getReadOnlyPosition"
  package: "ecs"
- uid: "float[]"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
  - name: "[]"
    fullName: "[]"
- uid: "ecs.GameObject.getPositionData*"
  name: "getPositionData"
  nameWithType: "GameObject.getPositionData"
  fullName: "ecs.GameObject.getPositionData"
  package: "ecs"
- uid: "ecs.GameObject.zIndex*"
  name: "zIndex"
  nameWithType: "GameObject.zIndex"
  fullName: "ecs.GameObject.zIndex"
  package: "ecs"
- uid: "ecs.GameObject.setZIndex*"
  name: "setZIndex"
  nameWithType: "GameObject.setZIndex"
  fullName: "ecs.GameObject.setZIndex"
  package: "ecs"
- uid: "ecs.GameObject.name*"
  name: "name"
  nameWithType: "GameObject.name"
  fullName: "ecs.GameObject.name"
  package: "ecs"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "ecs.GameObject.getComponent*"
  name: "<T>getComponent"
  nameWithType: "GameObject.<T>getComponent"
  fullName: "ecs.GameObject.<T>getComponent"
  package: "ecs"
- uid: "java.util.List<T>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "ecs.GameObject.getComponents*"
  name: "<T>getComponents"
  nameWithType: "GameObject.<T>getComponents"
  fullName: "ecs.GameObject.<T>getComponents"
  package: "ecs"
- uid: "ecs.GameObject.removeComponent*"
  name: "<T>removeComponent"
  nameWithType: "GameObject.<T>removeComponent"
  fullName: "ecs.GameObject.<T>removeComponent"
  package: "ecs"
- uid: "ecs.Component"
  name: "Component"
  nameWithType: "Component"
  fullName: "ecs.Component"
- uid: "ecs.GameObject.addComponent*"
  name: "addComponent"
  nameWithType: "GameObject.addComponent"
  fullName: "ecs.GameObject.addComponent"
  package: "ecs"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
