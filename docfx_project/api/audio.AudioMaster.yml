### YamlMime:ManagedReference
items:
- uid: "audio.AudioMaster"
  id: "AudioMaster"
  parent: "audio"
  children:
  - "audio.AudioMaster.addSource(audio.AudioSource)"
  - "audio.AudioMaster.alGetError()"
  - "audio.AudioMaster.clean()"
  - "audio.AudioMaster.get()"
  langs:
  - "java"
  name: "AudioMaster"
  nameWithType: "AudioMaster"
  fullName: "audio.AudioMaster"
  type: "Class"
  package: "audio"
  summary: "# Azurite #\n\nMain audio center: equivocal to graphics.Window but for initializing audio stuff, like toggling and changing some parameters in the OpenAL API"
  syntax:
    content: "public class AudioMaster"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "audio.AudioMaster.AudioMaster()"
  id: "AudioMaster()"
  parent: "audio.AudioMaster"
  langs:
  - "java"
  name: "AudioMaster()"
  nameWithType: "AudioMaster.AudioMaster()"
  fullName: "audio.AudioMaster.AudioMaster()"
  overload: "audio.AudioMaster.AudioMaster*"
  type: "Constructor"
  package: "audio"
  syntax:
    content: "private AudioMaster()"
- uid: "audio.AudioMaster.addSource(audio.AudioSource)"
  id: "addSource(audio.AudioSource)"
  parent: "audio.AudioMaster"
  langs:
  - "java"
  name: "addSource(AudioSource s)"
  nameWithType: "AudioMaster.addSource(AudioSource s)"
  fullName: "audio.AudioMaster.addSource(AudioSource s)"
  overload: "audio.AudioMaster.addSource*"
  type: "Method"
  package: "audio"
  syntax:
    content: "public void addSource(AudioSource s)"
    parameters:
    - id: "s"
      type: "audio.AudioSource"
- uid: "audio.AudioMaster.alGetError()"
  id: "alGetError()"
  parent: "audio.AudioMaster"
  langs:
  - "java"
  name: "alGetError()"
  nameWithType: "AudioMaster.alGetError()"
  fullName: "audio.AudioMaster.alGetError()"
  overload: "audio.AudioMaster.alGetError*"
  type: "Method"
  package: "audio"
  syntax:
    content: "public static void alGetError()"
- uid: "audio.AudioMaster.clean()"
  id: "clean()"
  parent: "audio.AudioMaster"
  langs:
  - "java"
  name: "clean()"
  nameWithType: "AudioMaster.clean()"
  fullName: "audio.AudioMaster.clean()"
  overload: "audio.AudioMaster.clean*"
  type: "Method"
  package: "audio"
  syntax:
    content: "public void clean()"
- uid: "audio.AudioMaster.get()"
  id: "get()"
  parent: "audio.AudioMaster"
  langs:
  - "java"
  name: "get()"
  nameWithType: "AudioMaster.get()"
  fullName: "audio.AudioMaster.get()"
  overload: "audio.AudioMaster.get*"
  type: "Method"
  package: "audio"
  syntax:
    content: "public static synchronized AudioMaster get()"
    return:
      type: "audio.AudioMaster"
references:
- uid: "audio.AudioMaster.AudioMaster*"
  name: "AudioMaster"
  nameWithType: "AudioMaster.AudioMaster"
  fullName: "audio.AudioMaster.AudioMaster"
  package: "audio"
- uid: "audio.AudioMaster.get*"
  name: "get"
  nameWithType: "AudioMaster.get"
  fullName: "audio.AudioMaster.get"
  package: "audio"
- uid: "audio.AudioSource"
  name: "AudioSource"
  nameWithType: "AudioSource"
  fullName: "audio.AudioSource"
- uid: "audio.AudioMaster.addSource*"
  name: "addSource"
  nameWithType: "AudioMaster.addSource"
  fullName: "audio.AudioMaster.addSource"
  package: "audio"
- uid: "audio.AudioMaster.clean*"
  name: "clean"
  nameWithType: "AudioMaster.clean"
  fullName: "audio.AudioMaster.clean"
  package: "audio"
- uid: "audio.AudioMaster.alGetError*"
  name: "alGetError"
  nameWithType: "AudioMaster.alGetError"
  fullName: "audio.AudioMaster.alGetError"
  package: "audio"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
