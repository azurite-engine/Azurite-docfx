### YamlMime:ManagedReference
items:
- uid: "ecs.Text"
  id: "Text"
  parent: "ecs"
  children:
  - "ecs.Text.Text(java.lang.String,float,float)"
  - "ecs.Text.Text(java.lang.String,fonts.Font,graphics.Color,float,float)"
  - "ecs.Text.Text(java.lang.String,fonts.Font,graphics.Color,float,float,int,boolean,boolean)"
  - "ecs.Text.Text(java.lang.String,graphics.Color,float,float)"
  - "ecs.Text.addX(float)"
  - "ecs.Text.addY(float)"
  - "ecs.Text.change(java.lang.String)"
  - "ecs.Text.getGlyphRenderers()"
  - "ecs.Text.getX()"
  - "ecs.Text.getY()"
  - "ecs.Text.isCentered()"
  - "ecs.Text.rainbowify()"
  - "ecs.Text.setCentered(boolean)"
  - "ecs.Text.setColor(graphics.Color)"
  - "ecs.Text.setPosition(org.joml.Vector2f)"
  - "ecs.Text.setX(float)"
  - "ecs.Text.setY(float)"
  - "ecs.Text.update()"
  - "ecs.Text.zIndex()"
  langs:
  - "java"
  name: "Text"
  nameWithType: "Text"
  fullName: "ecs.Text"
  type: "Class"
  package: "ecs"
  syntax:
    content: "public class Text"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.Text.Text(java.lang.String,float,float)"
  id: "Text(java.lang.String,float,float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "Text(String string, float x, float y)"
  nameWithType: "Text.Text(String string, float x, float y)"
  fullName: "ecs.Text.Text(String string, float x, float y)"
  overload: "ecs.Text.Text*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Text(String string, float x, float y)"
    parameters:
    - id: "string"
      type: "java.lang.String"
      description: "the text to be rendered."
    - id: "x"
      type: "float"
      description: "the X position of the Text object."
    - id: "y"
      type: "float"
      description: "the Y position of the Text object."
- uid: "ecs.Text.Text(java.lang.String,fonts.Font,graphics.Color,float,float)"
  id: "Text(java.lang.String,fonts.Font,graphics.Color,float,float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "Text(String string, Font font, Color color, float x, float y)"
  nameWithType: "Text.Text(String string, Font font, Color color, float x, float y)"
  fullName: "ecs.Text.Text(String string, Font font, Color color, float x, float y)"
  overload: "ecs.Text.Text*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Text(String string, Font font, Color color, float x, float y)"
    parameters:
    - id: "string"
      type: "java.lang.String"
      description: "the text to be rendered."
    - id: "font"
      type: "fonts.Font"
      description: "the <xref uid=\"fonts.Font\" data-throw-if-not-resolved=\"false\">fonts.Font</xref> object that contains your preferred .ttf font file."
    - id: "color"
      type: "graphics.Color"
      description: "the <xref uid=\"graphics.Color\" data-throw-if-not-resolved=\"false\">graphics.Color</xref> object that contains your prefered RGBA color."
    - id: "x"
      type: "float"
      description: "the X position of the Text object."
    - id: "y"
      type: "float"
      description: "the Y position of the Text object."
- uid: "ecs.Text.Text(java.lang.String,fonts.Font,graphics.Color,float,float,int,boolean,boolean)"
  id: "Text(java.lang.String,fonts.Font,graphics.Color,float,float,int,boolean,boolean)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)"
  nameWithType: "Text.Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)"
  fullName: "ecs.Text.Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)"
  overload: "ecs.Text.Text*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)"
    parameters:
    - id: "string"
      type: "java.lang.String"
      description: "the text to be rendered."
    - id: "font"
      type: "fonts.Font"
      description: "the <xref uid=\"fonts.Font\" data-throw-if-not-resolved=\"false\">fonts.Font</xref> object that contains your preferred .ttf font file."
    - id: "color"
      type: "graphics.Color"
      description: "the <xref uid=\"graphics.Color\" data-throw-if-not-resolved=\"false\">graphics.Color</xref> object that contains your prefered RGBA color."
    - id: "x"
      type: "float"
      description: "the X position of the Text object."
    - id: "y"
      type: "float"
      description: "the Y position of the Text object."
    - id: "zIndex"
      type: "int"
      description: "the Z-Index of the Text Object (currently can only be set on creation, this will change in the future)."
    - id: "isSticky"
      type: "boolean"
      description: "boolean determining whether the text sticks in one position regardless of the camera position (isSticky = true) or if it will move in world space."
    - id: "isCentered"
      type: "boolean"
      description: "boolean determining whether the text is left aligned or center aligned. This can be changed after creation using .setCentered()."
- uid: "ecs.Text.Text(java.lang.String,graphics.Color,float,float)"
  id: "Text(java.lang.String,graphics.Color,float,float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "Text(String string, Color color, float x, float y)"
  nameWithType: "Text.Text(String string, Color color, float x, float y)"
  fullName: "ecs.Text.Text(String string, Color color, float x, float y)"
  overload: "ecs.Text.Text*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Text(String string, Color color, float x, float y)"
    parameters:
    - id: "string"
      type: "java.lang.String"
      description: "the text to be rendered."
    - id: "color"
      type: "graphics.Color"
      description: "the <xref uid=\"graphics.Color\" data-throw-if-not-resolved=\"false\">graphics.Color</xref> object that contains your prefered RGBA color."
    - id: "x"
      type: "float"
      description: "the X position of the Text object."
    - id: "y"
      type: "float"
      description: "the Y position of the Text object."
- uid: "ecs.Text.addX(float)"
  id: "addX(float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "addX(float x)"
  nameWithType: "Text.addX(float x)"
  fullName: "ecs.Text.addX(float x)"
  overload: "ecs.Text.addX*"
  type: "Method"
  package: "ecs"
  summary: "Add to the existing X position incrementally each time this method is called."
  syntax:
    content: "public void addX(float x)"
    parameters:
    - id: "x"
      type: "float"
      description: "amount to increment X position by."
- uid: "ecs.Text.addY(float)"
  id: "addY(float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "addY(float y)"
  nameWithType: "Text.addY(float y)"
  fullName: "ecs.Text.addY(float y)"
  overload: "ecs.Text.addY*"
  type: "Method"
  package: "ecs"
  summary: "Add to the existing Y position incrementally each time this method is called."
  syntax:
    content: "public void addY(float y)"
    parameters:
    - id: "y"
      type: "float"
      description: "amount to increment Y position by."
- uid: "ecs.Text.change(java.lang.String)"
  id: "change(java.lang.String)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "change(String string)"
  nameWithType: "Text.change(String string)"
  fullName: "ecs.Text.change(String string)"
  overload: "ecs.Text.change*"
  type: "Method"
  package: "ecs"
  summary: "This method is called when the user wants to modify the string in the Text object. This can be called anytime after object creation."
  syntax:
    content: "public void change(String string)"
    parameters:
    - id: "string"
      type: "java.lang.String"
      description: "the text to change the current string to."
- uid: "ecs.Text.getGlyphRenderers()"
  id: "getGlyphRenderers()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "getGlyphRenderers()"
  nameWithType: "Text.getGlyphRenderers()"
  fullName: "ecs.Text.getGlyphRenderers()"
  overload: "ecs.Text.getGlyphRenderers*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public ArrayList<GlyphRenderer> getGlyphRenderers()"
    return:
      type: "java.util.ArrayList<fonts.GlyphRenderer>"
- uid: "ecs.Text.getX()"
  id: "getX()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "getX()"
  nameWithType: "Text.getX()"
  fullName: "ecs.Text.getX()"
  overload: "ecs.Text.getX*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public float getX()"
    return:
      type: "float"
- uid: "ecs.Text.getY()"
  id: "getY()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "getY()"
  nameWithType: "Text.getY()"
  fullName: "ecs.Text.getY()"
  overload: "ecs.Text.getY*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public float getY()"
    return:
      type: "float"
- uid: "ecs.Text.isCentered()"
  id: "isCentered()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "isCentered()"
  nameWithType: "Text.isCentered()"
  fullName: "ecs.Text.isCentered()"
  overload: "ecs.Text.isCentered*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public boolean isCentered()"
    return:
      type: "boolean"
      description: "boolean value of isCentered."
- uid: "ecs.Text.rainbowify()"
  id: "rainbowify()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "rainbowify()"
  nameWithType: "Text.rainbowify()"
  fullName: "ecs.Text.rainbowify()"
  overload: "ecs.Text.rainbowify*"
  type: "Method"
  package: "ecs"
  summary: "Applies a rainbow effect to the Text, gradually changing the color of each Glyph in a rainbow."
  syntax:
    content: "public void rainbowify()"
- uid: "ecs.Text.setCentered(boolean)"
  id: "setCentered(boolean)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "setCentered(boolean centered)"
  nameWithType: "Text.setCentered(boolean centered)"
  fullName: "ecs.Text.setCentered(boolean centered)"
  overload: "ecs.Text.setCentered*"
  type: "Method"
  package: "ecs"
  summary: "Allows the user to change the text alignment after creation."
  syntax:
    content: "public void setCentered(boolean centered)"
    parameters:
    - id: "centered"
      type: "boolean"
      description: "boolean isCentered."
- uid: "ecs.Text.setColor(graphics.Color)"
  id: "setColor(graphics.Color)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "setColor(Color color)"
  nameWithType: "Text.setColor(Color color)"
  fullName: "ecs.Text.setColor(Color color)"
  overload: "ecs.Text.setColor*"
  type: "Method"
  package: "ecs"
  summary: "Set the color of the entire Text object."
  syntax:
    content: "public void setColor(Color color)"
    parameters:
    - id: "color"
      type: "graphics.Color"
      description: "RGBA Color object."
- uid: "ecs.Text.setPosition(org.joml.Vector2f)"
  id: "setPosition(org.joml.Vector2f)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "setPosition(Vector2f position)"
  nameWithType: "Text.setPosition(Vector2f position)"
  fullName: "ecs.Text.setPosition(Vector2f position)"
  overload: "ecs.Text.setPosition*"
  type: "Method"
  package: "ecs"
  summary: "Allows the user to change the position of the Text object."
  syntax:
    content: "public void setPosition(Vector2f position)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
      description: "Vector2f containing new position data."
- uid: "ecs.Text.setX(float)"
  id: "setX(float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "setX(float x)"
  nameWithType: "Text.setX(float x)"
  fullName: "ecs.Text.setX(float x)"
  overload: "ecs.Text.setX*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setX(float x)"
    parameters:
    - id: "x"
      type: "float"
- uid: "ecs.Text.setY(float)"
  id: "setY(float)"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "setY(float y)"
  nameWithType: "Text.setY(float y)"
  fullName: "ecs.Text.setY(float y)"
  overload: "ecs.Text.setY*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setY(float y)"
    parameters:
    - id: "y"
      type: "float"
- uid: "ecs.Text.update()"
  id: "update()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "update()"
  nameWithType: "Text.update()"
  fullName: "ecs.Text.update()"
  overload: "ecs.Text.update*"
  type: "Method"
  package: "ecs"
  summary: "Update method called for every text object by the scene.Scene.updateUI() method. This should not be called by general users."
  syntax:
    content: "public void update()"
- uid: "ecs.Text.zIndex()"
  id: "zIndex()"
  parent: "ecs.Text"
  langs:
  - "java"
  name: "zIndex()"
  nameWithType: "Text.zIndex()"
  fullName: "ecs.Text.zIndex()"
  overload: "ecs.Text.zIndex*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public int zIndex()"
    return:
      type: "int"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fonts.Font"
  name: "Font"
  nameWithType: "Font"
  fullName: "fonts.Font"
- uid: "graphics.Color"
  name: "Color"
  nameWithType: "Color"
  fullName: "graphics.Color"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "ecs.Text.Text*"
  name: "Text"
  nameWithType: "Text.Text"
  fullName: "ecs.Text.Text"
  package: "ecs"
- uid: "ecs.Text.update*"
  name: "update"
  nameWithType: "Text.update"
  fullName: "ecs.Text.update"
  package: "ecs"
- uid: "ecs.Text.change*"
  name: "change"
  nameWithType: "Text.change"
  fullName: "ecs.Text.change"
  package: "ecs"
- uid: "java.util.ArrayList<fonts.GlyphRenderer>"
  spec.java:
  - uid: "java.util.ArrayList"
    name: "ArrayList"
    fullName: "java.util.ArrayList"
  - name: "<"
    fullName: "<"
  - uid: "fonts.GlyphRenderer"
    name: "GlyphRenderer"
    fullName: "fonts.GlyphRenderer"
  - name: ">"
    fullName: ">"
- uid: "ecs.Text.getGlyphRenderers*"
  name: "getGlyphRenderers"
  nameWithType: "Text.getGlyphRenderers"
  fullName: "ecs.Text.getGlyphRenderers"
  package: "ecs"
- uid: "ecs.Text.setColor*"
  name: "setColor"
  nameWithType: "Text.setColor"
  fullName: "ecs.Text.setColor"
  package: "ecs"
- uid: "ecs.Text.rainbowify*"
  name: "rainbowify"
  nameWithType: "Text.rainbowify"
  fullName: "ecs.Text.rainbowify"
  package: "ecs"
- uid: "ecs.Text.isCentered*"
  name: "isCentered"
  nameWithType: "Text.isCentered"
  fullName: "ecs.Text.isCentered"
  package: "ecs"
- uid: "ecs.Text.setCentered*"
  name: "setCentered"
  nameWithType: "Text.setCentered"
  fullName: "ecs.Text.setCentered"
  package: "ecs"
- uid: "ecs.Text.zIndex*"
  name: "zIndex"
  nameWithType: "Text.zIndex"
  fullName: "ecs.Text.zIndex"
  package: "ecs"
- uid: "ecs.Text.getX*"
  name: "getX"
  nameWithType: "Text.getX"
  fullName: "ecs.Text.getX"
  package: "ecs"
- uid: "ecs.Text.getY*"
  name: "getY"
  nameWithType: "Text.getY"
  fullName: "ecs.Text.getY"
  package: "ecs"
- uid: "ecs.Text.setX*"
  name: "setX"
  nameWithType: "Text.setX"
  fullName: "ecs.Text.setX"
  package: "ecs"
- uid: "ecs.Text.setY*"
  name: "setY"
  nameWithType: "Text.setY"
  fullName: "ecs.Text.setY"
  package: "ecs"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "ecs.Text.setPosition*"
  name: "setPosition"
  nameWithType: "Text.setPosition"
  fullName: "ecs.Text.setPosition"
  package: "ecs"
- uid: "ecs.Text.addY*"
  name: "addY"
  nameWithType: "Text.addY"
  fullName: "ecs.Text.addY"
  package: "ecs"
- uid: "ecs.Text.addX*"
  name: "addX"
  nameWithType: "Text.addX"
  fullName: "ecs.Text.addX"
  package: "ecs"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "fonts.GlyphRenderer"
  name: "GlyphRenderer"
  nameWithType: "GlyphRenderer"
  fullName: "fonts.GlyphRenderer"
- uid: "java.util.ArrayList"
  name: "ArrayList"
  nameWithType: "ArrayList"
  fullName: "java.util.ArrayList"
