### YamlMime:ManagedReference
items:
- uid: "input.Gamepad"
  id: "Gamepad"
  parent: "input"
  children:
  - "input.Gamepad.Gamepad()"
  - "input.Gamepad.axis(int,int)"
  - "input.Gamepad.buttonPressed(int,int)"
  - "input.Gamepad.controllersAvailable()"
  langs:
  - "java"
  name: "Gamepad"
  nameWithType: "Gamepad"
  fullName: "input.Gamepad"
  type: "Class"
  package: "input"
  summary: "Class containing everything related to gamepad input.\nhttps://github.com/LWJGL/lwjgl3-wiki/wiki/2.6.3-Input-handling-with-GLFW\\#joystick-input"
  syntax:
    content: "public class Gamepad"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "input.Gamepad.Gamepad()"
  id: "Gamepad()"
  parent: "input.Gamepad"
  langs:
  - "java"
  name: "Gamepad()"
  nameWithType: "Gamepad.Gamepad()"
  fullName: "input.Gamepad.Gamepad()"
  overload: "input.Gamepad.Gamepad*"
  type: "Constructor"
  package: "input"
  syntax:
    content: "public Gamepad()"
- uid: "input.Gamepad.axis(int,int)"
  id: "axis(int,int)"
  parent: "input.Gamepad"
  langs:
  - "java"
  name: "axis(int controllerId, int axis)"
  nameWithType: "Gamepad.axis(int controllerId, int axis)"
  fullName: "input.Gamepad.axis(int controllerId, int axis)"
  overload: "input.Gamepad.axis*"
  type: "Method"
  package: "input"
  syntax:
    content: "public static float axis(int controllerId, int axis)"
    parameters:
    - id: "controllerId"
      type: "int"
      description: "An int representing the ID of a gamepad or controller"
    - id: "axis"
      type: "int"
      description: "An int representing the axis to be checked."
    return:
      type: "float"
      description: "Returns a float representing the directional state of the axis."
- uid: "input.Gamepad.buttonPressed(int,int)"
  id: "buttonPressed(int,int)"
  parent: "input.Gamepad"
  langs:
  - "java"
  name: "buttonPressed(int controllerId, int button)"
  nameWithType: "Gamepad.buttonPressed(int controllerId, int button)"
  fullName: "input.Gamepad.buttonPressed(int controllerId, int button)"
  overload: "input.Gamepad.buttonPressed*"
  type: "Method"
  package: "input"
  syntax:
    content: "public static boolean buttonPressed(int controllerId, int button)"
    parameters:
    - id: "controllerId"
      type: "int"
      description: "An int representing the ID of a gamepad or controller"
    - id: "button"
      type: "int"
      description: "An int representing the button to be checked."
    return:
      type: "boolean"
      description: "Returns a boolean true if the button is pressed, otherwise, it returns false."
- uid: "input.Gamepad.controllersAvailable()"
  id: "controllersAvailable()"
  parent: "input.Gamepad"
  langs:
  - "java"
  name: "controllersAvailable()"
  nameWithType: "Gamepad.controllersAvailable()"
  fullName: "input.Gamepad.controllersAvailable()"
  overload: "input.Gamepad.controllersAvailable*"
  type: "Method"
  package: "input"
  syntax:
    content: "public static int controllersAvailable()"
    return:
      type: "int"
      description: "Returns an int with the number of connected controllers."
references:
- uid: "input.Gamepad.Gamepad*"
  name: "Gamepad"
  nameWithType: "Gamepad.Gamepad"
  fullName: "input.Gamepad.Gamepad"
  package: "input"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "input.Gamepad.controllersAvailable*"
  name: "controllersAvailable"
  nameWithType: "Gamepad.controllersAvailable"
  fullName: "input.Gamepad.controllersAvailable"
  package: "input"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "input.Gamepad.buttonPressed*"
  name: "buttonPressed"
  nameWithType: "Gamepad.buttonPressed"
  fullName: "input.Gamepad.buttonPressed"
  package: "input"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "input.Gamepad.axis*"
  name: "axis"
  nameWithType: "Gamepad.axis"
  fullName: "input.Gamepad.axis"
  package: "input"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
