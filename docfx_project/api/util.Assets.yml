### YamlMime:ManagedReference
items:
- uid: "util.Assets"
  id: "Assets"
  parent: "util"
  children:
  - "util.Assets.Assets()"
  - "util.Assets.getAudioBuffer(java.lang.String)"
  - "util.Assets.getDataFile(java.lang.String)"
  - "util.Assets.getShader(java.lang.String)"
  - "util.Assets.getTexture(java.lang.String)"
  - "util.Assets.loadSpritesheet(java.lang.String,int,int,int,int)"
  langs:
  - "java"
  name: "Assets"
  nameWithType: "Assets"
  fullName: "util.Assets"
  type: "Class"
  package: "util"
  summary: "The Assets class contains methods to assist in loading common resources used by the engine from the filesystem as well as HashMaps to keep track of loaded resources. If the same path is loaded again via the Assets class, it will call the item up from the hashmap rather than reload it."
  syntax:
    content: "public class Assets"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "util.Assets.Assets()"
  id: "Assets()"
  parent: "util.Assets"
  langs:
  - "java"
  name: "Assets()"
  nameWithType: "Assets.Assets()"
  fullName: "util.Assets.Assets()"
  overload: "util.Assets.Assets*"
  type: "Constructor"
  package: "util"
  syntax:
    content: "public Assets()"
- uid: "util.Assets.getAudioBuffer(java.lang.String)"
  id: "getAudioBuffer(java.lang.String)"
  parent: "util.Assets"
  langs:
  - "java"
  name: "getAudioBuffer(String path)"
  nameWithType: "Assets.getAudioBuffer(String path)"
  fullName: "util.Assets.getAudioBuffer(String path)"
  overload: "util.Assets.getAudioBuffer*"
  type: "Method"
  package: "util"
  syntax:
    content: "public static AudioBuffer getAudioBuffer(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
    return:
      type: "audio.AudioBuffer"
- uid: "util.Assets.getDataFile(java.lang.String)"
  id: "getDataFile(java.lang.String)"
  parent: "util.Assets"
  langs:
  - "java"
  name: "getDataFile(String path)"
  nameWithType: "Assets.getDataFile(String path)"
  fullName: "util.Assets.getDataFile(String path)"
  overload: "util.Assets.getDataFile*"
  type: "Method"
  package: "util"
  summary: "Loads a text file from the filesystem and returns it in a String"
  syntax:
    content: "public static String getDataFile(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "to data file"
    return:
      type: "java.lang.String"
      description: "returns type String"
- uid: "util.Assets.getShader(java.lang.String)"
  id: "getShader(java.lang.String)"
  parent: "util.Assets"
  langs:
  - "java"
  name: "getShader(String path)"
  nameWithType: "Assets.getShader(String path)"
  fullName: "util.Assets.getShader(String path)"
  overload: "util.Assets.getShader*"
  type: "Method"
  package: "util"
  summary: "Loads a shader from the filesystem, compiles it, then returns type Shader."
  syntax:
    content: "public static Shader getShader(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "to GLSL shader resource"
    return:
      type: "graphics.Shader"
      description: "returns type Shader"
- uid: "util.Assets.getTexture(java.lang.String)"
  id: "getTexture(java.lang.String)"
  parent: "util.Assets"
  langs:
  - "java"
  name: "getTexture(String path)"
  nameWithType: "Assets.getTexture(String path)"
  fullName: "util.Assets.getTexture(String path)"
  overload: "util.Assets.getTexture*"
  type: "Method"
  package: "util"
  summary: "Loads a image from the filesystem, and returns a Texture."
  syntax:
    content: "public static Texture getTexture(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "to Texture resource (usually a .png file)"
    return:
      type: "graphics.Texture"
      description: "returns type Texture"
- uid: "util.Assets.loadSpritesheet(java.lang.String,int,int,int,int)"
  id: "loadSpritesheet(java.lang.String,int,int,int,int)"
  parent: "util.Assets"
  langs:
  - "java"
  name: "loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
  nameWithType: "Assets.loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
  fullName: "util.Assets.loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
  overload: "util.Assets.loadSpritesheet*"
  type: "Method"
  package: "util"
  summary: "Loads a image from the filesystem, and returns a Spritesheet object."
  syntax:
    content: "public static Spritesheet loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "to Texture resource (usually a .png file)"
    - id: "spriteWidth"
      type: "int"
      description: "of each sprite"
    - id: "spriteHeight"
      type: "int"
      description: "of each sprite"
    - id: "numSprites"
      type: "int"
      description: "of sprites in the sheet"
    - id: "spacing"
      type: "int"
      description: "spacing between sprites (0 if no spacing)"
    return:
      type: "graphics.Spritesheet"
      description: "returns type Spritesheet"
references:
- uid: "util.Assets.Assets*"
  name: "Assets"
  nameWithType: "Assets.Assets"
  fullName: "util.Assets.Assets"
  package: "util"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "graphics.Shader"
  name: "Shader"
  nameWithType: "Shader"
  fullName: "graphics.Shader"
- uid: "util.Assets.getShader*"
  name: "getShader"
  nameWithType: "Assets.getShader"
  fullName: "util.Assets.getShader"
  package: "util"
- uid: "util.Assets.getDataFile*"
  name: "getDataFile"
  nameWithType: "Assets.getDataFile"
  fullName: "util.Assets.getDataFile"
  package: "util"
- uid: "graphics.Texture"
  name: "Texture"
  nameWithType: "Texture"
  fullName: "graphics.Texture"
- uid: "util.Assets.getTexture*"
  name: "getTexture"
  nameWithType: "Assets.getTexture"
  fullName: "util.Assets.getTexture"
  package: "util"
- uid: "audio.AudioBuffer"
  name: "AudioBuffer"
  nameWithType: "AudioBuffer"
  fullName: "audio.AudioBuffer"
- uid: "util.Assets.getAudioBuffer*"
  name: "getAudioBuffer"
  nameWithType: "Assets.getAudioBuffer"
  fullName: "util.Assets.getAudioBuffer"
  package: "util"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "graphics.Spritesheet"
  name: "Spritesheet"
  nameWithType: "Spritesheet"
  fullName: "graphics.Spritesheet"
- uid: "util.Assets.loadSpritesheet*"
  name: "loadSpritesheet"
  nameWithType: "Assets.loadSpritesheet"
  fullName: "util.Assets.loadSpritesheet"
  package: "util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
