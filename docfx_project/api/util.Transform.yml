### YamlMime:ManagedReference
items:
- uid: "util.Transform"
  id: "Transform"
  parent: "util"
  children:
  - "util.Transform.Transform()"
  - "util.Transform.Transform(float,float,float,float)"
  - "util.Transform.Transform(float,float,float,float,float)"
  - "util.Transform.Transform(org.joml.Vector2f)"
  - "util.Transform.Transform(org.joml.Vector2f,float)"
  - "util.Transform.Transform(org.joml.Vector2f,float,org.joml.Vector2f)"
  - "util.Transform.Transform(org.joml.Vector2f,org.joml.Vector2f)"
  - "util.Transform.Transform(util.Transform)"
  - "util.Transform.addRotationDegree(float)"
  - "util.Transform.addRotationRadians(float)"
  - "util.Transform.addX(float)"
  - "util.Transform.addY(float)"
  - "util.Transform.copy()"
  - "util.Transform.copy(util.Transform)"
  - "util.Transform.equals(java.lang.Object)"
  - "util.Transform.getHeight()"
  - "util.Transform.getPosition()"
  - "util.Transform.getRotation()"
  - "util.Transform.getRotationRadians()"
  - "util.Transform.getScale()"
  - "util.Transform.getWidth()"
  - "util.Transform.getX()"
  - "util.Transform.getY()"
  - "util.Transform.scale"
  - "util.Transform.setPosition(org.joml.Vector2f)"
  - "util.Transform.setRotation(float)"
  - "util.Transform.setRotationRadians(float)"
  - "util.Transform.setScale(org.joml.Vector2f)"
  - "util.Transform.setX(float)"
  - "util.Transform.setY(float)"
  langs:
  - "java"
  name: "Transform"
  nameWithType: "Transform"
  fullName: "util.Transform"
  type: "Class"
  package: "util"
  summary: "Represents the position in X and Y coordinates, rotation and the scale (width and height)"
  syntax:
    content: "public class Transform"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "util.Transform.Transform()"
  id: "Transform()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform()"
  nameWithType: "Transform.Transform()"
  fullName: "util.Transform.Transform()"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  summary: "Creates a new empty transform."
  syntax:
    content: "public Transform()"
- uid: "util.Transform.Transform(float,float,float,float)"
  id: "Transform(float,float,float,float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(float x, float y, float w, float h)"
  nameWithType: "Transform.Transform(float x, float y, float w, float h)"
  fullName: "util.Transform.Transform(float x, float y, float w, float h)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  syntax:
    content: "public Transform(float x, float y, float w, float h)"
    parameters:
    - id: "x"
      type: "float"
      description: "X coordinate of the object"
    - id: "y"
      type: "float"
      description: "Y coordinate of the object"
    - id: "w"
      type: "float"
      description: "width of the object"
    - id: "h"
      type: "float"
      description: "height of the object"
- uid: "util.Transform.Transform(float,float,float,float,float)"
  id: "Transform(float,float,float,float,float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(float x, float y, float r, float w, float h)"
  nameWithType: "Transform.Transform(float x, float y, float r, float w, float h)"
  fullName: "util.Transform.Transform(float x, float y, float r, float w, float h)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  syntax:
    content: "public Transform(float x, float y, float r, float w, float h)"
    parameters:
    - id: "x"
      type: "float"
      description: "X coordinate of the object"
    - id: "y"
      type: "float"
      description: "Y coordinate of the object"
    - id: "r"
      type: "float"
      description: "Rotation of the object in degrees"
    - id: "w"
      type: "float"
      description: "width of the object"
    - id: "h"
      type: "float"
      description: "height of the object"
- uid: "util.Transform.Transform(org.joml.Vector2f)"
  id: "Transform(org.joml.Vector2f)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(Vector2f position)"
  nameWithType: "Transform.Transform(Vector2f position)"
  fullName: "util.Transform.Transform(Vector2f position)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  summary: "If only the position is passed, the scale is not, scale is created as an empty Vector2f."
  syntax:
    content: "public Transform(Vector2f position)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
      description: "X and Y coordinates as a Vector2f"
- uid: "util.Transform.Transform(org.joml.Vector2f,float)"
  id: "Transform(org.joml.Vector2f,float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(Vector2f position, float rotation)"
  nameWithType: "Transform.Transform(Vector2f position, float rotation)"
  fullName: "util.Transform.Transform(Vector2f position, float rotation)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  summary: "If only the position is passed, the scale is not, scale is created as an empty Vector2f."
  syntax:
    content: "public Transform(Vector2f position, float rotation)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
      description: "X and Y coordinates as a Vector2f"
    - id: "rotation"
      type: "float"
      description: "Rotation of the object in degrees"
- uid: "util.Transform.Transform(org.joml.Vector2f,float,org.joml.Vector2f)"
  id: "Transform(org.joml.Vector2f,float,org.joml.Vector2f)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(Vector2f position, float rotation, Vector2f scale)"
  nameWithType: "Transform.Transform(Vector2f position, float rotation, Vector2f scale)"
  fullName: "util.Transform.Transform(Vector2f position, float rotation, Vector2f scale)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  syntax:
    content: "public Transform(Vector2f position, float rotation, Vector2f scale)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
      description: "X and Y coordinates as a Vector2f"
    - id: "rotation"
      type: "float"
      description: "Rotation of the object in degrees"
    - id: "scale"
      type: "org.joml.Vector2f"
      description: "scale (width and height) of the object as a Vector2f"
- uid: "util.Transform.Transform(org.joml.Vector2f,org.joml.Vector2f)"
  id: "Transform(org.joml.Vector2f,org.joml.Vector2f)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(Vector2f position, Vector2f scale)"
  nameWithType: "Transform.Transform(Vector2f position, Vector2f scale)"
  fullName: "util.Transform.Transform(Vector2f position, Vector2f scale)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  syntax:
    content: "public Transform(Vector2f position, Vector2f scale)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
      description: "X and Y coordinates as a Vector2f"
    - id: "scale"
      type: "org.joml.Vector2f"
      description: "scale (width and height) of the object as a Vector2f"
- uid: "util.Transform.Transform(util.Transform)"
  id: "Transform(util.Transform)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "Transform(Transform transform)"
  nameWithType: "Transform.Transform(Transform transform)"
  fullName: "util.Transform.Transform(Transform transform)"
  overload: "util.Transform.Transform*"
  type: "Constructor"
  package: "util"
  summary: "Create a copy of a transform instance"
  syntax:
    content: "public Transform(Transform transform)"
    parameters:
    - id: "transform"
      type: "util.Transform"
      description: "the transform instance"
- uid: "util.Transform.addRotationDegree(float)"
  id: "addRotationDegree(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "addRotationDegree(float r)"
  nameWithType: "Transform.addRotationDegree(float r)"
  fullName: "util.Transform.addRotationDegree(float r)"
  overload: "util.Transform.addRotationDegree*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void addRotationDegree(float r)"
    parameters:
    - id: "r"
      type: "float"
- uid: "util.Transform.addRotationRadians(float)"
  id: "addRotationRadians(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "addRotationRadians(float r)"
  nameWithType: "Transform.addRotationRadians(float r)"
  fullName: "util.Transform.addRotationRadians(float r)"
  overload: "util.Transform.addRotationRadians*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void addRotationRadians(float r)"
    parameters:
    - id: "r"
      type: "float"
- uid: "util.Transform.addX(float)"
  id: "addX(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "addX(float x)"
  nameWithType: "Transform.addX(float x)"
  fullName: "util.Transform.addX(float x)"
  overload: "util.Transform.addX*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void addX(float x)"
    parameters:
    - id: "x"
      type: "float"
- uid: "util.Transform.addY(float)"
  id: "addY(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "addY(float y)"
  nameWithType: "Transform.addY(float y)"
  fullName: "util.Transform.addY(float y)"
  overload: "util.Transform.addY*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void addY(float y)"
    parameters:
    - id: "y"
      type: "float"
- uid: "util.Transform.copy()"
  id: "copy()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "copy()"
  nameWithType: "Transform.copy()"
  fullName: "util.Transform.copy()"
  overload: "util.Transform.copy*"
  type: "Method"
  package: "util"
  syntax:
    content: "public Transform copy()"
    return:
      type: "util.Transform"
      description: "Returns a new transform which is identical to this object, can be used to copy into a new physics.Transform object."
- uid: "util.Transform.copy(util.Transform)"
  id: "copy(util.Transform)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "copy(Transform to)"
  nameWithType: "Transform.copy(Transform to)"
  fullName: "util.Transform.copy(Transform to)"
  overload: "util.Transform.copy*"
  type: "Method"
  package: "util"
  summary: "Takes a reference to an external transform, and copies this physics.Transform to it."
  syntax:
    content: "public void copy(Transform to)"
    parameters:
    - id: "to"
      type: "util.Transform"
      description: "The physics.Transform to be changed."
- uid: "util.Transform.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "equals(Object o)"
  nameWithType: "Transform.equals(Object o)"
  fullName: "util.Transform.equals(Object o)"
  overload: "util.Transform.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "util"
  summary: "Checks to see if to Transforms are equal."
  syntax:
    content: "public boolean equals(Object o)"
    parameters:
    - id: "o"
      type: "java.lang.Object"
      description: "Transform to be checked for equality against this instance of util.Transform."
    return:
      type: "boolean"
      description: "Returns true if instances are the same, otherwise returns false."
- uid: "util.Transform.getHeight()"
  id: "getHeight()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getHeight()"
  nameWithType: "Transform.getHeight()"
  fullName: "util.Transform.getHeight()"
  overload: "util.Transform.getHeight*"
  type: "Method"
  package: "util"
  syntax:
    content: "public float getHeight()"
    return:
      type: "float"
- uid: "util.Transform.getPosition()"
  id: "getPosition()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getPosition()"
  nameWithType: "Transform.getPosition()"
  fullName: "util.Transform.getPosition()"
  overload: "util.Transform.getPosition*"
  type: "Method"
  package: "util"
  syntax:
    content: "public Vector2f getPosition()"
    return:
      type: "org.joml.Vector2f"
- uid: "util.Transform.getRotation()"
  id: "getRotation()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getRotation()"
  nameWithType: "Transform.getRotation()"
  fullName: "util.Transform.getRotation()"
  overload: "util.Transform.getRotation*"
  type: "Method"
  package: "util"
  syntax:
    content: "public float getRotation()"
    return:
      type: "float"
- uid: "util.Transform.getRotationRadians()"
  id: "getRotationRadians()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getRotationRadians()"
  nameWithType: "Transform.getRotationRadians()"
  fullName: "util.Transform.getRotationRadians()"
  overload: "util.Transform.getRotationRadians*"
  type: "Method"
  package: "util"
  syntax:
    content: "public float getRotationRadians()"
    return:
      type: "float"
- uid: "util.Transform.getScale()"
  id: "getScale()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getScale()"
  nameWithType: "Transform.getScale()"
  fullName: "util.Transform.getScale()"
  overload: "util.Transform.getScale*"
  type: "Method"
  package: "util"
  syntax:
    content: "public Vector2f getScale()"
    return:
      type: "org.joml.Vector2f"
- uid: "util.Transform.getWidth()"
  id: "getWidth()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getWidth()"
  nameWithType: "Transform.getWidth()"
  fullName: "util.Transform.getWidth()"
  overload: "util.Transform.getWidth*"
  type: "Method"
  package: "util"
  syntax:
    content: "public float getWidth()"
    return:
      type: "float"
- uid: "util.Transform.getX()"
  id: "getX()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getX()"
  nameWithType: "Transform.getX()"
  fullName: "util.Transform.getX()"
  overload: "util.Transform.getX*"
  type: "Method"
  package: "util"
  syntax:
    content: "public float getX()"
    return:
      type: "float"
- uid: "util.Transform.getY()"
  id: "getY()"
  parent: "util.Transform"
  langs:
  - "java"
  name: "getY()"
  nameWithType: "Transform.getY()"
  fullName: "util.Transform.getY()"
  overload: "util.Transform.getY*"
  type: "Method"
  package: "util"
  syntax:
    content: "public float getY()"
    return:
      type: "float"
- uid: "util.Transform.scale"
  id: "scale"
  parent: "util.Transform"
  langs:
  - "java"
  name: "scale"
  nameWithType: "Transform.scale"
  fullName: "util.Transform.scale"
  type: "Field"
  package: "util"
  syntax:
    content: "public Vector2f scale"
    return:
      type: "org.joml.Vector2f"
- uid: "util.Transform.setPosition(org.joml.Vector2f)"
  id: "setPosition(org.joml.Vector2f)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "setPosition(Vector2f position)"
  nameWithType: "Transform.setPosition(Vector2f position)"
  fullName: "util.Transform.setPosition(Vector2f position)"
  overload: "util.Transform.setPosition*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void setPosition(Vector2f position)"
    parameters:
    - id: "position"
      type: "org.joml.Vector2f"
- uid: "util.Transform.setRotation(float)"
  id: "setRotation(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "setRotation(float r)"
  nameWithType: "Transform.setRotation(float r)"
  fullName: "util.Transform.setRotation(float r)"
  overload: "util.Transform.setRotation*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void setRotation(float r)"
    parameters:
    - id: "r"
      type: "float"
- uid: "util.Transform.setRotationRadians(float)"
  id: "setRotationRadians(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "setRotationRadians(float r)"
  nameWithType: "Transform.setRotationRadians(float r)"
  fullName: "util.Transform.setRotationRadians(float r)"
  overload: "util.Transform.setRotationRadians*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void setRotationRadians(float r)"
    parameters:
    - id: "r"
      type: "float"
- uid: "util.Transform.setScale(org.joml.Vector2f)"
  id: "setScale(org.joml.Vector2f)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "setScale(Vector2f scale)"
  nameWithType: "Transform.setScale(Vector2f scale)"
  fullName: "util.Transform.setScale(Vector2f scale)"
  overload: "util.Transform.setScale*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void setScale(Vector2f scale)"
    parameters:
    - id: "scale"
      type: "org.joml.Vector2f"
- uid: "util.Transform.setX(float)"
  id: "setX(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "setX(float x)"
  nameWithType: "Transform.setX(float x)"
  fullName: "util.Transform.setX(float x)"
  overload: "util.Transform.setX*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void setX(float x)"
    parameters:
    - id: "x"
      type: "float"
- uid: "util.Transform.setY(float)"
  id: "setY(float)"
  parent: "util.Transform"
  langs:
  - "java"
  name: "setY(float y)"
  nameWithType: "Transform.setY(float y)"
  fullName: "util.Transform.setY(float y)"
  overload: "util.Transform.setY*"
  type: "Method"
  package: "util"
  syntax:
    content: "public void setY(float y)"
    parameters:
    - id: "y"
      type: "float"
references:
- uid: "util.Transform.Transform*"
  name: "Transform"
  nameWithType: "Transform.Transform"
  fullName: "util.Transform.Transform"
  package: "util"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "util.Transform.copy*"
  name: "copy"
  nameWithType: "Transform.copy"
  fullName: "util.Transform.copy"
  package: "util"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "util.Transform.equals*"
  name: "equals"
  nameWithType: "Transform.equals"
  fullName: "util.Transform.equals"
  package: "util"
- uid: "util.Transform.getX*"
  name: "getX"
  nameWithType: "Transform.getX"
  fullName: "util.Transform.getX"
  package: "util"
- uid: "util.Transform.getY*"
  name: "getY"
  nameWithType: "Transform.getY"
  fullName: "util.Transform.getY"
  package: "util"
- uid: "util.Transform.setY*"
  name: "setY"
  nameWithType: "Transform.setY"
  fullName: "util.Transform.setY"
  package: "util"
- uid: "util.Transform.setX*"
  name: "setX"
  nameWithType: "Transform.setX"
  fullName: "util.Transform.setX"
  package: "util"
- uid: "util.Transform.addY*"
  name: "addY"
  nameWithType: "Transform.addY"
  fullName: "util.Transform.addY"
  package: "util"
- uid: "util.Transform.addX*"
  name: "addX"
  nameWithType: "Transform.addX"
  fullName: "util.Transform.addX"
  package: "util"
- uid: "util.Transform.getWidth*"
  name: "getWidth"
  nameWithType: "Transform.getWidth"
  fullName: "util.Transform.getWidth"
  package: "util"
- uid: "util.Transform.getHeight*"
  name: "getHeight"
  nameWithType: "Transform.getHeight"
  fullName: "util.Transform.getHeight"
  package: "util"
- uid: "util.Transform.getRotation*"
  name: "getRotation"
  nameWithType: "Transform.getRotation"
  fullName: "util.Transform.getRotation"
  package: "util"
- uid: "util.Transform.setRotation*"
  name: "setRotation"
  nameWithType: "Transform.setRotation"
  fullName: "util.Transform.setRotation"
  package: "util"
- uid: "util.Transform.setRotationRadians*"
  name: "setRotationRadians"
  nameWithType: "Transform.setRotationRadians"
  fullName: "util.Transform.setRotationRadians"
  package: "util"
- uid: "util.Transform.getRotationRadians*"
  name: "getRotationRadians"
  nameWithType: "Transform.getRotationRadians"
  fullName: "util.Transform.getRotationRadians"
  package: "util"
- uid: "util.Transform.addRotationDegree*"
  name: "addRotationDegree"
  nameWithType: "Transform.addRotationDegree"
  fullName: "util.Transform.addRotationDegree"
  package: "util"
- uid: "util.Transform.addRotationRadians*"
  name: "addRotationRadians"
  nameWithType: "Transform.addRotationRadians"
  fullName: "util.Transform.addRotationRadians"
  package: "util"
- uid: "util.Transform.getPosition*"
  name: "getPosition"
  nameWithType: "Transform.getPosition"
  fullName: "util.Transform.getPosition"
  package: "util"
- uid: "util.Transform.setPosition*"
  name: "setPosition"
  nameWithType: "Transform.setPosition"
  fullName: "util.Transform.setPosition"
  package: "util"
- uid: "util.Transform.getScale*"
  name: "getScale"
  nameWithType: "Transform.getScale"
  fullName: "util.Transform.getScale"
  package: "util"
- uid: "util.Transform.setScale*"
  name: "setScale"
  nameWithType: "Transform.setScale"
  fullName: "util.Transform.setScale"
  package: "util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
