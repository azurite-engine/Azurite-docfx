### YamlMime:ManagedReference
items:
- uid: "input.Keyboard"
  id: "Keyboard"
  parent: "input"
  children:
  - "input.Keyboard.Keyboard()"
  - "input.Keyboard.getKey(int)"
  - "input.Keyboard.getKeyDown(int)"
  - "input.Keyboard.getKeyHeld(int)"
  - "input.Keyboard.getKeyUp(int)"
  - "input.Keyboard.keyDownOrHold(int)"
  - "input.Keyboard.keystateBitfields"
  - "input.Keyboard.setupCallbacks()"
  langs:
  - "java"
  name: "Keyboard"
  nameWithType: "Keyboard"
  fullName: "input.Keyboard"
  type: "Class"
  package: "input"
  summary: "Class containing everything related to keyboard input. Implementations of GLFW key callbacks are all found here. getKey, getKeyDown, getKeyUp, etc..."
  syntax:
    content: "public class Keyboard"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "input.Keyboard.Keyboard()"
  id: "Keyboard()"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "Keyboard()"
  nameWithType: "Keyboard.Keyboard()"
  fullName: "input.Keyboard.Keyboard()"
  overload: "input.Keyboard.Keyboard*"
  type: "Constructor"
  package: "input"
  syntax:
    content: "public Keyboard()"
- uid: "input.Keyboard.getKey(int)"
  id: "getKey(int)"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "getKey(int keycode)"
  nameWithType: "Keyboard.getKey(int keycode)"
  fullName: "input.Keyboard.getKey(int keycode)"
  overload: "input.Keyboard.getKey*"
  type: "Method"
  package: "input"
  syntax:
    content: "public static boolean getKey(int keycode)"
    parameters:
    - id: "keycode"
      type: "int"
      description: "keycode representing the key to be checked"
    return:
      type: "boolean"
      description: "Returns true if the key is currently pressed or held, otherwise returns false"
- uid: "input.Keyboard.getKeyDown(int)"
  id: "getKeyDown(int)"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "getKeyDown(int keycode)"
  nameWithType: "Keyboard.getKeyDown(int keycode)"
  fullName: "input.Keyboard.getKeyDown(int keycode)"
  overload: "input.Keyboard.getKeyDown*"
  type: "Method"
  package: "input"
  summary: "Returns true if a key is was just pressed, then returns false until the key is released and pressed again."
  syntax:
    content: "public static boolean getKeyDown(int keycode)"
    parameters:
    - id: "keycode"
      type: "int"
      description: "key-code representing the key to be checked."
    return:
      type: "boolean"
      description: "Returns true if the key was just pressed, otherwise returns false."
- uid: "input.Keyboard.getKeyHeld(int)"
  id: "getKeyHeld(int)"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "getKeyHeld(int keycode)"
  nameWithType: "Keyboard.getKeyHeld(int keycode)"
  fullName: "input.Keyboard.getKeyHeld(int keycode)"
  overload: "input.Keyboard.getKeyHeld*"
  type: "Method"
  package: "input"
  summary: "Returns true if a key was held."
  syntax:
    content: "public static boolean getKeyHeld(int keycode)"
    parameters:
    - id: "keycode"
      type: "int"
      description: "key-code representing the key to be checked."
    return:
      type: "boolean"
      description: "Returns true if the key was held, otherwise returns false."
- uid: "input.Keyboard.getKeyUp(int)"
  id: "getKeyUp(int)"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "getKeyUp(int keycode)"
  nameWithType: "Keyboard.getKeyUp(int keycode)"
  fullName: "input.Keyboard.getKeyUp(int keycode)"
  overload: "input.Keyboard.getKeyUp*"
  type: "Method"
  package: "input"
  summary: "Returns true if a key was just released."
  syntax:
    content: "public static boolean getKeyUp(int keycode)"
    parameters:
    - id: "keycode"
      type: "int"
      description: "key-code representing the key to be checked."
    return:
      type: "boolean"
      description: "Returns true if the key was just released, otherwise returns false."
- uid: "input.Keyboard.keyDownOrHold(int)"
  id: "keyDownOrHold(int)"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "keyDownOrHold(int keycode)"
  nameWithType: "Keyboard.keyDownOrHold(int keycode)"
  fullName: "input.Keyboard.keyDownOrHold(int keycode)"
  overload: "input.Keyboard.keyDownOrHold*"
  type: "Method"
  package: "input"
  syntax:
    content: "public static boolean keyDownOrHold(int keycode)"
    parameters:
    - id: "keycode"
      type: "int"
    return:
      type: "boolean"
- uid: "input.Keyboard.keystateBitfields"
  id: "keystateBitfields"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "keystateBitfields"
  nameWithType: "Keyboard.keystateBitfields"
  fullName: "input.Keyboard.keystateBitfields"
  type: "Field"
  package: "input"
  summary: "A bitfield array to store button states. First bit is key down Second bit is key up Third bit is key held"
  syntax:
    content: "public static byte[] keystateBitfields"
    return:
      type: "byte[]"
- uid: "input.Keyboard.setupCallbacks()"
  id: "setupCallbacks()"
  parent: "input.Keyboard"
  langs:
  - "java"
  name: "setupCallbacks()"
  nameWithType: "Keyboard.setupCallbacks()"
  fullName: "input.Keyboard.setupCallbacks()"
  overload: "input.Keyboard.setupCallbacks*"
  type: "Method"
  package: "input"
  summary: "Subscribes to key events and sets up GLFW key callback."
  syntax:
    content: "public static void setupCallbacks()"
references:
- uid: "input.Keyboard.Keyboard*"
  name: "Keyboard"
  nameWithType: "Keyboard.Keyboard"
  fullName: "input.Keyboard.Keyboard"
  package: "input"
- uid: "input.Keyboard.setupCallbacks*"
  name: "setupCallbacks"
  nameWithType: "Keyboard.setupCallbacks"
  fullName: "input.Keyboard.setupCallbacks"
  package: "input"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "input.Keyboard.getKey*"
  name: "getKey"
  nameWithType: "Keyboard.getKey"
  fullName: "input.Keyboard.getKey"
  package: "input"
- uid: "input.Keyboard.getKeyDown*"
  name: "getKeyDown"
  nameWithType: "Keyboard.getKeyDown"
  fullName: "input.Keyboard.getKeyDown"
  package: "input"
- uid: "input.Keyboard.keyDownOrHold*"
  name: "keyDownOrHold"
  nameWithType: "Keyboard.keyDownOrHold"
  fullName: "input.Keyboard.keyDownOrHold"
  package: "input"
- uid: "input.Keyboard.getKeyUp*"
  name: "getKeyUp"
  nameWithType: "Keyboard.getKeyUp"
  fullName: "input.Keyboard.getKeyUp"
  package: "input"
- uid: "input.Keyboard.getKeyHeld*"
  name: "getKeyHeld"
  nameWithType: "Keyboard.getKeyHeld"
  fullName: "input.Keyboard.getKeyHeld"
  package: "input"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
