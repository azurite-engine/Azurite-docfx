### YamlMime:ManagedReference
items:
- uid: "graphics.Primitive"
  id: "Primitive"
  parent: "graphics"
  children:
  - "graphics.Primitive.LINE"
  - "graphics.Primitive.QUAD"
  - "graphics.Primitive.elementCount"
  - "graphics.Primitive.elementCreation"
  - "graphics.Primitive.openglPrimitive"
  - "graphics.Primitive.valueOf(java.lang.String)"
  - "graphics.Primitive.values()"
  - "graphics.Primitive.vertexCount"
  langs:
  - "java"
  name: "Primitive"
  nameWithType: "Primitive"
  fullName: "graphics.Primitive"
  type: "Enum"
  package: "graphics"
  summary: "# Azurite #\n\nA primitive is a simple shape that contains all the information necessary to prepare an element buffer of that primitive's type. The primitives available are:\n\n *  Quadrilateral\n *  Line"
  syntax:
    content: "public enum Primitive extends Enum<Primitive>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.Primitive.LINE"
  id: "LINE"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "LINE"
  nameWithType: "Primitive.LINE"
  fullName: "graphics.Primitive.LINE"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final Primitive LINE"
    return:
      type: "graphics.Primitive"
- uid: "graphics.Primitive.Primitive(int,int,int,java.util.function.BiConsumer<java.nio.IntBuffer,java.lang.Integer>)"
  id: "Primitive(int,int,int,java.util.function.BiConsumer<java.nio.IntBuffer,java.lang.Integer>)"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)"
  nameWithType: "Primitive.Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)"
  fullName: "graphics.Primitive.Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)"
  overload: "graphics.Primitive.Primitive*"
  type: "Constructor"
  package: "graphics"
  syntax:
    content: "private Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)"
    parameters:
    - id: "vertexCount"
      type: "int"
    - id: "elementCount"
      type: "int"
    - id: "openglPrimitive"
      type: "int"
    - id: "elementCreation"
      type: "java.util.function.BiConsumer<java.nio.IntBuffer,java.lang.Integer>"
- uid: "graphics.Primitive.QUAD"
  id: "QUAD"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "QUAD"
  nameWithType: "Primitive.QUAD"
  fullName: "graphics.Primitive.QUAD"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final Primitive QUAD"
    return:
      type: "graphics.Primitive"
- uid: "graphics.Primitive.elementCount"
  id: "elementCount"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "elementCount"
  nameWithType: "Primitive.elementCount"
  fullName: "graphics.Primitive.elementCount"
  type: "Field"
  package: "graphics"
  summary: "Number of elements in the primitive"
  syntax:
    content: "public final int elementCount"
    return:
      type: "int"
- uid: "graphics.Primitive.elementCreation"
  id: "elementCreation"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "elementCreation"
  nameWithType: "Primitive.elementCreation"
  fullName: "graphics.Primitive.elementCreation"
  type: "Field"
  package: "graphics"
  summary: "Puts index data in the provided int buffer"
  syntax:
    content: "public final BiConsumer<IntBuffer,Integer> elementCreation"
    return:
      type: "java.util.function.BiConsumer<java.nio.IntBuffer,java.lang.Integer>"
- uid: "graphics.Primitive.openglPrimitive"
  id: "openglPrimitive"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "openglPrimitive"
  nameWithType: "Primitive.openglPrimitive"
  fullName: "graphics.Primitive.openglPrimitive"
  type: "Field"
  package: "graphics"
  summary: "Primitive ID that opengl expects"
  syntax:
    content: "public final int openglPrimitive"
    return:
      type: "int"
- uid: "graphics.Primitive.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "Primitive.valueOf(String name)"
  fullName: "graphics.Primitive.valueOf(String name)"
  overload: "graphics.Primitive.valueOf*"
  type: "Method"
  package: "graphics"
  syntax:
    content: "public static Primitive valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "graphics.Primitive"
- uid: "graphics.Primitive.values()"
  id: "values()"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "values()"
  nameWithType: "Primitive.values()"
  fullName: "graphics.Primitive.values()"
  overload: "graphics.Primitive.values*"
  type: "Method"
  package: "graphics"
  syntax:
    content: "public static Primitive[] values()"
    return:
      type: "graphics.Primitive[]"
- uid: "graphics.Primitive.vertexCount"
  id: "vertexCount"
  parent: "graphics.Primitive"
  langs:
  - "java"
  name: "vertexCount"
  nameWithType: "Primitive.vertexCount"
  fullName: "graphics.Primitive.vertexCount"
  type: "Field"
  package: "graphics"
  summary: "Number of vertices in the primitive"
  syntax:
    content: "public final int vertexCount"
    return:
      type: "int"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.util.function.BiConsumer<java.nio.IntBuffer,java.lang.Integer>"
  spec.java:
  - uid: "java.util.function.BiConsumer"
    name: "BiConsumer"
    fullName: "java.util.function.BiConsumer"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.IntBuffer"
    name: "IntBuffer"
    fullName: "java.nio.IntBuffer"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "graphics.Primitive.Primitive*"
  name: "Primitive"
  nameWithType: "Primitive.Primitive"
  fullName: "graphics.Primitive.Primitive"
  package: "graphics"
- uid: "graphics.Primitive[]"
  spec.java:
  - uid: "graphics.Primitive"
    name: "Primitive"
    fullName: "graphics.Primitive"
  - name: "[]"
    fullName: "[]"
- uid: "graphics.Primitive.values*"
  name: "values"
  nameWithType: "Primitive.values"
  fullName: "graphics.Primitive.values"
  package: "graphics"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "graphics.Primitive.valueOf*"
  name: "valueOf"
  nameWithType: "Primitive.valueOf"
  fullName: "graphics.Primitive.valueOf"
  package: "graphics"
- uid: "java.lang.Enum<graphics.Primitive>"
  name: "Enum<Primitive>"
  nameWithType: "Enum<Primitive>"
  fullName: "java.lang.Enum<graphics.Primitive>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.util.function.BiConsumer"
  name: "BiConsumer"
  nameWithType: "BiConsumer"
  fullName: "java.util.function.BiConsumer"
- uid: "java.nio.IntBuffer,java.lang.Integer"
  name: "IntBuffer,Integer"
  nameWithType: "IntBuffer,Integer"
  fullName: "java.nio.IntBuffer,java.lang.Integer"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
