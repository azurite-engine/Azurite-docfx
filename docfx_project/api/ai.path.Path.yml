### YamlMime:ManagedReference
items:
- uid: "ai.path.Path"
  id: "Path"
  parent: "ai.path"
  children:
  - "ai.path.Path.cost()"
  - "ai.path.Path.end()"
  - "ai.path.Path.start()"
  langs:
  - "java"
  name: "Path<Position>"
  nameWithType: "Path<Position>"
  fullName: "ai.path.Path<Position>"
  type: "Interface"
  package: "ai.path"
  summary: "Describes a path from one node to another with a fixed path cost value. This path is considered a direct path for the pathfinding algorithm."
  syntax:
    content: "public interface Path<Position>"
    typeParameters:
    - id: "Position"
- uid: "ai.path.Path.cost()"
  id: "cost()"
  parent: "ai.path.Path"
  langs:
  - "java"
  name: "cost()"
  nameWithType: "Path<Position>.cost()"
  fullName: "ai.path.Path<Position>.cost()"
  overload: "ai.path.Path.cost*"
  type: "Method"
  package: "ai.path"
  summary: "The costs to take this path. An artificial value to order multiple paths by costs and to find a the path with the lowest cost which is considered the shortest."
  syntax:
    content: "public abstract float cost()"
    return:
      type: "float"
      description: "the cost to take this path"
- uid: "ai.path.Path.end()"
  id: "end()"
  parent: "ai.path.Path"
  langs:
  - "java"
  name: "end()"
  nameWithType: "Path<Position>.end()"
  fullName: "ai.path.Path<Position>.end()"
  overload: "ai.path.Path.end*"
  type: "Method"
  package: "ai.path"
  summary: "The node where the path ends."
  syntax:
    content: "public abstract Node<Position> end()"
    return:
      type: "ai.path.Node<Position>"
      description: "the ending node"
- uid: "ai.path.Path.start()"
  id: "start()"
  parent: "ai.path.Path"
  langs:
  - "java"
  name: "start()"
  nameWithType: "Path<Position>.start()"
  fullName: "ai.path.Path<Position>.start()"
  overload: "ai.path.Path.start*"
  type: "Method"
  package: "ai.path"
  summary: "The node where the path starts."
  syntax:
    content: "public abstract Node<Position> start()"
    return:
      type: "ai.path.Node<Position>"
      description: "the starting node"
references:
- uid: "ai.path.Node<Position>"
  spec.java:
  - uid: "ai.path.Node"
    name: "Node"
    fullName: "ai.path.Node"
  - name: "<"
    fullName: "<"
  - uid: "Position"
    name: "Position"
    fullName: "Position"
  - name: ">"
    fullName: ">"
- uid: "ai.path.Path.start*"
  name: "start"
  nameWithType: "Path<Position>.start"
  fullName: "ai.path.Path<Position>.start"
  package: "ai.path"
- uid: "ai.path.Path.end*"
  name: "end"
  nameWithType: "Path<Position>.end"
  fullName: "ai.path.Path<Position>.end"
  package: "ai.path"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ai.path.Path.cost*"
  name: "cost"
  nameWithType: "Path<Position>.cost"
  fullName: "ai.path.Path<Position>.cost"
  package: "ai.path"
- uid: "Position"
  name: "Position"
  nameWithType: "Position"
  fullName: "Position"
- uid: "ai.path.Node"
  name: "Node"
  nameWithType: "Node"
  fullName: "ai.path.Node"
