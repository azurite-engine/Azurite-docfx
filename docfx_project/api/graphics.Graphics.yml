### YamlMime:ManagedReference
items:
- uid: "graphics.Graphics"
  id: "Graphics"
  parent: "graphics"
  children:
  - "graphics.Graphics.Graphics()"
  - "graphics.Graphics.background(float)"
  - "graphics.Graphics.background(float,float,float)"
  - "graphics.Graphics.background(graphics.Color)"
  - "graphics.Graphics.defaultBackground"
  - "graphics.Graphics.setDefaultBackground(float)"
  - "graphics.Graphics.setDefaultBackground(float,float,float)"
  - "graphics.Graphics.setDefaultBackground(graphics.Color)"
  langs:
  - "java"
  name: "Graphics"
  nameWithType: "Graphics"
  fullName: "graphics.Graphics"
  type: "Class"
  package: "graphics"
  summary: "# Azurite #\n\nA utility class for changing background colors. More functionality will probably added to this class as the engine starts to grow."
  syntax:
    content: "public class Graphics"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.Graphics.Graphics()"
  id: "Graphics()"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "Graphics()"
  nameWithType: "Graphics.Graphics()"
  fullName: "graphics.Graphics.Graphics()"
  overload: "graphics.Graphics.Graphics*"
  type: "Constructor"
  package: "graphics"
  syntax:
    content: "public Graphics()"
- uid: "graphics.Graphics.background(float)"
  id: "background(float)"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "background(float rgb)"
  nameWithType: "Graphics.background(float rgb)"
  fullName: "graphics.Graphics.background(float rgb)"
  overload: "graphics.Graphics.background*"
  type: "Method"
  package: "graphics"
  summary: "Set the GL clear color on a grayscale."
  syntax:
    content: "public static void background(float rgb)"
    parameters:
    - id: "rgb"
      type: "float"
      description: "Single value affecting red, green, and blue (0-255)"
- uid: "graphics.Graphics.background(float,float,float)"
  id: "background(float,float,float)"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "background(float r, float g, float b)"
  nameWithType: "Graphics.background(float r, float g, float b)"
  fullName: "graphics.Graphics.background(float r, float g, float b)"
  overload: "graphics.Graphics.background*"
  type: "Method"
  package: "graphics"
  summary: "Set the GL clear color"
  syntax:
    content: "public static void background(float r, float g, float b)"
    parameters:
    - id: "r"
      type: "float"
      description: "Red (0-255)"
    - id: "g"
      type: "float"
      description: "Green (0-255)"
    - id: "b"
      type: "float"
      description: "Blue (0-255)"
- uid: "graphics.Graphics.background(graphics.Color)"
  id: "background(graphics.Color)"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "background(Color color)"
  nameWithType: "Graphics.background(Color color)"
  fullName: "graphics.Graphics.background(Color color)"
  overload: "graphics.Graphics.background*"
  type: "Method"
  package: "graphics"
  summary: "Set the GL clear color"
  syntax:
    content: "public static void background(Color color)"
    parameters:
    - id: "color"
      type: "graphics.Color"
      description: "to set the clear color. Alpha is ignored"
- uid: "graphics.Graphics.defaultBackground"
  id: "defaultBackground"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "defaultBackground"
  nameWithType: "Graphics.defaultBackground"
  fullName: "graphics.Graphics.defaultBackground"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static Color defaultBackground"
    return:
      type: "graphics.Color"
- uid: "graphics.Graphics.setDefaultBackground(float)"
  id: "setDefaultBackground(float)"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "setDefaultBackground(float rgb)"
  nameWithType: "Graphics.setDefaultBackground(float rgb)"
  fullName: "graphics.Graphics.setDefaultBackground(float rgb)"
  overload: "graphics.Graphics.setDefaultBackground*"
  type: "Method"
  package: "graphics"
  summary: "Set the GL clear color for the DefaultRenderer on a greyscale."
  syntax:
    content: "public static void setDefaultBackground(float rgb)"
    parameters:
    - id: "rgb"
      type: "float"
      description: "Single value affecting red, green, and blue (0-255)"
- uid: "graphics.Graphics.setDefaultBackground(float,float,float)"
  id: "setDefaultBackground(float,float,float)"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "setDefaultBackground(float r, float g, float b)"
  nameWithType: "Graphics.setDefaultBackground(float r, float g, float b)"
  fullName: "graphics.Graphics.setDefaultBackground(float r, float g, float b)"
  overload: "graphics.Graphics.setDefaultBackground*"
  type: "Method"
  package: "graphics"
  summary: "Set the GL clear color for the DefaultRenderer"
  syntax:
    content: "public static void setDefaultBackground(float r, float g, float b)"
    parameters:
    - id: "r"
      type: "float"
      description: "Red (0-255)"
    - id: "g"
      type: "float"
      description: "Green (0-255)"
    - id: "b"
      type: "float"
      description: "Blue (0-255)"
- uid: "graphics.Graphics.setDefaultBackground(graphics.Color)"
  id: "setDefaultBackground(graphics.Color)"
  parent: "graphics.Graphics"
  langs:
  - "java"
  name: "setDefaultBackground(Color color)"
  nameWithType: "Graphics.setDefaultBackground(Color color)"
  fullName: "graphics.Graphics.setDefaultBackground(Color color)"
  overload: "graphics.Graphics.setDefaultBackground*"
  type: "Method"
  package: "graphics"
  summary: "Set the GL clear color for the DefaultRenderer"
  syntax:
    content: "public static void setDefaultBackground(Color color)"
    parameters:
    - id: "color"
      type: "graphics.Color"
      description: "to set the clear color. Alpha is ignored"
references:
- uid: "graphics.Graphics.Graphics*"
  name: "Graphics"
  nameWithType: "Graphics.Graphics"
  fullName: "graphics.Graphics.Graphics"
  package: "graphics"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "graphics.Graphics.background*"
  name: "background"
  nameWithType: "Graphics.background"
  fullName: "graphics.Graphics.background"
  package: "graphics"
- uid: "graphics.Color"
  name: "Color"
  nameWithType: "Color"
  fullName: "graphics.Color"
- uid: "graphics.Graphics.setDefaultBackground*"
  name: "setDefaultBackground"
  nameWithType: "Graphics.setDefaultBackground"
  fullName: "graphics.Graphics.setDefaultBackground"
  package: "graphics"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
