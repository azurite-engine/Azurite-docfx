### YamlMime:ManagedReference
items:
- uid: "physics.collision.shape.Face"
  id: "Face"
  parent: "physics.collision.shape"
  children:
  - "physics.collision.shape.Face.Face(physics.collision.shape.PrimitiveShape,org.joml.Vector2f,org.joml.Vector2f)"
  - "physics.collision.shape.Face.getAbsoluteFixPoint()"
  - "physics.collision.shape.Face.getNormal()"
  - "physics.collision.shape.Face.getRelativeFace()"
  - "physics.collision.shape.Face.getRelativeFixPoint()"
  langs:
  - "java"
  name: "Face"
  nameWithType: "Face"
  fullName: "physics.collision.shape.Face"
  type: "Class"
  package: "physics.collision.shape"
  syntax:
    content: "public class Face"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "physics.collision.shape.Face.Face(physics.collision.shape.PrimitiveShape,org.joml.Vector2f,org.joml.Vector2f)"
  id: "Face(physics.collision.shape.PrimitiveShape,org.joml.Vector2f,org.joml.Vector2f)"
  parent: "physics.collision.shape.Face"
  langs:
  - "java"
  name: "Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)"
  nameWithType: "Face.Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)"
  fullName: "physics.collision.shape.Face.Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)"
  overload: "physics.collision.shape.Face.Face*"
  type: "Constructor"
  package: "physics.collision.shape"
  syntax:
    content: "public Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)"
    parameters:
    - id: "parent"
      type: "physics.collision.shape.PrimitiveShape"
    - id: "relativePoint"
      type: "org.joml.Vector2f"
    - id: "relativeFace"
      type: "org.joml.Vector2f"
- uid: "physics.collision.shape.Face.getAbsoluteFixPoint()"
  id: "getAbsoluteFixPoint()"
  parent: "physics.collision.shape.Face"
  langs:
  - "java"
  name: "getAbsoluteFixPoint()"
  nameWithType: "Face.getAbsoluteFixPoint()"
  fullName: "physics.collision.shape.Face.getAbsoluteFixPoint()"
  overload: "physics.collision.shape.Face.getAbsoluteFixPoint*"
  type: "Method"
  package: "physics.collision.shape"
  syntax:
    content: "public Vector2f getAbsoluteFixPoint()"
    return:
      type: "org.joml.Vector2f"
- uid: "physics.collision.shape.Face.getNormal()"
  id: "getNormal()"
  parent: "physics.collision.shape.Face"
  langs:
  - "java"
  name: "getNormal()"
  nameWithType: "Face.getNormal()"
  fullName: "physics.collision.shape.Face.getNormal()"
  overload: "physics.collision.shape.Face.getNormal*"
  type: "Method"
  package: "physics.collision.shape"
  syntax:
    content: "public Vector2f getNormal()"
    return:
      type: "org.joml.Vector2f"
- uid: "physics.collision.shape.Face.getRelativeFace()"
  id: "getRelativeFace()"
  parent: "physics.collision.shape.Face"
  langs:
  - "java"
  name: "getRelativeFace()"
  nameWithType: "Face.getRelativeFace()"
  fullName: "physics.collision.shape.Face.getRelativeFace()"
  overload: "physics.collision.shape.Face.getRelativeFace*"
  type: "Method"
  package: "physics.collision.shape"
  syntax:
    content: "public Vector2f getRelativeFace()"
    return:
      type: "org.joml.Vector2f"
- uid: "physics.collision.shape.Face.getRelativeFixPoint()"
  id: "getRelativeFixPoint()"
  parent: "physics.collision.shape.Face"
  langs:
  - "java"
  name: "getRelativeFixPoint()"
  nameWithType: "Face.getRelativeFixPoint()"
  fullName: "physics.collision.shape.Face.getRelativeFixPoint()"
  overload: "physics.collision.shape.Face.getRelativeFixPoint*"
  type: "Method"
  package: "physics.collision.shape"
  syntax:
    content: "public Vector2f getRelativeFixPoint()"
    return:
      type: "org.joml.Vector2f"
references:
- uid: "physics.collision.shape.PrimitiveShape"
  name: "PrimitiveShape"
  nameWithType: "PrimitiveShape"
  fullName: "physics.collision.shape.PrimitiveShape"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "physics.collision.shape.Face.Face*"
  name: "Face"
  nameWithType: "Face.Face"
  fullName: "physics.collision.shape.Face.Face"
  package: "physics.collision.shape"
- uid: "physics.collision.shape.Face.getNormal*"
  name: "getNormal"
  nameWithType: "Face.getNormal"
  fullName: "physics.collision.shape.Face.getNormal"
  package: "physics.collision.shape"
- uid: "physics.collision.shape.Face.getRelativeFixPoint*"
  name: "getRelativeFixPoint"
  nameWithType: "Face.getRelativeFixPoint"
  fullName: "physics.collision.shape.Face.getRelativeFixPoint"
  package: "physics.collision.shape"
- uid: "physics.collision.shape.Face.getRelativeFace*"
  name: "getRelativeFace"
  nameWithType: "Face.getRelativeFace"
  fullName: "physics.collision.shape.Face.getRelativeFace"
  package: "physics.collision.shape"
- uid: "physics.collision.shape.Face.getAbsoluteFixPoint*"
  name: "getAbsoluteFixPoint"
  nameWithType: "Face.getAbsoluteFixPoint"
  fullName: "physics.collision.shape.Face.getAbsoluteFixPoint"
  package: "physics.collision.shape"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
