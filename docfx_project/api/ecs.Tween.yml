### YamlMime:ManagedReference
items:
- uid: "ecs.Tween"
  id: "Tween"
  parent: "ecs"
  children:
  - "ecs.Tween.Tween()"
  - "ecs.Tween.TweenMode"
  - "ecs.Tween.play()"
  - "ecs.Tween.setUpTweenObject(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float,ecs.Tween.TweenMode)"
  - "ecs.Tween.setUpTweenPosition(org.joml.Vector2f,org.joml.Vector2f,float,ecs.Tween.TweenMode)"
  - "ecs.Tween.start()"
  - "ecs.Tween.tweenFinished()"
  - "ecs.Tween.tweenFinishedAll()"
  - "ecs.Tween.update(float)"
  langs:
  - "java"
  name: "Tween"
  nameWithType: "Tween"
  fullName: "ecs.Tween"
  type: "Class"
  package: "ecs"
  summary: "This class provides Tweening with easing in and out for smooth movement from point to point. Great for moving platforms or moving AI to exact spot for desired time. Also great for changing values of any property really... including colors and size"
  syntax:
    content: "public class Tween extends Component"
  inheritance:
  - "java.lang.Object"
  - "ecs.Component"
  inheritedMembers:
  - "ecs.Component.compareTo(ecs.Component)"
  - "ecs.Component.debug()"
  - "ecs.Component.position()"
  - "ecs.Component.remove()"
  - "ecs.Component.setPosition(org.joml.Vector2f)"
  - "ecs.Component.start()"
  - "ecs.Component.update(float)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.Tween.Tween()"
  id: "Tween()"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "Tween()"
  nameWithType: "Tween.Tween()"
  fullName: "ecs.Tween.Tween()"
  overload: "ecs.Tween.Tween*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Tween()"
- uid: "ecs.Tween.play()"
  id: "play()"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "play()"
  nameWithType: "Tween.play()"
  fullName: "ecs.Tween.play()"
  overload: "ecs.Tween.play*"
  type: "Method"
  package: "ecs"
  summary: "After setting up all of the animations it will play them NOTE! - MUST USE setUpTween function first!"
  syntax:
    content: "public void play()"
- uid: "ecs.Tween.setUpTweenObject(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float,ecs.Tween.TweenMode)"
  id: "setUpTweenObject(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float,ecs.Tween.TweenMode)"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "setUpTweenObject(Vector2f object, Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
  nameWithType: "Tween.setUpTweenObject(Vector2f object, Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
  fullName: "ecs.Tween.setUpTweenObject(Vector2f object, Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
  overload: "ecs.Tween.setUpTweenObject*"
  type: "Method"
  package: "ecs"
  summary: "Smoothly changes object's value from startPos to target"
  syntax:
    content: "public void setUpTweenObject(Vector2f object, Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
    parameters:
    - id: "object"
      type: "org.joml.Vector2f"
      description: "Value to change using this tween. This can be Transform of an object like position or size or anything really that is Vector2f for now"
    - id: "startPos"
      type: "org.joml.Vector2f"
      description: "Starting position of the object"
    - id: "target"
      type: "org.joml.Vector2f"
      description: "Ending destination"
    - id: "duration"
      type: "float"
      description: "How long will it take for the object to reach its destination in seconds"
    - id: "tweenMode"
      type: "ecs.Tween.TweenMode"
      description: "Minor movement effects of the object"
- uid: "ecs.Tween.setUpTweenPosition(org.joml.Vector2f,org.joml.Vector2f,float,ecs.Tween.TweenMode)"
  id: "setUpTweenPosition(org.joml.Vector2f,org.joml.Vector2f,float,ecs.Tween.TweenMode)"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "setUpTweenPosition(Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
  nameWithType: "Tween.setUpTweenPosition(Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
  fullName: "ecs.Tween.setUpTweenPosition(Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
  overload: "ecs.Tween.setUpTweenPosition*"
  type: "Method"
  package: "ecs"
  summary: "Smoothly moves object from one position to another in desired time"
  syntax:
    content: "public void setUpTweenPosition(Vector2f startPos, Vector2f target, float duration, Tween.TweenMode tweenMode)"
    parameters:
    - id: "startPos"
      type: "org.joml.Vector2f"
      description: "Starting position of the object"
    - id: "target"
      type: "org.joml.Vector2f"
      description: "Ending destination"
    - id: "duration"
      type: "float"
      description: "How long will it take for the object to reach its destination in seconds"
    - id: "tweenMode"
      type: "ecs.Tween.TweenMode"
      description: "Minor movement effects of the object"
- uid: "ecs.Tween.start()"
  id: "start()"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "start()"
  nameWithType: "Tween.start()"
  fullName: "ecs.Tween.start()"
  overload: "ecs.Tween.start*"
  overridden: "ecs.Component.start()"
  type: "Method"
  package: "ecs"
  summary: "Called once on Component initialization."
  syntax:
    content: "public void start()"
- uid: "ecs.Tween.tweenFinished()"
  id: "tweenFinished()"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "tweenFinished()"
  nameWithType: "Tween.tweenFinished()"
  fullName: "ecs.Tween.tweenFinished()"
  overload: "ecs.Tween.tweenFinished*"
  type: "Method"
  package: "ecs"
  summary: "Checks whether current tween that is being processed has finished"
  syntax:
    content: "public boolean tweenFinished()"
    return:
      type: "boolean"
      description: "true if tween finished"
- uid: "ecs.Tween.tweenFinishedAll()"
  id: "tweenFinishedAll()"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "tweenFinishedAll()"
  nameWithType: "Tween.tweenFinishedAll()"
  fullName: "ecs.Tween.tweenFinishedAll()"
  overload: "ecs.Tween.tweenFinishedAll*"
  type: "Method"
  package: "ecs"
  summary: "Checks whether all of the tweens in the list have finished"
  syntax:
    content: "public boolean tweenFinishedAll()"
    return:
      type: "boolean"
      description: "true if all tweens finished"
- uid: "ecs.Tween.update(float)"
  id: "update(float)"
  parent: "ecs.Tween"
  langs:
  - "java"
  name: "update(float dt)"
  nameWithType: "Tween.update(float dt)"
  fullName: "ecs.Tween.update(float dt)"
  overload: "ecs.Tween.update*"
  overridden: "ecs.Component.update(float)"
  type: "Method"
  package: "ecs"
  summary: "Called once per frame for each Component"
  syntax:
    content: "public void update(float dt)"
    parameters:
    - id: "dt"
      type: "float"
references:
- uid: "ecs.Tween.Tween*"
  name: "Tween"
  nameWithType: "Tween.Tween"
  fullName: "ecs.Tween.Tween"
  package: "ecs"
- uid: "ecs.Tween.start*"
  name: "start"
  nameWithType: "Tween.start"
  fullName: "ecs.Tween.start"
  package: "ecs"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ecs.Tween.update*"
  name: "update"
  nameWithType: "Tween.update"
  fullName: "ecs.Tween.update"
  package: "ecs"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "ecs.Tween.TweenMode"
  name: "Tween.TweenMode"
  nameWithType: "Tween.TweenMode"
  fullName: "ecs.Tween.TweenMode"
- uid: "ecs.Tween.setUpTweenObject*"
  name: "setUpTweenObject"
  nameWithType: "Tween.setUpTweenObject"
  fullName: "ecs.Tween.setUpTweenObject"
  package: "ecs"
- uid: "ecs.Tween.setUpTweenPosition*"
  name: "setUpTweenPosition"
  nameWithType: "Tween.setUpTweenPosition"
  fullName: "ecs.Tween.setUpTweenPosition"
  package: "ecs"
- uid: "ecs.Tween.play*"
  name: "play"
  nameWithType: "Tween.play"
  fullName: "ecs.Tween.play"
  package: "ecs"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "ecs.Tween.tweenFinishedAll*"
  name: "tweenFinishedAll"
  nameWithType: "Tween.tweenFinishedAll"
  fullName: "ecs.Tween.tweenFinishedAll"
  package: "ecs"
- uid: "ecs.Tween.tweenFinished*"
  name: "tweenFinished"
  nameWithType: "Tween.tweenFinished"
  fullName: "ecs.Tween.tweenFinished"
  package: "ecs"
- uid: "ecs.Component"
  name: "Component"
  nameWithType: "Component"
  fullName: "ecs.Component"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "ecs.Component.compareTo(ecs.Component)"
  name: "Component.compareTo(Component)"
  nameWithType: "Component.compareTo(Component)"
  fullName: "ecs.Component.compareTo(ecs.Component)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "ecs.Component.debug()"
  name: "Component.debug()"
  nameWithType: "Component.debug()"
  fullName: "ecs.Component.debug()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "ecs.Component.start()"
  name: "Component.start()"
  nameWithType: "Component.start()"
  fullName: "ecs.Component.start()"
- uid: "ecs.Component.remove()"
  name: "Component.remove()"
  nameWithType: "Component.remove()"
  fullName: "ecs.Component.remove()"
- uid: "ecs.Component.position()"
  name: "Component.position()"
  nameWithType: "Component.position()"
  fullName: "ecs.Component.position()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "ecs.Component.setPosition(org.joml.Vector2f)"
  name: "Component.setPosition(Vector2f)"
  nameWithType: "Component.setPosition(Vector2f)"
  fullName: "ecs.Component.setPosition(org.joml.Vector2f)"
- uid: "ecs.Component.update(float)"
  name: "Component.update(float)"
  nameWithType: "Component.update(float)"
  fullName: "ecs.Component.update(float)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
