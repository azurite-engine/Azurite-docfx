### YamlMime:ManagedReference
items:
- uid: "ecs.Dynamics"
  id: "Dynamics"
  parent: "ecs"
  children:
  - "ecs.Dynamics.DEFAULT_FORCE_CAPACITY"
  - "ecs.Dynamics.Dynamics()"
  - "ecs.Dynamics.applyForce(physics.force.Force)"
  - "ecs.Dynamics.removeForce(java.lang.String)"
  - "ecs.Dynamics.update(float)"
  - "ecs.Dynamics.velocity()"
  langs:
  - "java"
  name: "Dynamics"
  nameWithType: "Dynamics"
  fullName: "ecs.Dynamics"
  type: "Class"
  package: "ecs"
  summary: "The <xref uid=\"ecs.Dynamics\" data-throw-if-not-resolved=\"false\">Dynamics</xref> manage movement of a <xref uid=\"ecs.GameObject\" data-throw-if-not-resolved=\"false\">GameObject</xref>."
  syntax:
    content: "public class Dynamics extends Component"
  inheritance:
  - "java.lang.Object"
  - "ecs.Component"
  inheritedMembers:
  - "ecs.Component.compareTo(ecs.Component)"
  - "ecs.Component.debug()"
  - "ecs.Component.position()"
  - "ecs.Component.remove()"
  - "ecs.Component.setPosition(org.joml.Vector2f)"
  - "ecs.Component.start()"
  - "ecs.Component.update(float)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.Dynamics.DEFAULT_FORCE_CAPACITY"
  id: "DEFAULT_FORCE_CAPACITY"
  parent: "ecs.Dynamics"
  langs:
  - "java"
  name: "DEFAULT_FORCE_CAPACITY"
  nameWithType: "Dynamics.DEFAULT_FORCE_CAPACITY"
  fullName: "ecs.Dynamics.DEFAULT_FORCE_CAPACITY"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final int DEFAULT_FORCE_CAPACITY"
    return:
      type: "int"
- uid: "ecs.Dynamics.Dynamics()"
  id: "Dynamics()"
  parent: "ecs.Dynamics"
  langs:
  - "java"
  name: "Dynamics()"
  nameWithType: "Dynamics.Dynamics()"
  fullName: "ecs.Dynamics.Dynamics()"
  overload: "ecs.Dynamics.Dynamics*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public Dynamics()"
- uid: "ecs.Dynamics.applyForce(physics.force.Force)"
  id: "applyForce(physics.force.Force)"
  parent: "ecs.Dynamics"
  langs:
  - "java"
  name: "applyForce(Force force)"
  nameWithType: "Dynamics.applyForce(Force force)"
  fullName: "ecs.Dynamics.applyForce(Force force)"
  overload: "ecs.Dynamics.applyForce*"
  type: "Method"
  package: "ecs"
  summary: "Applies another force to the physical entity that will be added to the physical entities effective force."
  syntax:
    content: "public final void applyForce(Force force)"
    parameters:
    - id: "force"
      type: "physics.force.Force"
      description: "a new force effecting this entity"
- uid: "ecs.Dynamics.removeForce(java.lang.String)"
  id: "removeForce(java.lang.String)"
  parent: "ecs.Dynamics"
  langs:
  - "java"
  name: "removeForce(String identifier)"
  nameWithType: "Dynamics.removeForce(String identifier)"
  fullName: "ecs.Dynamics.removeForce(String identifier)"
  overload: "ecs.Dynamics.removeForce*"
  type: "Method"
  package: "ecs"
  summary: "Removes all forces matching a given identifier. They will no longer effect the force of the entity."
  syntax:
    content: "public final boolean removeForce(String identifier)"
    parameters:
    - id: "identifier"
      type: "java.lang.String"
      description: "the identifier to find all matching forces"
    return:
      type: "boolean"
      description: "true if any force got removed"
- uid: "ecs.Dynamics.update(float)"
  id: "update(float)"
  parent: "ecs.Dynamics"
  langs:
  - "java"
  name: "update(float dt)"
  nameWithType: "Dynamics.update(float dt)"
  fullName: "ecs.Dynamics.update(float dt)"
  overload: "ecs.Dynamics.update*"
  overridden: "ecs.Component.update(float)"
  type: "Method"
  package: "ecs"
  summary: "Called once per frame for each Component"
  syntax:
    content: "public void update(float dt)"
    parameters:
    - id: "dt"
      type: "float"
- uid: "ecs.Dynamics.velocity()"
  id: "velocity()"
  parent: "ecs.Dynamics"
  langs:
  - "java"
  name: "velocity()"
  nameWithType: "Dynamics.velocity()"
  fullName: "ecs.Dynamics.velocity()"
  overload: "ecs.Dynamics.velocity*"
  type: "Method"
  package: "ecs"
  summary: "The current directional velocity of the physical entity."
  syntax:
    content: "public final Vector2f velocity()"
    return:
      type: "org.joml.Vector2f"
      description: "the current directional velocity"
references:
- uid: "ecs.Dynamics.Dynamics*"
  name: "Dynamics"
  nameWithType: "Dynamics.Dynamics"
  fullName: "ecs.Dynamics.Dynamics"
  package: "ecs"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "ecs.Dynamics.velocity*"
  name: "velocity"
  nameWithType: "Dynamics.velocity"
  fullName: "ecs.Dynamics.velocity"
  package: "ecs"
- uid: "physics.force.Force"
  name: "Force"
  nameWithType: "Force"
  fullName: "physics.force.Force"
- uid: "ecs.Dynamics.applyForce*"
  name: "applyForce"
  nameWithType: "Dynamics.applyForce"
  fullName: "ecs.Dynamics.applyForce"
  package: "ecs"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "ecs.Dynamics.removeForce*"
  name: "removeForce"
  nameWithType: "Dynamics.removeForce"
  fullName: "ecs.Dynamics.removeForce"
  package: "ecs"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ecs.Dynamics.update*"
  name: "update"
  nameWithType: "Dynamics.update"
  fullName: "ecs.Dynamics.update"
  package: "ecs"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ecs.Component"
  name: "Component"
  nameWithType: "Component"
  fullName: "ecs.Component"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "ecs.Component.compareTo(ecs.Component)"
  name: "Component.compareTo(Component)"
  nameWithType: "Component.compareTo(Component)"
  fullName: "ecs.Component.compareTo(ecs.Component)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "ecs.Component.debug()"
  name: "Component.debug()"
  nameWithType: "Component.debug()"
  fullName: "ecs.Component.debug()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "ecs.Component.start()"
  name: "Component.start()"
  nameWithType: "Component.start()"
  fullName: "ecs.Component.start()"
- uid: "ecs.Component.remove()"
  name: "Component.remove()"
  nameWithType: "Component.remove()"
  fullName: "ecs.Component.remove()"
- uid: "ecs.Component.position()"
  name: "Component.position()"
  nameWithType: "Component.position()"
  fullName: "ecs.Component.position()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "ecs.Component.setPosition(org.joml.Vector2f)"
  name: "Component.setPosition(Vector2f)"
  nameWithType: "Component.setPosition(Vector2f)"
  fullName: "ecs.Component.setPosition(org.joml.Vector2f)"
- uid: "ecs.Component.update(float)"
  name: "Component.update(float)"
  nameWithType: "Component.update(float)"
  fullName: "ecs.Component.update(float)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
