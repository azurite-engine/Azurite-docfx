### YamlMime:ManagedReference
items:
- uid: "io.json.JSONObject"
  id: "JSONObject"
  parent: "io.json"
  children:
  - "io.json.JSONObject.<T>addList(java.lang.String,java.util.List<T>,int,boolean,boolean)"
  - "io.json.JSONObject.JSONObject()"
  - "io.json.JSONObject.addArray(java.lang.String,boolean[],int,boolean,boolean)"
  - "io.json.JSONObject.addArray(java.lang.String,char[],int,boolean,boolean)"
  - "io.json.JSONObject.addArray(java.lang.String,double[],int,boolean,boolean)"
  - "io.json.JSONObject.addArray(java.lang.String,float[],int,boolean,boolean)"
  - "io.json.JSONObject.addArray(java.lang.String,int[],int,boolean,boolean)"
  - "io.json.JSONObject.addArray(java.lang.String,java.lang.Object[],int,boolean,boolean)"
  - "io.json.JSONObject.addArray(java.lang.String,java.lang.String[],int,boolean,boolean)"
  - "io.json.JSONObject.addObject(java.lang.String,java.lang.Object,int,boolean,boolean)"
  - "io.json.JSONObject.addVar(java.lang.String,boolean,int,boolean,boolean)"
  - "io.json.JSONObject.addVar(java.lang.String,char,int,boolean,boolean)"
  - "io.json.JSONObject.addVar(java.lang.String,double,int,boolean,boolean)"
  - "io.json.JSONObject.addVar(java.lang.String,float,int,boolean,boolean)"
  - "io.json.JSONObject.addVar(java.lang.String,int,int,boolean,boolean)"
  - "io.json.JSONObject.addVar(java.lang.String,java.lang.String,int,boolean,boolean)"
  - "io.json.JSONObject.endJSON()"
  - "io.json.JSONObject.getJSON()"
  - "io.json.JSONObject.startJSON()"
  langs:
  - "java"
  name: "JSONObject"
  nameWithType: "JSONObject"
  fullName: "io.json.JSONObject"
  type: "Class"
  package: "io.json"
  syntax:
    content: "public class JSONObject"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.json.JSONObject.<T>addList(java.lang.String,java.util.List<T>,int,boolean,boolean)"
  id: "<T>addList(java.lang.String,java.util.List<T>,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "<T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.<T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.<T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addList*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void <T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "list"
      type: "java.util.List<T>"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.JSONObject()"
  id: "JSONObject()"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "JSONObject()"
  nameWithType: "JSONObject.JSONObject()"
  fullName: "io.json.JSONObject.JSONObject()"
  overload: "io.json.JSONObject.JSONObject*"
  type: "Constructor"
  package: "io.json"
  syntax:
    content: "public JSONObject()"
- uid: "io.json.JSONObject.addArray(java.lang.String,boolean[],int,boolean,boolean)"
  id: "addArray(java.lang.String,boolean[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "boolean[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addArray(java.lang.String,char[],int,boolean,boolean)"
  id: "addArray(java.lang.String,char[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "char[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addArray(java.lang.String,double[],int,boolean,boolean)"
  id: "addArray(java.lang.String,double[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "double[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addArray(java.lang.String,float[],int,boolean,boolean)"
  id: "addArray(java.lang.String,float[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "float[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addArray(java.lang.String,int[],int,boolean,boolean)"
  id: "addArray(java.lang.String,int[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "int[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addArray(java.lang.String,java.lang.Object[],int,boolean,boolean)"
  id: "addArray(java.lang.String,java.lang.Object[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "java.lang.Object[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addArray(java.lang.String,java.lang.String[],int,boolean,boolean)"
  id: "addArray(java.lang.String,java.lang.String[],int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addArray*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "array"
      type: "java.lang.String[]"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addObject(java.lang.String,java.lang.Object,int,boolean,boolean)"
  id: "addObject(java.lang.String,java.lang.Object,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addObject*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "obj"
      type: "java.lang.Object"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addVar(java.lang.String,boolean,int,boolean,boolean)"
  id: "addVar(java.lang.String,boolean,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addVar*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addVar(java.lang.String,char,int,boolean,boolean)"
  id: "addVar(java.lang.String,char,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addVar*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "char"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addVar(java.lang.String,double,int,boolean,boolean)"
  id: "addVar(java.lang.String,double,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addVar*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addVar(java.lang.String,float,int,boolean,boolean)"
  id: "addVar(java.lang.String,float,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addVar*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "float"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addVar(java.lang.String,int,int,boolean,boolean)"
  id: "addVar(java.lang.String,int,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addVar*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "int"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.addVar(java.lang.String,java.lang.String,int,boolean,boolean)"
  id: "addVar(java.lang.String,java.lang.String,int,boolean,boolean)"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)"
  nameWithType: "JSONObject.addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)"
  fullName: "io.json.JSONObject.addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)"
  overload: "io.json.JSONObject.addVar*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    - id: "numTabs"
      type: "int"
    - id: "newLine"
      type: "boolean"
    - id: "comma"
      type: "boolean"
- uid: "io.json.JSONObject.endJSON()"
  id: "endJSON()"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "endJSON()"
  nameWithType: "JSONObject.endJSON()"
  fullName: "io.json.JSONObject.endJSON()"
  overload: "io.json.JSONObject.endJSON*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void endJSON()"
- uid: "io.json.JSONObject.getJSON()"
  id: "getJSON()"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "getJSON()"
  nameWithType: "JSONObject.getJSON()"
  fullName: "io.json.JSONObject.getJSON()"
  overload: "io.json.JSONObject.getJSON*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public String getJSON()"
    return:
      type: "java.lang.String"
- uid: "io.json.JSONObject.startJSON()"
  id: "startJSON()"
  parent: "io.json.JSONObject"
  langs:
  - "java"
  name: "startJSON()"
  nameWithType: "JSONObject.startJSON()"
  fullName: "io.json.JSONObject.startJSON()"
  overload: "io.json.JSONObject.startJSON*"
  type: "Method"
  package: "io.json"
  syntax:
    content: "public void startJSON()"
references:
- uid: "io.json.JSONObject.JSONObject*"
  name: "JSONObject"
  nameWithType: "JSONObject.JSONObject"
  fullName: "io.json.JSONObject.JSONObject"
  package: "io.json"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "io.json.JSONObject.getJSON*"
  name: "getJSON"
  nameWithType: "JSONObject.getJSON"
  fullName: "io.json.JSONObject.getJSON"
  package: "io.json"
- uid: "io.json.JSONObject.startJSON*"
  name: "startJSON"
  nameWithType: "JSONObject.startJSON"
  fullName: "io.json.JSONObject.startJSON"
  package: "io.json"
- uid: "io.json.JSONObject.endJSON*"
  name: "endJSON"
  nameWithType: "JSONObject.endJSON"
  fullName: "io.json.JSONObject.endJSON"
  package: "io.json"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "io.json.JSONObject.addObject*"
  name: "addObject"
  nameWithType: "JSONObject.addObject"
  fullName: "io.json.JSONObject.addObject"
  package: "io.json"
- uid: "io.json.JSONObject.addVar*"
  name: "addVar"
  nameWithType: "JSONObject.addVar"
  fullName: "io.json.JSONObject.addVar"
  package: "io.json"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "char"
  spec.java:
  - uid: "char"
    name: "char"
    fullName: "char"
- uid: "java.lang.String[]"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: "[]"
    fullName: "[]"
- uid: "io.json.JSONObject.addArray*"
  name: "addArray"
  nameWithType: "JSONObject.addArray"
  fullName: "io.json.JSONObject.addArray"
  package: "io.json"
- uid: "float[]"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
  - name: "[]"
    fullName: "[]"
- uid: "int[]"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
  - name: "[]"
    fullName: "[]"
- uid: "double[]"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
  - name: "[]"
    fullName: "[]"
- uid: "char[]"
  spec.java:
  - uid: "char"
    name: "char"
    fullName: "char"
  - name: "[]"
    fullName: "[]"
- uid: "boolean[]"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "java.util.List<T>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "io.json.JSONObject.addList*"
  name: "<T>addList"
  nameWithType: "JSONObject.<T>addList"
  fullName: "io.json.JSONObject.<T>addList"
  package: "io.json"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
