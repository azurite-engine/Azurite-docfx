### YamlMime:ManagedReference
items:
- uid: "util.Logger"
  id: "Logger"
  parent: "util"
  children:
  - "util.Logger.Logger()"
  - "util.Logger.debugLog(java.lang.String)"
  - "util.Logger.logAssetError(java.lang.String)"
  - "util.Logger.logEngineError()"
  - "util.Logger.logFatal(java.lang.String)"
  - "util.Logger.logInfo(java.lang.String)"
  - "util.Logger.logSystemCompatibilityError()"
  langs:
  - "java"
  name: "Logger"
  nameWithType: "Logger"
  fullName: "util.Logger"
  type: "Class"
  package: "util"
  syntax:
    content: "public class Logger"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "util.Logger.Logger()"
  id: "Logger()"
  parent: "util.Logger"
  langs:
  - "java"
  name: "Logger()"
  nameWithType: "Logger.Logger()"
  fullName: "util.Logger.Logger()"
  overload: "util.Logger.Logger*"
  type: "Constructor"
  package: "util"
  syntax:
    content: "public Logger()"
- uid: "util.Logger.debugLog(java.lang.String)"
  id: "debugLog(java.lang.String)"
  parent: "util.Logger"
  langs:
  - "java"
  name: "debugLog(String log)"
  nameWithType: "Logger.debugLog(String log)"
  fullName: "util.Logger.debugLog(String log)"
  overload: "util.Logger.debugLog*"
  type: "Method"
  package: "util"
  summary: "Logs debug information in format: `[{Class calling the method}] {info}`"
  syntax:
    content: "public static void debugLog(String log)"
    parameters:
    - id: "log"
      type: "java.lang.String"
      description: "The string passed to log."
- uid: "util.Logger.logAssetError(java.lang.String)"
  id: "logAssetError(java.lang.String)"
  parent: "util.Logger"
  langs:
  - "java"
  name: "logAssetError(String error)"
  nameWithType: "Logger.logAssetError(String error)"
  fullName: "util.Logger.logAssetError(String error)"
  overload: "util.Logger.logAssetError*"
  type: "Method"
  package: "util"
  summary: "Logs asset errors in format: `[ASSET ERROR] [{Class calling the method}] {error}`\nThen, exits with exit value: `-1`"
  syntax:
    content: "public static void logAssetError(String error)"
    parameters:
    - id: "error"
      type: "java.lang.String"
      description: "The asset error message passed to log."
- uid: "util.Logger.logEngineError()"
  id: "logEngineError()"
  parent: "util.Logger"
  langs:
  - "java"
  name: "logEngineError()"
  nameWithType: "Logger.logEngineError()"
  fullName: "util.Logger.logEngineError()"
  overload: "util.Logger.logEngineError*"
  type: "Method"
  package: "util"
  syntax:
    content: "public static void logEngineError()"
- uid: "util.Logger.logFatal(java.lang.String)"
  id: "logFatal(java.lang.String)"
  parent: "util.Logger"
  langs:
  - "java"
  name: "logFatal(String error)"
  nameWithType: "Logger.logFatal(String error)"
  fullName: "util.Logger.logFatal(String error)"
  overload: "util.Logger.logFatal*"
  type: "Method"
  package: "util"
  summary: "Logs fatal errors in format: `[FATAL] [{Class calling the method}] {error}`\nThen, exits with exit value: `-1`"
  syntax:
    content: "public static void logFatal(String error)"
    parameters:
    - id: "error"
      type: "java.lang.String"
      description: "The fatal error message passed to log."
- uid: "util.Logger.logInfo(java.lang.String)"
  id: "logInfo(java.lang.String)"
  parent: "util.Logger"
  langs:
  - "java"
  name: "logInfo(String info)"
  nameWithType: "Logger.logInfo(String info)"
  fullName: "util.Logger.logInfo(String info)"
  overload: "util.Logger.logInfo*"
  type: "Method"
  package: "util"
  summary: "Logs information in format: `[INFO] [{Class calling the method}] {info}`"
  syntax:
    content: "public static void logInfo(String info)"
    parameters:
    - id: "info"
      type: "java.lang.String"
      description: "The string passed to log."
- uid: "util.Logger.logSystemCompatibilityError()"
  id: "logSystemCompatibilityError()"
  parent: "util.Logger"
  langs:
  - "java"
  name: "logSystemCompatibilityError()"
  nameWithType: "Logger.logSystemCompatibilityError()"
  fullName: "util.Logger.logSystemCompatibilityError()"
  overload: "util.Logger.logSystemCompatibilityError*"
  type: "Method"
  package: "util"
  syntax:
    content: "public static void logSystemCompatibilityError()"
references:
- uid: "util.Logger.Logger*"
  name: "Logger"
  nameWithType: "Logger.Logger"
  fullName: "util.Logger.Logger"
  package: "util"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "util.Logger.logFatal*"
  name: "logFatal"
  nameWithType: "Logger.logFatal"
  fullName: "util.Logger.logFatal"
  package: "util"
- uid: "util.Logger.logAssetError*"
  name: "logAssetError"
  nameWithType: "Logger.logAssetError"
  fullName: "util.Logger.logAssetError"
  package: "util"
- uid: "util.Logger.logInfo*"
  name: "logInfo"
  nameWithType: "Logger.logInfo"
  fullName: "util.Logger.logInfo"
  package: "util"
- uid: "util.Logger.logSystemCompatibilityError*"
  name: "logSystemCompatibilityError"
  nameWithType: "Logger.logSystemCompatibilityError"
  fullName: "util.Logger.logSystemCompatibilityError"
  package: "util"
- uid: "util.Logger.logEngineError*"
  name: "logEngineError"
  nameWithType: "Logger.logEngineError"
  fullName: "util.Logger.logEngineError"
  package: "util"
- uid: "util.Logger.debugLog*"
  name: "debugLog"
  nameWithType: "Logger.debugLog"
  fullName: "util.Logger.debugLog"
  package: "util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
