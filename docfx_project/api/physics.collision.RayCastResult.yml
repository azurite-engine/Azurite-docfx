### YamlMime:ManagedReference
items:
- uid: "physics.collision.RayCastResult"
  id: "RayCastResult"
  parent: "physics.collision"
  children:
  - "physics.collision.RayCastResult.RayCastResult()"
  - "physics.collision.RayCastResult.RayCastResult(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float)"
  - "physics.collision.RayCastResult.didHit()"
  - "physics.collision.RayCastResult.getNormal()"
  - "physics.collision.RayCastResult.getPoint()"
  - "physics.collision.RayCastResult.getStrike()"
  - "physics.collision.RayCastResult.getStrikeLength()"
  langs:
  - "java"
  name: "RayCastResult"
  nameWithType: "RayCastResult"
  fullName: "physics.collision.RayCastResult"
  type: "Class"
  package: "physics.collision"
  syntax:
    content: "public class RayCastResult"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "physics.collision.RayCastResult.RayCastResult()"
  id: "RayCastResult()"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "RayCastResult()"
  nameWithType: "RayCastResult.RayCastResult()"
  fullName: "physics.collision.RayCastResult.RayCastResult()"
  overload: "physics.collision.RayCastResult.RayCastResult*"
  type: "Constructor"
  package: "physics.collision"
  summary: "Create a RayCastResult, where the target was not hit."
  syntax:
    content: "public RayCastResult()"
- uid: "physics.collision.RayCastResult.RayCastResult(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float)"
  id: "RayCastResult(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float)"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)"
  nameWithType: "RayCastResult.RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)"
  fullName: "physics.collision.RayCastResult.RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)"
  overload: "physics.collision.RayCastResult.RayCastResult*"
  type: "Constructor"
  package: "physics.collision"
  summary: "Create a successful raycast result with details collision information."
  syntax:
    content: "public RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)"
    parameters:
    - id: "point"
      type: "org.joml.Vector2f"
      description: "the point, where the raycast hit"
    - id: "normal"
      type: "org.joml.Vector2f"
      description: "the normal on the face of the object that got hit"
    - id: "strike"
      type: "org.joml.Vector2f"
      description: "the vector from raycast start to the point"
    - id: "strikeLength"
      type: "float"
      description: "the distance from the raycast start to the point"
- uid: "physics.collision.RayCastResult.didHit()"
  id: "didHit()"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "didHit()"
  nameWithType: "RayCastResult.didHit()"
  fullName: "physics.collision.RayCastResult.didHit()"
  overload: "physics.collision.RayCastResult.didHit*"
  type: "Method"
  package: "physics.collision"
  syntax:
    content: "public boolean didHit()"
    return:
      type: "boolean"
- uid: "physics.collision.RayCastResult.getNormal()"
  id: "getNormal()"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "getNormal()"
  nameWithType: "RayCastResult.getNormal()"
  fullName: "physics.collision.RayCastResult.getNormal()"
  overload: "physics.collision.RayCastResult.getNormal*"
  type: "Method"
  package: "physics.collision"
  syntax:
    content: "public Vector2f getNormal()"
    return:
      type: "org.joml.Vector2f"
- uid: "physics.collision.RayCastResult.getPoint()"
  id: "getPoint()"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "getPoint()"
  nameWithType: "RayCastResult.getPoint()"
  fullName: "physics.collision.RayCastResult.getPoint()"
  overload: "physics.collision.RayCastResult.getPoint*"
  type: "Method"
  package: "physics.collision"
  syntax:
    content: "public Vector2f getPoint()"
    return:
      type: "org.joml.Vector2f"
- uid: "physics.collision.RayCastResult.getStrike()"
  id: "getStrike()"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "getStrike()"
  nameWithType: "RayCastResult.getStrike()"
  fullName: "physics.collision.RayCastResult.getStrike()"
  overload: "physics.collision.RayCastResult.getStrike*"
  type: "Method"
  package: "physics.collision"
  syntax:
    content: "public Vector2f getStrike()"
    return:
      type: "org.joml.Vector2f"
- uid: "physics.collision.RayCastResult.getStrikeLength()"
  id: "getStrikeLength()"
  parent: "physics.collision.RayCastResult"
  langs:
  - "java"
  name: "getStrikeLength()"
  nameWithType: "RayCastResult.getStrikeLength()"
  fullName: "physics.collision.RayCastResult.getStrikeLength()"
  overload: "physics.collision.RayCastResult.getStrikeLength*"
  type: "Method"
  package: "physics.collision"
  syntax:
    content: "public float getStrikeLength()"
    return:
      type: "float"
references:
- uid: "physics.collision.RayCastResult.RayCastResult*"
  name: "RayCastResult"
  nameWithType: "RayCastResult.RayCastResult"
  fullName: "physics.collision.RayCastResult.RayCastResult"
  package: "physics.collision"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "physics.collision.RayCastResult.getStrikeLength*"
  name: "getStrikeLength"
  nameWithType: "RayCastResult.getStrikeLength"
  fullName: "physics.collision.RayCastResult.getStrikeLength"
  package: "physics.collision"
- uid: "physics.collision.RayCastResult.getNormal*"
  name: "getNormal"
  nameWithType: "RayCastResult.getNormal"
  fullName: "physics.collision.RayCastResult.getNormal"
  package: "physics.collision"
- uid: "physics.collision.RayCastResult.getPoint*"
  name: "getPoint"
  nameWithType: "RayCastResult.getPoint"
  fullName: "physics.collision.RayCastResult.getPoint"
  package: "physics.collision"
- uid: "physics.collision.RayCastResult.getStrike*"
  name: "getStrike"
  nameWithType: "RayCastResult.getStrike"
  fullName: "physics.collision.RayCastResult.getStrike"
  package: "physics.collision"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "physics.collision.RayCastResult.didHit*"
  name: "didHit"
  nameWithType: "RayCastResult.didHit"
  fullName: "physics.collision.RayCastResult.didHit"
  package: "physics.collision"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
