### YamlMime:ManagedReference
items:
- uid: "io.token.RepetitiveTokenReader"
  id: "RepetitiveTokenReader"
  parent: "io.token"
  children:
  - "io.token.RepetitiveTokenReader.NO_LIMIT"
  - "io.token.RepetitiveTokenReader.RepetitiveTokenReader(java.lang.String,java.lang.String,int)"
  - "io.token.RepetitiveTokenReader.RepetitiveTokenReader(java.lang.String,java.lang.String,int,int)"
  - "io.token.RepetitiveTokenReader.limit"
  - "io.token.RepetitiveTokenReader.read(java.util.Scanner)"
  langs:
  - "java"
  name: "RepetitiveTokenReader"
  nameWithType: "RepetitiveTokenReader"
  fullName: "io.token.RepetitiveTokenReader"
  type: "Class"
  package: "io.token"
  syntax:
    content: "public class RepetitiveTokenReader extends TokenReader"
  inheritance:
  - "java.lang.Object"
  - "io.token.TokenReader"
  inheritedMembers:
  - "io.token.TokenReader.canRead(java.util.Scanner)"
  - "io.token.TokenReader.compareTo(io.token.TokenReader)"
  - "io.token.TokenReader.read(java.util.Scanner)"
  - "io.token.TokenReader.toString()"
  - "io.token.TokenReader.type()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.token.RepetitiveTokenReader.NO_LIMIT"
  id: "NO_LIMIT"
  parent: "io.token.RepetitiveTokenReader"
  langs:
  - "java"
  name: "NO_LIMIT"
  nameWithType: "RepetitiveTokenReader.NO_LIMIT"
  fullName: "io.token.RepetitiveTokenReader.NO_LIMIT"
  type: "Field"
  package: "io.token"
  syntax:
    content: "public static final int NO_LIMIT"
    return:
      type: "int"
- uid: "io.token.RepetitiveTokenReader.RepetitiveTokenReader(java.lang.String,java.lang.String,int)"
  id: "RepetitiveTokenReader(java.lang.String,java.lang.String,int)"
  parent: "io.token.RepetitiveTokenReader"
  langs:
  - "java"
  name: "RepetitiveTokenReader(String targetType, String target, int limit)"
  nameWithType: "RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String target, int limit)"
  fullName: "io.token.RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String target, int limit)"
  overload: "io.token.RepetitiveTokenReader.RepetitiveTokenReader*"
  type: "Constructor"
  package: "io.token"
  syntax:
    content: "public RepetitiveTokenReader(String targetType, String target, int limit)"
    parameters:
    - id: "targetType"
      type: "java.lang.String"
    - id: "target"
      type: "java.lang.String"
    - id: "limit"
      type: "int"
- uid: "io.token.RepetitiveTokenReader.RepetitiveTokenReader(java.lang.String,java.lang.String,int,int)"
  id: "RepetitiveTokenReader(java.lang.String,java.lang.String,int,int)"
  parent: "io.token.RepetitiveTokenReader"
  langs:
  - "java"
  name: "RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)"
  nameWithType: "RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)"
  fullName: "io.token.RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)"
  overload: "io.token.RepetitiveTokenReader.RepetitiveTokenReader*"
  type: "Constructor"
  package: "io.token"
  syntax:
    content: "public RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)"
    parameters:
    - id: "targetType"
      type: "java.lang.String"
    - id: "pattern"
      type: "java.lang.String"
    - id: "optionalPrio"
      type: "int"
    - id: "limit"
      type: "int"
- uid: "io.token.RepetitiveTokenReader.limit"
  id: "limit"
  parent: "io.token.RepetitiveTokenReader"
  langs:
  - "java"
  name: "limit"
  nameWithType: "RepetitiveTokenReader.limit"
  fullName: "io.token.RepetitiveTokenReader.limit"
  type: "Field"
  package: "io.token"
  syntax:
    content: "protected final int limit"
    return:
      type: "int"
- uid: "io.token.RepetitiveTokenReader.read(java.util.Scanner)"
  id: "read(java.util.Scanner)"
  parent: "io.token.RepetitiveTokenReader"
  langs:
  - "java"
  name: "read(Scanner scanner)"
  nameWithType: "RepetitiveTokenReader.read(Scanner scanner)"
  fullName: "io.token.RepetitiveTokenReader.read(Scanner scanner)"
  overload: "io.token.RepetitiveTokenReader.read*"
  overridden: "io.token.TokenReader.read(java.util.Scanner)"
  type: "Method"
  package: "io.token"
  syntax:
    content: "public Token read(Scanner scanner)"
    parameters:
    - id: "scanner"
      type: "java.util.Scanner"
    return:
      type: "io.token.Token"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "io.token.RepetitiveTokenReader.RepetitiveTokenReader*"
  name: "RepetitiveTokenReader"
  nameWithType: "RepetitiveTokenReader.RepetitiveTokenReader"
  fullName: "io.token.RepetitiveTokenReader.RepetitiveTokenReader"
  package: "io.token"
- uid: "java.util.Scanner"
  spec.java:
  - uid: "java.util.Scanner"
    name: "Scanner"
    fullName: "java.util.Scanner"
- uid: "io.token.Token"
  name: "Token"
  nameWithType: "Token"
  fullName: "io.token.Token"
- uid: "io.token.RepetitiveTokenReader.read*"
  name: "read"
  nameWithType: "RepetitiveTokenReader.read"
  fullName: "io.token.RepetitiveTokenReader.read"
  package: "io.token"
- uid: "io.token.TokenReader"
  name: "TokenReader"
  nameWithType: "TokenReader"
  fullName: "io.token.TokenReader"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "io.token.TokenReader.toString()"
  name: "TokenReader.toString()"
  nameWithType: "TokenReader.toString()"
  fullName: "io.token.TokenReader.toString()"
- uid: "io.token.TokenReader.compareTo(io.token.TokenReader)"
  name: "TokenReader.compareTo(TokenReader)"
  nameWithType: "TokenReader.compareTo(TokenReader)"
  fullName: "io.token.TokenReader.compareTo(io.token.TokenReader)"
- uid: "io.token.TokenReader.type()"
  name: "TokenReader.type()"
  nameWithType: "TokenReader.type()"
  fullName: "io.token.TokenReader.type()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "io.token.TokenReader.read(java.util.Scanner)"
  name: "TokenReader.read(Scanner)"
  nameWithType: "TokenReader.read(Scanner)"
  fullName: "io.token.TokenReader.read(java.util.Scanner)"
- uid: "io.token.TokenReader.canRead(java.util.Scanner)"
  name: "TokenReader.canRead(Scanner)"
  nameWithType: "TokenReader.canRead(Scanner)"
  fullName: "io.token.TokenReader.canRead(java.util.Scanner)"
