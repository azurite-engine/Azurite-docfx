### YamlMime:ManagedReference
items:
- uid: "graphics.Spritesheet"
  id: "Spritesheet"
  parent: "graphics"
  children:
  - "graphics.Spritesheet.Spritesheet(graphics.Texture,int,int,int,int)"
  - "graphics.Spritesheet.getSize()"
  - "graphics.Spritesheet.getSprite(int)"
  - "graphics.Spritesheet.getSprites()"
  langs:
  - "java"
  name: "Spritesheet"
  nameWithType: "Spritesheet"
  fullName: "graphics.Spritesheet"
  type: "Class"
  package: "graphics"
  syntax:
    content: "public class Spritesheet"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.Spritesheet.Spritesheet(graphics.Texture,int,int,int,int)"
  id: "Spritesheet(graphics.Texture,int,int,int,int)"
  parent: "graphics.Spritesheet"
  langs:
  - "java"
  name: "Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
  nameWithType: "Spritesheet.Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
  fullName: "graphics.Spritesheet.Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
  overload: "graphics.Spritesheet.Spritesheet*"
  type: "Constructor"
  package: "graphics"
  summary: "Takes a texture, sprite width, height, number of sprites and the pixel spacing between sprites (if applicable), and adds each sprite in the sheet to a List."
  syntax:
    content: "public Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)"
    parameters:
    - id: "texture"
      type: "graphics.Texture"
    - id: "spriteWidth"
      type: "int"
    - id: "spriteHeight"
      type: "int"
    - id: "numSprites"
      type: "int"
    - id: "spacing"
      type: "int"
- uid: "graphics.Spritesheet.getSize()"
  id: "getSize()"
  parent: "graphics.Spritesheet"
  langs:
  - "java"
  name: "getSize()"
  nameWithType: "Spritesheet.getSize()"
  fullName: "graphics.Spritesheet.getSize()"
  overload: "graphics.Spritesheet.getSize*"
  type: "Method"
  package: "graphics"
  summary: "Returns the integer size of the List of Sprites"
  syntax:
    content: "public int getSize()"
    return:
      type: "int"
      description: "int size"
- uid: "graphics.Spritesheet.getSprite(int)"
  id: "getSprite(int)"
  parent: "graphics.Spritesheet"
  langs:
  - "java"
  name: "getSprite(int index)"
  nameWithType: "Spritesheet.getSprite(int index)"
  fullName: "graphics.Spritesheet.getSprite(int index)"
  overload: "graphics.Spritesheet.getSprite*"
  type: "Method"
  package: "graphics"
  summary: "Return a single sprite by passing it's index in the sprite list"
  syntax:
    content: "public Sprite getSprite(int index)"
    parameters:
    - id: "index"
      type: "int"
      description: "of the sprite"
    return:
      type: "graphics.Sprite"
      description: "Sprite"
- uid: "graphics.Spritesheet.getSprites()"
  id: "getSprites()"
  parent: "graphics.Spritesheet"
  langs:
  - "java"
  name: "getSprites()"
  nameWithType: "Spritesheet.getSprites()"
  fullName: "graphics.Spritesheet.getSprites()"
  overload: "graphics.Spritesheet.getSprites*"
  type: "Method"
  package: "graphics"
  syntax:
    content: "public List<Sprite> getSprites()"
    return:
      type: "java.util.List<graphics.Sprite>"
      description: "entire list of sprites contained in Spritesheet"
references:
- uid: "graphics.Texture"
  name: "Texture"
  nameWithType: "Texture"
  fullName: "graphics.Texture"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "graphics.Spritesheet.Spritesheet*"
  name: "Spritesheet"
  nameWithType: "Spritesheet.Spritesheet"
  fullName: "graphics.Spritesheet.Spritesheet"
  package: "graphics"
- uid: "graphics.Spritesheet.getSize*"
  name: "getSize"
  nameWithType: "Spritesheet.getSize"
  fullName: "graphics.Spritesheet.getSize"
  package: "graphics"
- uid: "graphics.Sprite"
  name: "Sprite"
  nameWithType: "Sprite"
  fullName: "graphics.Sprite"
- uid: "graphics.Spritesheet.getSprite*"
  name: "getSprite"
  nameWithType: "Spritesheet.getSprite"
  fullName: "graphics.Spritesheet.getSprite"
  package: "graphics"
- uid: "java.util.List<graphics.Sprite>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "graphics.Sprite"
    name: "Sprite"
    fullName: "graphics.Sprite"
  - name: ">"
    fullName: ">"
- uid: "graphics.Spritesheet.getSprites*"
  name: "getSprites"
  nameWithType: "Spritesheet.getSprites"
  fullName: "graphics.Spritesheet.getSprites"
  package: "graphics"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
