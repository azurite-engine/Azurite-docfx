### YamlMime:ManagedReference
items:
- uid: "io.token.TokenReader"
  id: "TokenReader"
  parent: "io.token"
  children:
  - "io.token.TokenReader.TokenReader(java.lang.String,java.lang.String)"
  - "io.token.TokenReader.TokenReader(java.lang.String,java.lang.String,int)"
  - "io.token.TokenReader.canRead(java.util.Scanner)"
  - "io.token.TokenReader.compareTo(io.token.TokenReader)"
  - "io.token.TokenReader.optionalPrio"
  - "io.token.TokenReader.read(java.util.Scanner)"
  - "io.token.TokenReader.target"
  - "io.token.TokenReader.targetType"
  - "io.token.TokenReader.toString()"
  - "io.token.TokenReader.type()"
  langs:
  - "java"
  name: "TokenReader"
  nameWithType: "TokenReader"
  fullName: "io.token.TokenReader"
  type: "Class"
  package: "io.token"
  syntax:
    content: "public class TokenReader implements Comparable<TokenReader>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.Comparable<io.token.TokenReader>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.token.TokenReader.TokenReader(java.lang.String,java.lang.String)"
  id: "TokenReader(java.lang.String,java.lang.String)"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "TokenReader(String targetType, String target)"
  nameWithType: "TokenReader.TokenReader(String targetType, String target)"
  fullName: "io.token.TokenReader.TokenReader(String targetType, String target)"
  overload: "io.token.TokenReader.TokenReader*"
  type: "Constructor"
  package: "io.token"
  syntax:
    content: "public TokenReader(String targetType, String target)"
    parameters:
    - id: "targetType"
      type: "java.lang.String"
    - id: "target"
      type: "java.lang.String"
- uid: "io.token.TokenReader.TokenReader(java.lang.String,java.lang.String,int)"
  id: "TokenReader(java.lang.String,java.lang.String,int)"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "TokenReader(String targetType, String pattern, int optionalPrio)"
  nameWithType: "TokenReader.TokenReader(String targetType, String pattern, int optionalPrio)"
  fullName: "io.token.TokenReader.TokenReader(String targetType, String pattern, int optionalPrio)"
  overload: "io.token.TokenReader.TokenReader*"
  type: "Constructor"
  package: "io.token"
  syntax:
    content: "public TokenReader(String targetType, String pattern, int optionalPrio)"
    parameters:
    - id: "targetType"
      type: "java.lang.String"
    - id: "pattern"
      type: "java.lang.String"
    - id: "optionalPrio"
      type: "int"
- uid: "io.token.TokenReader.canRead(java.util.Scanner)"
  id: "canRead(java.util.Scanner)"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "canRead(Scanner scanner)"
  nameWithType: "TokenReader.canRead(Scanner scanner)"
  fullName: "io.token.TokenReader.canRead(Scanner scanner)"
  overload: "io.token.TokenReader.canRead*"
  type: "Method"
  package: "io.token"
  syntax:
    content: "public boolean canRead(Scanner scanner)"
    parameters:
    - id: "scanner"
      type: "java.util.Scanner"
    return:
      type: "boolean"
- uid: "io.token.TokenReader.compareTo(io.token.TokenReader)"
  id: "compareTo(io.token.TokenReader)"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "compareTo(TokenReader o)"
  nameWithType: "TokenReader.compareTo(TokenReader o)"
  fullName: "io.token.TokenReader.compareTo(TokenReader o)"
  overload: "io.token.TokenReader.compareTo*"
  type: "Method"
  package: "io.token"
  syntax:
    content: "public int compareTo(TokenReader o)"
    parameters:
    - id: "o"
      type: "io.token.TokenReader"
    return:
      type: "int"
- uid: "io.token.TokenReader.optionalPrio"
  id: "optionalPrio"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "optionalPrio"
  nameWithType: "TokenReader.optionalPrio"
  fullName: "io.token.TokenReader.optionalPrio"
  type: "Field"
  package: "io.token"
  syntax:
    content: "protected final int optionalPrio"
    return:
      type: "int"
- uid: "io.token.TokenReader.read(java.util.Scanner)"
  id: "read(java.util.Scanner)"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "read(Scanner scanner)"
  nameWithType: "TokenReader.read(Scanner scanner)"
  fullName: "io.token.TokenReader.read(Scanner scanner)"
  overload: "io.token.TokenReader.read*"
  type: "Method"
  package: "io.token"
  syntax:
    content: "public Token read(Scanner scanner)"
    parameters:
    - id: "scanner"
      type: "java.util.Scanner"
    return:
      type: "io.token.Token"
- uid: "io.token.TokenReader.target"
  id: "target"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "target"
  nameWithType: "TokenReader.target"
  fullName: "io.token.TokenReader.target"
  type: "Field"
  package: "io.token"
  syntax:
    content: "protected final Pattern target"
    return:
      type: "java.util.regex.Pattern"
- uid: "io.token.TokenReader.targetType"
  id: "targetType"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "targetType"
  nameWithType: "TokenReader.targetType"
  fullName: "io.token.TokenReader.targetType"
  type: "Field"
  package: "io.token"
  syntax:
    content: "protected final String targetType"
    return:
      type: "java.lang.String"
- uid: "io.token.TokenReader.toString()"
  id: "toString()"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "TokenReader.toString()"
  fullName: "io.token.TokenReader.toString()"
  overload: "io.token.TokenReader.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "io.token"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
- uid: "io.token.TokenReader.type()"
  id: "type()"
  parent: "io.token.TokenReader"
  langs:
  - "java"
  name: "type()"
  nameWithType: "TokenReader.type()"
  fullName: "io.token.TokenReader.type()"
  overload: "io.token.TokenReader.type*"
  type: "Method"
  package: "io.token"
  syntax:
    content: "public String type()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "io.token.TokenReader.TokenReader*"
  name: "TokenReader"
  nameWithType: "TokenReader.TokenReader"
  fullName: "io.token.TokenReader.TokenReader"
  package: "io.token"
- uid: "java.util.Scanner"
  spec.java:
  - uid: "java.util.Scanner"
    name: "Scanner"
    fullName: "java.util.Scanner"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "io.token.TokenReader.canRead*"
  name: "canRead"
  nameWithType: "TokenReader.canRead"
  fullName: "io.token.TokenReader.canRead"
  package: "io.token"
- uid: "io.token.TokenReader.compareTo*"
  name: "compareTo"
  nameWithType: "TokenReader.compareTo"
  fullName: "io.token.TokenReader.compareTo"
  package: "io.token"
- uid: "io.token.Token"
  name: "Token"
  nameWithType: "Token"
  fullName: "io.token.Token"
- uid: "io.token.TokenReader.read*"
  name: "read"
  nameWithType: "TokenReader.read"
  fullName: "io.token.TokenReader.read"
  package: "io.token"
- uid: "io.token.TokenReader.type*"
  name: "type"
  nameWithType: "TokenReader.type"
  fullName: "io.token.TokenReader.type"
  package: "io.token"
- uid: "io.token.TokenReader.toString*"
  name: "toString"
  nameWithType: "TokenReader.toString"
  fullName: "io.token.TokenReader.toString"
  package: "io.token"
- uid: "java.util.regex.Pattern"
  spec.java:
  - uid: "java.util.regex.Pattern"
    name: "Pattern"
    fullName: "java.util.regex.Pattern"
- uid: "java.lang.Comparable<io.token.TokenReader>"
  name: "Comparable<TokenReader>"
  nameWithType: "Comparable<TokenReader>"
  fullName: "java.lang.Comparable<io.token.TokenReader>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Comparable"
  name: "Comparable"
  nameWithType: "Comparable"
  fullName: "java.lang.Comparable"
