### YamlMime:ManagedReference
items:
- uid: "ui.Layer"
  id: "Layer"
  parent: "ui"
  children:
  - "ui.Layer.Layer()"
  - "ui.Layer.Layer(float,float,float,float)"
  - "ui.Layer.draw()"
  - "ui.Layer.getLayerFrame()"
  - "ui.Layer.isActive()"
  - "ui.Layer.registerComponent(ui.Element)"
  - "ui.Layer.setActive(boolean)"
  - "ui.Layer.unregisterComponent(ui.Element)"
  - "ui.Layer.update()"
  langs:
  - "java"
  name: "Layer"
  nameWithType: "Layer"
  fullName: "ui.Layer"
  type: "Class"
  package: "ui"
  syntax:
    content: "public class Layer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ui.Layer.Layer()"
  id: "Layer()"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "Layer()"
  nameWithType: "Layer.Layer()"
  fullName: "ui.Layer.Layer()"
  overload: "ui.Layer.Layer*"
  type: "Constructor"
  package: "ui"
  syntax:
    content: "public Layer()"
- uid: "ui.Layer.Layer(float,float,float,float)"
  id: "Layer(float,float,float,float)"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "Layer(float x, float y, float width, float height)"
  nameWithType: "Layer.Layer(float x, float y, float width, float height)"
  fullName: "ui.Layer.Layer(float x, float y, float width, float height)"
  overload: "ui.Layer.Layer*"
  type: "Constructor"
  package: "ui"
  syntax:
    content: "public Layer(float x, float y, float width, float height)"
    parameters:
    - id: "x"
      type: "float"
    - id: "y"
      type: "float"
    - id: "width"
      type: "float"
    - id: "height"
      type: "float"
- uid: "ui.Layer.draw()"
  id: "draw()"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "draw()"
  nameWithType: "Layer.draw()"
  fullName: "ui.Layer.draw()"
  overload: "ui.Layer.draw*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public void draw()"
- uid: "ui.Layer.getLayerFrame()"
  id: "getLayerFrame()"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "getLayerFrame()"
  nameWithType: "Layer.getLayerFrame()"
  fullName: "ui.Layer.getLayerFrame()"
  overload: "ui.Layer.getLayerFrame*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public Frame getLayerFrame()"
    return:
      type: "ui.Frame"
- uid: "ui.Layer.isActive()"
  id: "isActive()"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "isActive()"
  nameWithType: "Layer.isActive()"
  fullName: "ui.Layer.isActive()"
  overload: "ui.Layer.isActive*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public boolean isActive()"
    return:
      type: "boolean"
- uid: "ui.Layer.registerComponent(ui.Element)"
  id: "registerComponent(ui.Element)"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "registerComponent(Element element)"
  nameWithType: "Layer.registerComponent(Element element)"
  fullName: "ui.Layer.registerComponent(Element element)"
  overload: "ui.Layer.registerComponent*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public void registerComponent(Element element)"
    parameters:
    - id: "element"
      type: "ui.Element"
- uid: "ui.Layer.setActive(boolean)"
  id: "setActive(boolean)"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "setActive(boolean active)"
  nameWithType: "Layer.setActive(boolean active)"
  fullName: "ui.Layer.setActive(boolean active)"
  overload: "ui.Layer.setActive*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public void setActive(boolean active)"
    parameters:
    - id: "active"
      type: "boolean"
- uid: "ui.Layer.unregisterComponent(ui.Element)"
  id: "unregisterComponent(ui.Element)"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "unregisterComponent(Element element)"
  nameWithType: "Layer.unregisterComponent(Element element)"
  fullName: "ui.Layer.unregisterComponent(Element element)"
  overload: "ui.Layer.unregisterComponent*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public void unregisterComponent(Element element)"
    parameters:
    - id: "element"
      type: "ui.Element"
- uid: "ui.Layer.update()"
  id: "update()"
  parent: "ui.Layer"
  langs:
  - "java"
  name: "update()"
  nameWithType: "Layer.update()"
  fullName: "ui.Layer.update()"
  overload: "ui.Layer.update*"
  type: "Method"
  package: "ui"
  syntax:
    content: "public void update()"
references:
- uid: "ui.Layer.Layer*"
  name: "Layer"
  nameWithType: "Layer.Layer"
  fullName: "ui.Layer.Layer"
  package: "ui"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ui.Layer.update*"
  name: "update"
  nameWithType: "Layer.update"
  fullName: "ui.Layer.update"
  package: "ui"
- uid: "ui.Layer.draw*"
  name: "draw"
  nameWithType: "Layer.draw"
  fullName: "ui.Layer.draw"
  package: "ui"
- uid: "ui.Frame"
  name: "Frame"
  nameWithType: "Frame"
  fullName: "ui.Frame"
- uid: "ui.Layer.getLayerFrame*"
  name: "getLayerFrame"
  nameWithType: "Layer.getLayerFrame"
  fullName: "ui.Layer.getLayerFrame"
  package: "ui"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "ui.Layer.setActive*"
  name: "setActive"
  nameWithType: "Layer.setActive"
  fullName: "ui.Layer.setActive"
  package: "ui"
- uid: "ui.Layer.isActive*"
  name: "isActive"
  nameWithType: "Layer.isActive"
  fullName: "ui.Layer.isActive"
  package: "ui"
- uid: "ui.Element"
  name: "Element"
  nameWithType: "Element"
  fullName: "ui.Element"
- uid: "ui.Layer.registerComponent*"
  name: "registerComponent"
  nameWithType: "Layer.registerComponent"
  fullName: "ui.Layer.registerComponent"
  package: "ui"
- uid: "ui.Layer.unregisterComponent*"
  name: "unregisterComponent"
  nameWithType: "Layer.unregisterComponent"
  fullName: "ui.Layer.unregisterComponent"
  package: "ui"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
