### YamlMime:ManagedReference
items:
- uid: "io.xml.XMLToken"
  id: "XMLToken"
  parent: "io.xml"
  children:
  - "io.xml.XMLToken.XMLToken(java.lang.String,io.xml.XMLTokenType)"
  - "io.xml.XMLToken.getTokenType()"
  - "io.xml.XMLToken.getValue()"
  - "io.xml.XMLToken.toString()"
  langs:
  - "java"
  name: "XMLToken"
  nameWithType: "XMLToken"
  fullName: "io.xml.XMLToken"
  type: "Class"
  package: "io.xml"
  syntax:
    content: "public class XMLToken"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.xml.XMLToken.XMLToken(java.lang.String,io.xml.XMLTokenType)"
  id: "XMLToken(java.lang.String,io.xml.XMLTokenType)"
  parent: "io.xml.XMLToken"
  langs:
  - "java"
  name: "XMLToken(String value, XMLTokenType tokenType)"
  nameWithType: "XMLToken.XMLToken(String value, XMLTokenType tokenType)"
  fullName: "io.xml.XMLToken.XMLToken(String value, XMLTokenType tokenType)"
  overload: "io.xml.XMLToken.XMLToken*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLToken(String value, XMLTokenType tokenType)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    - id: "tokenType"
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLToken.getTokenType()"
  id: "getTokenType()"
  parent: "io.xml.XMLToken"
  langs:
  - "java"
  name: "getTokenType()"
  nameWithType: "XMLToken.getTokenType()"
  fullName: "io.xml.XMLToken.getTokenType()"
  overload: "io.xml.XMLToken.getTokenType*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public XMLTokenType getTokenType()"
    return:
      type: "io.xml.XMLTokenType"
- uid: "io.xml.XMLToken.getValue()"
  id: "getValue()"
  parent: "io.xml.XMLToken"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "XMLToken.getValue()"
  fullName: "io.xml.XMLToken.getValue()"
  overload: "io.xml.XMLToken.getValue*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public String getValue()"
    return:
      type: "java.lang.String"
- uid: "io.xml.XMLToken.toString()"
  id: "toString()"
  parent: "io.xml.XMLToken"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "XMLToken.toString()"
  fullName: "io.xml.XMLToken.toString()"
  overload: "io.xml.XMLToken.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "io.xml.XMLTokenType"
  name: "XMLTokenType"
  nameWithType: "XMLTokenType"
  fullName: "io.xml.XMLTokenType"
- uid: "io.xml.XMLToken.XMLToken*"
  name: "XMLToken"
  nameWithType: "XMLToken.XMLToken"
  fullName: "io.xml.XMLToken.XMLToken"
  package: "io.xml"
- uid: "io.xml.XMLToken.getValue*"
  name: "getValue"
  nameWithType: "XMLToken.getValue"
  fullName: "io.xml.XMLToken.getValue"
  package: "io.xml"
- uid: "io.xml.XMLToken.getTokenType*"
  name: "getTokenType"
  nameWithType: "XMLToken.getTokenType"
  fullName: "io.xml.XMLToken.getTokenType"
  package: "io.xml"
- uid: "io.xml.XMLToken.toString*"
  name: "toString"
  nameWithType: "XMLToken.toString"
  fullName: "io.xml.XMLToken.toString"
  package: "io.xml"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
