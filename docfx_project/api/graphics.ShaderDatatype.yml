### YamlMime:ManagedReference
items:
- uid: "graphics.ShaderDatatype"
  id: "ShaderDatatype"
  parent: "graphics"
  children:
  - "graphics.ShaderDatatype.FLOAT"
  - "graphics.ShaderDatatype.FLOAT2"
  - "graphics.ShaderDatatype.FLOAT3"
  - "graphics.ShaderDatatype.FLOAT4"
  - "graphics.ShaderDatatype.INT"
  - "graphics.ShaderDatatype.INT2"
  - "graphics.ShaderDatatype.INT3"
  - "graphics.ShaderDatatype.INT4"
  - "graphics.ShaderDatatype.MAT3"
  - "graphics.ShaderDatatype.MAT4"
  - "graphics.ShaderDatatype.count"
  - "graphics.ShaderDatatype.openglType"
  - "graphics.ShaderDatatype.size"
  - "graphics.ShaderDatatype.valueOf(java.lang.String)"
  - "graphics.ShaderDatatype.values()"
  langs:
  - "java"
  name: "ShaderDatatype"
  nameWithType: "ShaderDatatype"
  fullName: "graphics.ShaderDatatype"
  type: "Enum"
  package: "graphics"
  summary: "Represents a datatype in GLSL"
  syntax:
    content: "public enum ShaderDatatype extends Enum<ShaderDatatype>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.ShaderDatatype.FLOAT"
  id: "FLOAT"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "FLOAT"
  nameWithType: "ShaderDatatype.FLOAT"
  fullName: "graphics.ShaderDatatype.FLOAT"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype FLOAT"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.FLOAT2"
  id: "FLOAT2"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "FLOAT2"
  nameWithType: "ShaderDatatype.FLOAT2"
  fullName: "graphics.ShaderDatatype.FLOAT2"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype FLOAT2"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.FLOAT3"
  id: "FLOAT3"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "FLOAT3"
  nameWithType: "ShaderDatatype.FLOAT3"
  fullName: "graphics.ShaderDatatype.FLOAT3"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype FLOAT3"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.FLOAT4"
  id: "FLOAT4"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "FLOAT4"
  nameWithType: "ShaderDatatype.FLOAT4"
  fullName: "graphics.ShaderDatatype.FLOAT4"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype FLOAT4"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.INT"
  id: "INT"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "INT"
  nameWithType: "ShaderDatatype.INT"
  fullName: "graphics.ShaderDatatype.INT"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype INT"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.INT2"
  id: "INT2"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "INT2"
  nameWithType: "ShaderDatatype.INT2"
  fullName: "graphics.ShaderDatatype.INT2"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype INT2"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.INT3"
  id: "INT3"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "INT3"
  nameWithType: "ShaderDatatype.INT3"
  fullName: "graphics.ShaderDatatype.INT3"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype INT3"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.INT4"
  id: "INT4"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "INT4"
  nameWithType: "ShaderDatatype.INT4"
  fullName: "graphics.ShaderDatatype.INT4"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype INT4"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.MAT3"
  id: "MAT3"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "MAT3"
  nameWithType: "ShaderDatatype.MAT3"
  fullName: "graphics.ShaderDatatype.MAT3"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype MAT3"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.MAT4"
  id: "MAT4"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "MAT4"
  nameWithType: "ShaderDatatype.MAT4"
  fullName: "graphics.ShaderDatatype.MAT4"
  type: "Field"
  package: "graphics"
  syntax:
    content: "public static final ShaderDatatype MAT4"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.ShaderDatatype(int,int,int)"
  id: "ShaderDatatype(int,int,int)"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "ShaderDatatype(int count, int bytes, int openglType)"
  nameWithType: "ShaderDatatype.ShaderDatatype(int count, int bytes, int openglType)"
  fullName: "graphics.ShaderDatatype.ShaderDatatype(int count, int bytes, int openglType)"
  overload: "graphics.ShaderDatatype.ShaderDatatype*"
  type: "Constructor"
  package: "graphics"
  syntax:
    content: "private ShaderDatatype(int count, int bytes, int openglType)"
    parameters:
    - id: "count"
      type: "int"
    - id: "bytes"
      type: "int"
    - id: "openglType"
      type: "int"
- uid: "graphics.ShaderDatatype.count"
  id: "count"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "count"
  nameWithType: "ShaderDatatype.count"
  fullName: "graphics.ShaderDatatype.count"
  type: "Field"
  package: "graphics"
  summary: "Number of FLOATS or INTS"
  syntax:
    content: "public final int count"
    return:
      type: "int"
- uid: "graphics.ShaderDatatype.openglType"
  id: "openglType"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "openglType"
  nameWithType: "ShaderDatatype.openglType"
  fullName: "graphics.ShaderDatatype.openglType"
  type: "Field"
  package: "graphics"
  summary: "OpenGL expected type"
  syntax:
    content: "public final int openglType"
    return:
      type: "int"
- uid: "graphics.ShaderDatatype.size"
  id: "size"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "size"
  nameWithType: "ShaderDatatype.size"
  fullName: "graphics.ShaderDatatype.size"
  type: "Field"
  package: "graphics"
  summary: "Number of bytes"
  syntax:
    content: "public final int size"
    return:
      type: "int"
- uid: "graphics.ShaderDatatype.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "ShaderDatatype.valueOf(String name)"
  fullName: "graphics.ShaderDatatype.valueOf(String name)"
  overload: "graphics.ShaderDatatype.valueOf*"
  type: "Method"
  package: "graphics"
  syntax:
    content: "public static ShaderDatatype valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "graphics.ShaderDatatype"
- uid: "graphics.ShaderDatatype.values()"
  id: "values()"
  parent: "graphics.ShaderDatatype"
  langs:
  - "java"
  name: "values()"
  nameWithType: "ShaderDatatype.values()"
  fullName: "graphics.ShaderDatatype.values()"
  overload: "graphics.ShaderDatatype.values*"
  type: "Method"
  package: "graphics"
  syntax:
    content: "public static ShaderDatatype[] values()"
    return:
      type: "graphics.ShaderDatatype[]"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "graphics.ShaderDatatype.ShaderDatatype*"
  name: "ShaderDatatype"
  nameWithType: "ShaderDatatype.ShaderDatatype"
  fullName: "graphics.ShaderDatatype.ShaderDatatype"
  package: "graphics"
- uid: "graphics.ShaderDatatype[]"
  spec.java:
  - uid: "graphics.ShaderDatatype"
    name: "ShaderDatatype"
    fullName: "graphics.ShaderDatatype"
  - name: "[]"
    fullName: "[]"
- uid: "graphics.ShaderDatatype.values*"
  name: "values"
  nameWithType: "ShaderDatatype.values"
  fullName: "graphics.ShaderDatatype.values"
  package: "graphics"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "graphics.ShaderDatatype.valueOf*"
  name: "valueOf"
  nameWithType: "ShaderDatatype.valueOf"
  fullName: "graphics.ShaderDatatype.valueOf"
  package: "graphics"
- uid: "java.lang.Enum<graphics.ShaderDatatype>"
  name: "Enum<ShaderDatatype>"
  nameWithType: "Enum<ShaderDatatype>"
  fullName: "java.lang.Enum<graphics.ShaderDatatype>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
