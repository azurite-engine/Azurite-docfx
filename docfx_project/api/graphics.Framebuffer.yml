### YamlMime:ManagedReference
items:
- uid: "graphics.Framebuffer"
  id: "Framebuffer"
  parent: "graphics"
  children:
  - "graphics.Framebuffer.Framebuffer(int,int,util.specs.FramebufferSpec)"
  - "graphics.Framebuffer.bind()"
  - "graphics.Framebuffer.blitColorBuffersToScreen()"
  - "graphics.Framebuffer.blitEntireFboToScreen()"
  - "graphics.Framebuffer.clean()"
  - "graphics.Framebuffer.createDefault()"
  - "graphics.Framebuffer.createHalfResWithColorAttachment()"
  - "graphics.Framebuffer.createWithColorAttachment()"
  - "graphics.Framebuffer.delete()"
  - "graphics.Framebuffer.getColorAttachment(int)"
  - "graphics.Framebuffer.getDepthAttachment()"
  - "graphics.Framebuffer.getHeight()"
  - "graphics.Framebuffer.getWidth()"
  - "graphics.Framebuffer.isDefault()"
  - "graphics.Framebuffer.resize(int,int)"
  - "graphics.Framebuffer.resizeAll(event.EventData.WindowResizeEventData)"
  - "graphics.Framebuffer.unbind()"
  langs:
  - "java"
  name: "Framebuffer"
  nameWithType: "Framebuffer"
  fullName: "graphics.Framebuffer"
  type: "Class"
  package: "graphics"
  summary: "This class is heavily inspired from TheCherno's Hazel Engine's Framebuffer API\n\nAn encapsulation of an OpenGL Framebuffer"
  syntax:
    content: "public class Framebuffer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.Framebuffer.Framebuffer(int)"
  id: "Framebuffer(int)"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "Framebuffer(int id)"
  nameWithType: "Framebuffer.Framebuffer(int id)"
  fullName: "graphics.Framebuffer.Framebuffer(int id)"
  overload: "graphics.Framebuffer.Framebuffer*"
  type: "Constructor"
  package: "graphics"
  summary: "Constructor to encapsulate an already existing FBO. Be careful though many of the methods here wont work."
  syntax:
    content: "private Framebuffer(int id)"
    parameters:
    - id: "id"
      type: "int"
      description: "int: id to encapsulate in the instance"
- uid: "graphics.Framebuffer.Framebuffer(int,int,util.specs.FramebufferSpec)"
  id: "Framebuffer(int,int,util.specs.FramebufferSpec)"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "Framebuffer(int width, int height, FramebufferSpec spec)"
  nameWithType: "Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec)"
  fullName: "graphics.Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec)"
  overload: "graphics.Framebuffer.Framebuffer*"
  type: "Constructor"
  package: "graphics"
  summary: "Default Framebuffer constructor"
  syntax:
    content: "public Framebuffer(int width, int height, FramebufferSpec spec)"
    parameters:
    - id: "width"
      type: "int"
      description: "int: width of the fbo"
    - id: "height"
      type: "int"
      description: "int: height of the fbo"
    - id: "spec"
      type: "util.specs.FramebufferSpec"
      description: "FramebufferSpec: Specification of the framebuffer"
- uid: "graphics.Framebuffer.Framebuffer(int,int,util.specs.FramebufferSpec,boolean,boolean)"
  id: "Framebuffer(int,int,util.specs.FramebufferSpec,boolean,boolean)"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)"
  nameWithType: "Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)"
  fullName: "graphics.Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)"
  overload: "graphics.Framebuffer.Framebuffer*"
  type: "Constructor"
  package: "graphics"
  summary: "Constructor used to register the framebuffer for Auto-Resizing based on its size"
  syntax:
    content: "private Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)"
    parameters:
    - id: "width"
      type: "int"
      description: "width of the fbo"
    - id: "height"
      type: "int"
      description: "height of the fbo"
    - id: "spec"
      type: "util.specs.FramebufferSpec"
      description: "Specification of the framebuffer"
    - id: "isScreenSize"
      type: "boolean"
      description: "Is the framebuffer the size of the screen"
    - id: "isHalfSize"
      type: "boolean"
      description: "Is the framebuffer half the size of the screen"
- uid: "graphics.Framebuffer.bind()"
  id: "bind()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "bind()"
  nameWithType: "Framebuffer.bind()"
  fullName: "graphics.Framebuffer.bind()"
  overload: "graphics.Framebuffer.bind*"
  type: "Method"
  package: "graphics"
  summary: "Binds the framebuffer"
  syntax:
    content: "public void bind()"
- uid: "graphics.Framebuffer.blitColorBuffersToScreen()"
  id: "blitColorBuffersToScreen()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "blitColorBuffersToScreen()"
  nameWithType: "Framebuffer.blitColorBuffersToScreen()"
  fullName: "graphics.Framebuffer.blitColorBuffersToScreen()"
  overload: "graphics.Framebuffer.blitColorBuffersToScreen*"
  type: "Method"
  package: "graphics"
  summary: "Copies all data from the color texture attachments of this framebuffer to the texture attachments of the default Framebuffer. OpenGL provides a function, glBlitFramebuffer for this"
  syntax:
    content: "public void blitColorBuffersToScreen()"
- uid: "graphics.Framebuffer.blitEntireFboToScreen()"
  id: "blitEntireFboToScreen()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "blitEntireFboToScreen()"
  nameWithType: "Framebuffer.blitEntireFboToScreen()"
  fullName: "graphics.Framebuffer.blitEntireFboToScreen()"
  overload: "graphics.Framebuffer.blitEntireFboToScreen*"
  type: "Method"
  package: "graphics"
  summary: "Copies all data from the ALL texture attachments of this framebuffer to the texture attachments of the default Framebuffer. OpenGL provides a function, glBlitFramebuffer for this"
  syntax:
    content: "public void blitEntireFboToScreen()"
- uid: "graphics.Framebuffer.clean()"
  id: "clean()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "clean()"
  nameWithType: "Framebuffer.clean()"
  fullName: "graphics.Framebuffer.clean()"
  overload: "graphics.Framebuffer.clean*"
  type: "Method"
  package: "graphics"
  summary: "Deletes all Framebuffers\n\nCalled after the X is pressed"
  syntax:
    content: "public static void clean()"
- uid: "graphics.Framebuffer.createDefault()"
  id: "createDefault()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "createDefault()"
  nameWithType: "Framebuffer.createDefault()"
  fullName: "graphics.Framebuffer.createDefault()"
  overload: "graphics.Framebuffer.createDefault*"
  type: "Method"
  package: "graphics"
  summary: "Factory method to create an instance that manages the default framebuffer"
  syntax:
    content: "public static Framebuffer createDefault()"
    return:
      type: "graphics.Framebuffer"
      description: "Framebuffer"
- uid: "graphics.Framebuffer.createHalfResWithColorAttachment()"
  id: "createHalfResWithColorAttachment()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "createHalfResWithColorAttachment()"
  nameWithType: "Framebuffer.createHalfResWithColorAttachment()"
  fullName: "graphics.Framebuffer.createHalfResWithColorAttachment()"
  overload: "graphics.Framebuffer.createHalfResWithColorAttachment*"
  type: "Method"
  package: "graphics"
  summary: "Factory method to create an instance that is half the size of the screen and has one simple color attachment"
  syntax:
    content: "public static Framebuffer createHalfResWithColorAttachment()"
    return:
      type: "graphics.Framebuffer"
      description: "Framebuffer"
- uid: "graphics.Framebuffer.createWithColorAttachment()"
  id: "createWithColorAttachment()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "createWithColorAttachment()"
  nameWithType: "Framebuffer.createWithColorAttachment()"
  fullName: "graphics.Framebuffer.createWithColorAttachment()"
  overload: "graphics.Framebuffer.createWithColorAttachment*"
  type: "Method"
  package: "graphics"
  summary: "Factory method to create an instance that has one simple color attachment"
  syntax:
    content: "public static Framebuffer createWithColorAttachment()"
    return:
      type: "graphics.Framebuffer"
      description: "Framebuffer"
- uid: "graphics.Framebuffer.delete()"
  id: "delete()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "Framebuffer.delete()"
  fullName: "graphics.Framebuffer.delete()"
  overload: "graphics.Framebuffer.delete*"
  type: "Method"
  package: "graphics"
  summary: "Deletes the texture attachments and the framebuffer"
  syntax:
    content: "public void delete()"
- uid: "graphics.Framebuffer.getColorAttachment(int)"
  id: "getColorAttachment(int)"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "getColorAttachment(int i)"
  nameWithType: "Framebuffer.getColorAttachment(int i)"
  fullName: "graphics.Framebuffer.getColorAttachment(int i)"
  overload: "graphics.Framebuffer.getColorAttachment*"
  type: "Method"
  package: "graphics"
  summary: "Get a color texture attachment id from the framebuffer"
  syntax:
    content: "public Texture getColorAttachment(int i)"
    parameters:
    - id: "i"
      type: "int"
      description: "index of the texture attachment required"
    return:
      type: "graphics.Texture"
      description: "the color attachment texture id at the index"
- uid: "graphics.Framebuffer.getDepthAttachment()"
  id: "getDepthAttachment()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "getDepthAttachment()"
  nameWithType: "Framebuffer.getDepthAttachment()"
  fullName: "graphics.Framebuffer.getDepthAttachment()"
  overload: "graphics.Framebuffer.getDepthAttachment*"
  type: "Method"
  package: "graphics"
  summary: "Get the depth attachment texture from this framebuffer"
  syntax:
    content: "public Texture getDepthAttachment()"
    return:
      type: "graphics.Texture"
      description: "the depth attachment texture id"
- uid: "graphics.Framebuffer.getHeight()"
  id: "getHeight()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "getHeight()"
  nameWithType: "Framebuffer.getHeight()"
  fullName: "graphics.Framebuffer.getHeight()"
  overload: "graphics.Framebuffer.getHeight*"
  type: "Method"
  package: "graphics"
  summary: "Get the height of this Framebuffer"
  syntax:
    content: "public int getHeight()"
    return:
      type: "int"
      description: "height of the Framebuffer"
- uid: "graphics.Framebuffer.getWidth()"
  id: "getWidth()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "getWidth()"
  nameWithType: "Framebuffer.getWidth()"
  fullName: "graphics.Framebuffer.getWidth()"
  overload: "graphics.Framebuffer.getWidth*"
  type: "Method"
  package: "graphics"
  summary: "Get the width of this Framebuffer"
  syntax:
    content: "public int getWidth()"
    return:
      type: "int"
      description: "width of the Framebuffer"
- uid: "graphics.Framebuffer.isDefault()"
  id: "isDefault()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "isDefault()"
  nameWithType: "Framebuffer.isDefault()"
  fullName: "graphics.Framebuffer.isDefault()"
  overload: "graphics.Framebuffer.isDefault*"
  type: "Method"
  package: "graphics"
  summary: "Checks if the fbo is a wrapper around the default one. Required because created wrapper has no attachments stored in colorAttachmentTextures"
  syntax:
    content: "public boolean isDefault()"
    return:
      type: "boolean"
      description: "if the framebuffer instance is a wrapper around the"
- uid: "graphics.Framebuffer.resize(int,int)"
  id: "resize(int,int)"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "resize(int width, int height)"
  nameWithType: "Framebuffer.resize(int width, int height)"
  fullName: "graphics.Framebuffer.resize(int width, int height)"
  overload: "graphics.Framebuffer.resize*"
  type: "Method"
  package: "graphics"
  summary: "Resize the Framebuffer to a specific size it will regenerate the entire framebuffer"
  syntax:
    content: "public void resize(int width, int height)"
    parameters:
    - id: "width"
      type: "int"
      description: "int: new width"
    - id: "height"
      type: "int"
      description: "int new height"
- uid: "graphics.Framebuffer.resizeAll(event.EventData.WindowResizeEventData)"
  id: "resizeAll(event.EventData.WindowResizeEventData)"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "resizeAll(EventData.WindowResizeEventData data)"
  nameWithType: "Framebuffer.resizeAll(EventData.WindowResizeEventData data)"
  fullName: "graphics.Framebuffer.resizeAll(EventData.WindowResizeEventData data)"
  overload: "graphics.Framebuffer.resizeAll*"
  type: "Method"
  package: "graphics"
  summary: "Resize all Framebuffers created via the createWithColorAttachment() or createHalfResWithColorAttachment() methods"
  syntax:
    content: "public static void resizeAll(EventData.WindowResizeEventData data)"
    parameters:
    - id: "data"
      type: "event.EventData.WindowResizeEventData"
- uid: "graphics.Framebuffer.unbind()"
  id: "unbind()"
  parent: "graphics.Framebuffer"
  langs:
  - "java"
  name: "unbind()"
  nameWithType: "Framebuffer.unbind()"
  fullName: "graphics.Framebuffer.unbind()"
  overload: "graphics.Framebuffer.unbind*"
  type: "Method"
  package: "graphics"
  summary: "Unbinds the framebuffer i.e. binds the default framebuffer"
  syntax:
    content: "public static void unbind()"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "util.specs.FramebufferSpec"
  name: "FramebufferSpec"
  nameWithType: "FramebufferSpec"
  fullName: "util.specs.FramebufferSpec"
- uid: "graphics.Framebuffer.Framebuffer*"
  name: "Framebuffer"
  nameWithType: "Framebuffer.Framebuffer"
  fullName: "graphics.Framebuffer.Framebuffer"
  package: "graphics"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "graphics.Framebuffer.createDefault*"
  name: "createDefault"
  nameWithType: "Framebuffer.createDefault"
  fullName: "graphics.Framebuffer.createDefault"
  package: "graphics"
- uid: "graphics.Framebuffer.createWithColorAttachment*"
  name: "createWithColorAttachment"
  nameWithType: "Framebuffer.createWithColorAttachment"
  fullName: "graphics.Framebuffer.createWithColorAttachment"
  package: "graphics"
- uid: "graphics.Framebuffer.createHalfResWithColorAttachment*"
  name: "createHalfResWithColorAttachment"
  nameWithType: "Framebuffer.createHalfResWithColorAttachment"
  fullName: "graphics.Framebuffer.createHalfResWithColorAttachment"
  package: "graphics"
- uid: "event.EventData.WindowResizeEventData"
  name: "EventData.WindowResizeEventData"
  nameWithType: "EventData.WindowResizeEventData"
  fullName: "event.EventData.WindowResizeEventData"
- uid: "graphics.Framebuffer.resizeAll*"
  name: "resizeAll"
  nameWithType: "Framebuffer.resizeAll"
  fullName: "graphics.Framebuffer.resizeAll"
  package: "graphics"
- uid: "graphics.Framebuffer.unbind*"
  name: "unbind"
  nameWithType: "Framebuffer.unbind"
  fullName: "graphics.Framebuffer.unbind"
  package: "graphics"
- uid: "graphics.Framebuffer.clean*"
  name: "clean"
  nameWithType: "Framebuffer.clean"
  fullName: "graphics.Framebuffer.clean"
  package: "graphics"
- uid: "graphics.Framebuffer.isDefault*"
  name: "isDefault"
  nameWithType: "Framebuffer.isDefault"
  fullName: "graphics.Framebuffer.isDefault"
  package: "graphics"
- uid: "graphics.Texture"
  name: "Texture"
  nameWithType: "Texture"
  fullName: "graphics.Texture"
- uid: "graphics.Framebuffer.getColorAttachment*"
  name: "getColorAttachment"
  nameWithType: "Framebuffer.getColorAttachment"
  fullName: "graphics.Framebuffer.getColorAttachment"
  package: "graphics"
- uid: "graphics.Framebuffer.getDepthAttachment*"
  name: "getDepthAttachment"
  nameWithType: "Framebuffer.getDepthAttachment"
  fullName: "graphics.Framebuffer.getDepthAttachment"
  package: "graphics"
- uid: "graphics.Framebuffer.blitColorBuffersToScreen*"
  name: "blitColorBuffersToScreen"
  nameWithType: "Framebuffer.blitColorBuffersToScreen"
  fullName: "graphics.Framebuffer.blitColorBuffersToScreen"
  package: "graphics"
- uid: "graphics.Framebuffer.blitEntireFboToScreen*"
  name: "blitEntireFboToScreen"
  nameWithType: "Framebuffer.blitEntireFboToScreen"
  fullName: "graphics.Framebuffer.blitEntireFboToScreen"
  package: "graphics"
- uid: "graphics.Framebuffer.resize*"
  name: "resize"
  nameWithType: "Framebuffer.resize"
  fullName: "graphics.Framebuffer.resize"
  package: "graphics"
- uid: "graphics.Framebuffer.bind*"
  name: "bind"
  nameWithType: "Framebuffer.bind"
  fullName: "graphics.Framebuffer.bind"
  package: "graphics"
- uid: "graphics.Framebuffer.delete*"
  name: "delete"
  nameWithType: "Framebuffer.delete"
  fullName: "graphics.Framebuffer.delete"
  package: "graphics"
- uid: "graphics.Framebuffer.getWidth*"
  name: "getWidth"
  nameWithType: "Framebuffer.getWidth"
  fullName: "graphics.Framebuffer.getWidth"
  package: "graphics"
- uid: "graphics.Framebuffer.getHeight*"
  name: "getHeight"
  nameWithType: "Framebuffer.getHeight"
  fullName: "graphics.Framebuffer.getHeight"
  package: "graphics"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
