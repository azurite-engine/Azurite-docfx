### YamlMime:ManagedReference
items:
- uid: "ecs.SpriteAnimation"
  id: "SpriteAnimation"
  parent: "ecs"
  children:
  - "ecs.SpriteAnimation.SpriteAnimation(ecs.SpriteRenderer,graphics.Sprite,float)"
  - "ecs.SpriteAnimation.nextAnimation(java.lang.String,int)"
  - "ecs.SpriteAnimation.setAnimation(java.lang.String,java.util.List<graphics.Sprite>)"
  - "ecs.SpriteAnimation.setAnimationEndEvent(java.util.function.Consumer<java.lang.String>)"
  - "ecs.SpriteAnimation.setBaseImage(graphics.Sprite)"
  - "ecs.SpriteAnimation.setCurrentRepetition(int)"
  - "ecs.SpriteAnimation.setTimePerSprite(float)"
  - "ecs.SpriteAnimation.start()"
  - "ecs.SpriteAnimation.switchAnimation(boolean)"
  - "ecs.SpriteAnimation.update(float)"
  langs:
  - "java"
  name: "SpriteAnimation"
  nameWithType: "SpriteAnimation"
  fullName: "ecs.SpriteAnimation"
  type: "Class"
  package: "ecs"
  summary: "# Azurite #"
  syntax:
    content: "public class SpriteAnimation extends Component"
  inheritance:
  - "java.lang.Object"
  - "ecs.Component"
  inheritedMembers:
  - "ecs.Component.compareTo(ecs.Component)"
  - "ecs.Component.debug()"
  - "ecs.Component.position()"
  - "ecs.Component.remove()"
  - "ecs.Component.setPosition(org.joml.Vector2f)"
  - "ecs.Component.start()"
  - "ecs.Component.update(float)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.SpriteAnimation.SpriteAnimation(ecs.SpriteRenderer,graphics.Sprite,float)"
  id: "SpriteAnimation(ecs.SpriteRenderer,graphics.Sprite,float)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)"
  nameWithType: "SpriteAnimation.SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)"
  fullName: "ecs.SpriteAnimation.SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)"
  overload: "ecs.SpriteAnimation.SpriteAnimation*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "public SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)"
    parameters:
    - id: "renderer"
      type: "ecs.SpriteRenderer"
    - id: "baseImage"
      type: "graphics.Sprite"
    - id: "timePerSprite"
      type: "float"
- uid: "ecs.SpriteAnimation.nextAnimation(java.lang.String,int)"
  id: "nextAnimation(java.lang.String,int)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "nextAnimation(String nextAnimation, int nextRepetitions)"
  nameWithType: "SpriteAnimation.nextAnimation(String nextAnimation, int nextRepetitions)"
  fullName: "ecs.SpriteAnimation.nextAnimation(String nextAnimation, int nextRepetitions)"
  overload: "ecs.SpriteAnimation.nextAnimation*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void nextAnimation(String nextAnimation, int nextRepetitions)"
    parameters:
    - id: "nextAnimation"
      type: "java.lang.String"
    - id: "nextRepetitions"
      type: "int"
- uid: "ecs.SpriteAnimation.setAnimation(java.lang.String,java.util.List<graphics.Sprite>)"
  id: "setAnimation(java.lang.String,java.util.List<graphics.Sprite>)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "setAnimation(String name, List<Sprite> sprites)"
  nameWithType: "SpriteAnimation.setAnimation(String name, List<Sprite> sprites)"
  fullName: "ecs.SpriteAnimation.setAnimation(String name, List<Sprite> sprites)"
  overload: "ecs.SpriteAnimation.setAnimation*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setAnimation(String name, List<Sprite> sprites)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "sprites"
      type: "java.util.List<graphics.Sprite>"
- uid: "ecs.SpriteAnimation.setAnimationEndEvent(java.util.function.Consumer<java.lang.String>)"
  id: "setAnimationEndEvent(java.util.function.Consumer<java.lang.String>)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "setAnimationEndEvent(Consumer<String> animationEndEvent)"
  nameWithType: "SpriteAnimation.setAnimationEndEvent(Consumer<String> animationEndEvent)"
  fullName: "ecs.SpriteAnimation.setAnimationEndEvent(Consumer<String> animationEndEvent)"
  overload: "ecs.SpriteAnimation.setAnimationEndEvent*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setAnimationEndEvent(Consumer<String> animationEndEvent)"
    parameters:
    - id: "animationEndEvent"
      type: "java.util.function.Consumer<java.lang.String>"
- uid: "ecs.SpriteAnimation.setBaseImage(graphics.Sprite)"
  id: "setBaseImage(graphics.Sprite)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "setBaseImage(Sprite baseImage)"
  nameWithType: "SpriteAnimation.setBaseImage(Sprite baseImage)"
  fullName: "ecs.SpriteAnimation.setBaseImage(Sprite baseImage)"
  overload: "ecs.SpriteAnimation.setBaseImage*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setBaseImage(Sprite baseImage)"
    parameters:
    - id: "baseImage"
      type: "graphics.Sprite"
- uid: "ecs.SpriteAnimation.setCurrentRepetition(int)"
  id: "setCurrentRepetition(int)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "setCurrentRepetition(int currentRepetition)"
  nameWithType: "SpriteAnimation.setCurrentRepetition(int currentRepetition)"
  fullName: "ecs.SpriteAnimation.setCurrentRepetition(int currentRepetition)"
  overload: "ecs.SpriteAnimation.setCurrentRepetition*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setCurrentRepetition(int currentRepetition)"
    parameters:
    - id: "currentRepetition"
      type: "int"
- uid: "ecs.SpriteAnimation.setTimePerSprite(float)"
  id: "setTimePerSprite(float)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "setTimePerSprite(float timePerSprite)"
  nameWithType: "SpriteAnimation.setTimePerSprite(float timePerSprite)"
  fullName: "ecs.SpriteAnimation.setTimePerSprite(float timePerSprite)"
  overload: "ecs.SpriteAnimation.setTimePerSprite*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void setTimePerSprite(float timePerSprite)"
    parameters:
    - id: "timePerSprite"
      type: "float"
- uid: "ecs.SpriteAnimation.start()"
  id: "start()"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "start()"
  nameWithType: "SpriteAnimation.start()"
  fullName: "ecs.SpriteAnimation.start()"
  overload: "ecs.SpriteAnimation.start*"
  overridden: "ecs.Component.start()"
  type: "Method"
  package: "ecs"
  summary: "Called once on Component initialization."
  syntax:
    content: "public void start()"
- uid: "ecs.SpriteAnimation.switchAnimation(boolean)"
  id: "switchAnimation(boolean)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "switchAnimation(boolean instant)"
  nameWithType: "SpriteAnimation.switchAnimation(boolean instant)"
  fullName: "ecs.SpriteAnimation.switchAnimation(boolean instant)"
  overload: "ecs.SpriteAnimation.switchAnimation*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public void switchAnimation(boolean instant)"
    parameters:
    - id: "instant"
      type: "boolean"
- uid: "ecs.SpriteAnimation.update(float)"
  id: "update(float)"
  parent: "ecs.SpriteAnimation"
  langs:
  - "java"
  name: "update(float dt)"
  nameWithType: "SpriteAnimation.update(float dt)"
  fullName: "ecs.SpriteAnimation.update(float dt)"
  overload: "ecs.SpriteAnimation.update*"
  overridden: "ecs.Component.update(float)"
  type: "Method"
  package: "ecs"
  summary: "Called once per frame for each Component"
  syntax:
    content: "public void update(float dt)"
    parameters:
    - id: "dt"
      type: "float"
references:
- uid: "ecs.SpriteRenderer"
  name: "SpriteRenderer"
  nameWithType: "SpriteRenderer"
  fullName: "ecs.SpriteRenderer"
- uid: "graphics.Sprite"
  name: "Sprite"
  nameWithType: "Sprite"
  fullName: "graphics.Sprite"
- uid: "float"
  spec.java:
  - uid: "float"
    name: "float"
    fullName: "float"
- uid: "ecs.SpriteAnimation.SpriteAnimation*"
  name: "SpriteAnimation"
  nameWithType: "SpriteAnimation.SpriteAnimation"
  fullName: "ecs.SpriteAnimation.SpriteAnimation"
  package: "ecs"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.List<graphics.Sprite>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "graphics.Sprite"
    name: "Sprite"
    fullName: "graphics.Sprite"
  - name: ">"
    fullName: ">"
- uid: "ecs.SpriteAnimation.setAnimation*"
  name: "setAnimation"
  nameWithType: "SpriteAnimation.setAnimation"
  fullName: "ecs.SpriteAnimation.setAnimation"
  package: "ecs"
- uid: "ecs.SpriteAnimation.setBaseImage*"
  name: "setBaseImage"
  nameWithType: "SpriteAnimation.setBaseImage"
  fullName: "ecs.SpriteAnimation.setBaseImage"
  package: "ecs"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ecs.SpriteAnimation.setCurrentRepetition*"
  name: "setCurrentRepetition"
  nameWithType: "SpriteAnimation.setCurrentRepetition"
  fullName: "ecs.SpriteAnimation.setCurrentRepetition"
  package: "ecs"
- uid: "ecs.SpriteAnimation.setTimePerSprite*"
  name: "setTimePerSprite"
  nameWithType: "SpriteAnimation.setTimePerSprite"
  fullName: "ecs.SpriteAnimation.setTimePerSprite"
  package: "ecs"
- uid: "ecs.SpriteAnimation.nextAnimation*"
  name: "nextAnimation"
  nameWithType: "SpriteAnimation.nextAnimation"
  fullName: "ecs.SpriteAnimation.nextAnimation"
  package: "ecs"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "ecs.SpriteAnimation.switchAnimation*"
  name: "switchAnimation"
  nameWithType: "SpriteAnimation.switchAnimation"
  fullName: "ecs.SpriteAnimation.switchAnimation"
  package: "ecs"
- uid: "java.util.function.Consumer<java.lang.String>"
  spec.java:
  - uid: "java.util.function.Consumer"
    name: "Consumer"
    fullName: "java.util.function.Consumer"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "ecs.SpriteAnimation.setAnimationEndEvent*"
  name: "setAnimationEndEvent"
  nameWithType: "SpriteAnimation.setAnimationEndEvent"
  fullName: "ecs.SpriteAnimation.setAnimationEndEvent"
  package: "ecs"
- uid: "ecs.SpriteAnimation.start*"
  name: "start"
  nameWithType: "SpriteAnimation.start"
  fullName: "ecs.SpriteAnimation.start"
  package: "ecs"
- uid: "ecs.SpriteAnimation.update*"
  name: "update"
  nameWithType: "SpriteAnimation.update"
  fullName: "ecs.SpriteAnimation.update"
  package: "ecs"
- uid: "ecs.Component"
  name: "Component"
  nameWithType: "Component"
  fullName: "ecs.Component"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "ecs.Component.compareTo(ecs.Component)"
  name: "Component.compareTo(Component)"
  nameWithType: "Component.compareTo(Component)"
  fullName: "ecs.Component.compareTo(ecs.Component)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "ecs.Component.debug()"
  name: "Component.debug()"
  nameWithType: "Component.debug()"
  fullName: "ecs.Component.debug()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "ecs.Component.start()"
  name: "Component.start()"
  nameWithType: "Component.start()"
  fullName: "ecs.Component.start()"
- uid: "ecs.Component.remove()"
  name: "Component.remove()"
  nameWithType: "Component.remove()"
  fullName: "ecs.Component.remove()"
- uid: "ecs.Component.position()"
  name: "Component.position()"
  nameWithType: "Component.position()"
  fullName: "ecs.Component.position()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "ecs.Component.setPosition(org.joml.Vector2f)"
  name: "Component.setPosition(Vector2f)"
  nameWithType: "Component.setPosition(Vector2f)"
  fullName: "ecs.Component.setPosition(org.joml.Vector2f)"
- uid: "ecs.Component.update(float)"
  name: "Component.update(float)"
  nameWithType: "Component.update(float)"
  fullName: "ecs.Component.update(float)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.function.Consumer"
  name: "Consumer"
  nameWithType: "Consumer"
  fullName: "java.util.function.Consumer"
