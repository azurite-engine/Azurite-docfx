### YamlMime:ManagedReference
items:
- uid: "graphics.postprocess.PostProcessStep"
  id: "PostProcessStep"
  parent: "graphics.postprocess"
  children:
  - "graphics.postprocess.PostProcessStep.PostProcessStep(graphics.postprocess.PostProcessStep.Target)"
  - "graphics.postprocess.PostProcessStep.Target"
  - "graphics.postprocess.PostProcessStep.apply()"
  - "graphics.postprocess.PostProcessStep.createFramebuffer()"
  - "graphics.postprocess.PostProcessStep.createShader()"
  - "graphics.postprocess.PostProcessStep.framebuffer"
  - "graphics.postprocess.PostProcessStep.init()"
  - "graphics.postprocess.PostProcessStep.prepare()"
  - "graphics.postprocess.PostProcessStep.uploadUniforms(graphics.Shader)"
  langs:
  - "java"
  name: "PostProcessStep"
  nameWithType: "PostProcessStep"
  fullName: "graphics.postprocess.PostProcessStep"
  type: "Class"
  package: "graphics.postprocess"
  summary: "Denotes A Step in Post Processing"
  syntax:
    content: "public abstract class PostProcessStep"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "graphics.postprocess.PostProcessStep.PostProcessStep(graphics.postprocess.PostProcessStep.Target)"
  id: "PostProcessStep(graphics.postprocess.PostProcessStep.Target)"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "PostProcessStep(PostProcessStep.Target target)"
  nameWithType: "PostProcessStep.PostProcessStep(PostProcessStep.Target target)"
  fullName: "graphics.postprocess.PostProcessStep.PostProcessStep(PostProcessStep.Target target)"
  overload: "graphics.postprocess.PostProcessStep.PostProcessStep*"
  type: "Constructor"
  package: "graphics.postprocess"
  syntax:
    content: "public PostProcessStep(PostProcessStep.Target target)"
    parameters:
    - id: "target"
      type: "graphics.postprocess.PostProcessStep.Target"
- uid: "graphics.postprocess.PostProcessStep.apply()"
  id: "apply()"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "apply()"
  nameWithType: "PostProcessStep.apply()"
  fullName: "graphics.postprocess.PostProcessStep.apply()"
  overload: "graphics.postprocess.PostProcessStep.apply*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Run this Step"
  syntax:
    content: "public Texture apply()"
    return:
      type: "graphics.Texture"
      description: "id of the texture if the framebuffer to render to is not default."
- uid: "graphics.postprocess.PostProcessStep.createFramebuffer()"
  id: "createFramebuffer()"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "createFramebuffer()"
  nameWithType: "PostProcessStep.createFramebuffer()"
  fullName: "graphics.postprocess.PostProcessStep.createFramebuffer()"
  overload: "graphics.postprocess.PostProcessStep.createFramebuffer*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Create Framebuffer based on target"
  syntax:
    content: "protected Framebuffer createFramebuffer()"
    return:
      type: "graphics.Framebuffer"
- uid: "graphics.postprocess.PostProcessStep.createShader()"
  id: "createShader()"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "createShader()"
  nameWithType: "PostProcessStep.createShader()"
  fullName: "graphics.postprocess.PostProcessStep.createShader()"
  overload: "graphics.postprocess.PostProcessStep.createShader*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Create the shader to be used for this step"
  syntax:
    content: "public abstract Shader createShader()"
    return:
      type: "graphics.Shader"
- uid: "graphics.postprocess.PostProcessStep.framebuffer"
  id: "framebuffer"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "framebuffer"
  nameWithType: "PostProcessStep.framebuffer"
  fullName: "graphics.postprocess.PostProcessStep.framebuffer"
  type: "Field"
  package: "graphics.postprocess"
  summary: "The framebuffer to which to render to"
  syntax:
    content: "public Framebuffer framebuffer"
    return:
      type: "graphics.Framebuffer"
- uid: "graphics.postprocess.PostProcessStep.init()"
  id: "init()"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "init()"
  nameWithType: "PostProcessStep.init()"
  fullName: "graphics.postprocess.PostProcessStep.init()"
  overload: "graphics.postprocess.PostProcessStep.init*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Create the shader and framebuffer"
  syntax:
    content: "public void init()"
- uid: "graphics.postprocess.PostProcessStep.prepare()"
  id: "prepare()"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "prepare()"
  nameWithType: "PostProcessStep.prepare()"
  fullName: "graphics.postprocess.PostProcessStep.prepare()"
  overload: "graphics.postprocess.PostProcessStep.prepare*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Prepare the framebuffer by clearing it and binding any textures required"
  syntax:
    content: "public abstract void prepare()"
- uid: "graphics.postprocess.PostProcessStep.uploadUniforms(graphics.Shader)"
  id: "uploadUniforms(graphics.Shader)"
  parent: "graphics.postprocess.PostProcessStep"
  langs:
  - "java"
  name: "uploadUniforms(Shader shader)"
  nameWithType: "PostProcessStep.uploadUniforms(Shader shader)"
  fullName: "graphics.postprocess.PostProcessStep.uploadUniforms(Shader shader)"
  overload: "graphics.postprocess.PostProcessStep.uploadUniforms*"
  type: "Method"
  package: "graphics.postprocess"
  summary: "Upload uniforms to the shader"
  syntax:
    content: "protected abstract void uploadUniforms(Shader shader)"
    parameters:
    - id: "shader"
      type: "graphics.Shader"
references:
- uid: "graphics.postprocess.PostProcessStep.Target"
  name: "PostProcessStep.Target"
  nameWithType: "PostProcessStep.Target"
  fullName: "graphics.postprocess.PostProcessStep.Target"
- uid: "graphics.postprocess.PostProcessStep.PostProcessStep*"
  name: "PostProcessStep"
  nameWithType: "PostProcessStep.PostProcessStep"
  fullName: "graphics.postprocess.PostProcessStep.PostProcessStep"
  package: "graphics.postprocess"
- uid: "graphics.Shader"
  name: "Shader"
  nameWithType: "Shader"
  fullName: "graphics.Shader"
- uid: "graphics.postprocess.PostProcessStep.createShader*"
  name: "createShader"
  nameWithType: "PostProcessStep.createShader"
  fullName: "graphics.postprocess.PostProcessStep.createShader"
  package: "graphics.postprocess"
- uid: "graphics.postprocess.PostProcessStep.prepare*"
  name: "prepare"
  nameWithType: "PostProcessStep.prepare"
  fullName: "graphics.postprocess.PostProcessStep.prepare"
  package: "graphics.postprocess"
- uid: "graphics.postprocess.PostProcessStep.uploadUniforms*"
  name: "uploadUniforms"
  nameWithType: "PostProcessStep.uploadUniforms"
  fullName: "graphics.postprocess.PostProcessStep.uploadUniforms"
  package: "graphics.postprocess"
- uid: "graphics.Framebuffer"
  name: "Framebuffer"
  nameWithType: "Framebuffer"
  fullName: "graphics.Framebuffer"
- uid: "graphics.postprocess.PostProcessStep.createFramebuffer*"
  name: "createFramebuffer"
  nameWithType: "PostProcessStep.createFramebuffer"
  fullName: "graphics.postprocess.PostProcessStep.createFramebuffer"
  package: "graphics.postprocess"
- uid: "graphics.postprocess.PostProcessStep.init*"
  name: "init"
  nameWithType: "PostProcessStep.init"
  fullName: "graphics.postprocess.PostProcessStep.init"
  package: "graphics.postprocess"
- uid: "graphics.Texture"
  name: "Texture"
  nameWithType: "Texture"
  fullName: "graphics.Texture"
- uid: "graphics.postprocess.PostProcessStep.apply*"
  name: "apply"
  nameWithType: "PostProcessStep.apply"
  fullName: "graphics.postprocess.PostProcessStep.apply"
  package: "graphics.postprocess"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
