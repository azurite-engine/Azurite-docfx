### YamlMime:ManagedReference
items:
- uid: "ui.layout.GridLayout.FillingOrder"
  id: "FillingOrder"
  parent: "ui.layout"
  children:
  - "ui.layout.GridLayout.FillingOrder.NATURAL_ORDER"
  - "ui.layout.GridLayout.FillingOrder.ROWS_FIRST"
  - "ui.layout.GridLayout.FillingOrder.getColumn(int,int,int)"
  - "ui.layout.GridLayout.FillingOrder.getRow(int,int,int)"
  - "ui.layout.GridLayout.FillingOrder.valueOf(java.lang.String)"
  - "ui.layout.GridLayout.FillingOrder.values()"
  langs:
  - "java"
  name: "GridLayout.FillingOrder"
  nameWithType: "GridLayout.FillingOrder"
  fullName: "ui.layout.GridLayout.FillingOrder"
  type: "Enum"
  package: "ui.layout"
  syntax:
    content: "public enum GridLayout.FillingOrder extends Enum<GridLayout.FillingOrder>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ui.layout.GridLayout.FillingOrder.FillingOrder()"
  id: "FillingOrder()"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "FillingOrder()"
  nameWithType: "GridLayout.FillingOrder.FillingOrder()"
  fullName: "ui.layout.GridLayout.FillingOrder.FillingOrder()"
  overload: "ui.layout.GridLayout.FillingOrder.FillingOrder*"
  type: "Constructor"
  package: "ui.layout"
  syntax:
    content: "private FillingOrder()"
- uid: "ui.layout.GridLayout.FillingOrder.NATURAL_ORDER"
  id: "NATURAL_ORDER"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "NATURAL_ORDER"
  nameWithType: "GridLayout.FillingOrder.NATURAL_ORDER"
  fullName: "ui.layout.GridLayout.FillingOrder.NATURAL_ORDER"
  type: "Field"
  package: "ui.layout"
  syntax:
    content: "public static final GridLayout.FillingOrder NATURAL_ORDER"
    return:
      type: "ui.layout.GridLayout.FillingOrder"
- uid: "ui.layout.GridLayout.FillingOrder.ROWS_FIRST"
  id: "ROWS_FIRST"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "ROWS_FIRST"
  nameWithType: "GridLayout.FillingOrder.ROWS_FIRST"
  fullName: "ui.layout.GridLayout.FillingOrder.ROWS_FIRST"
  type: "Field"
  package: "ui.layout"
  syntax:
    content: "public static final GridLayout.FillingOrder ROWS_FIRST"
    return:
      type: "ui.layout.GridLayout.FillingOrder"
- uid: "ui.layout.GridLayout.FillingOrder.getColumn(int,int,int)"
  id: "getColumn(int,int,int)"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "getColumn(int i, int columns, int rows)"
  nameWithType: "GridLayout.FillingOrder.getColumn(int i, int columns, int rows)"
  fullName: "ui.layout.GridLayout.FillingOrder.getColumn(int i, int columns, int rows)"
  overload: "ui.layout.GridLayout.FillingOrder.getColumn*"
  type: "Method"
  package: "ui.layout"
  syntax:
    content: "public int getColumn(int i, int columns, int rows)"
    parameters:
    - id: "i"
      type: "int"
    - id: "columns"
      type: "int"
    - id: "rows"
      type: "int"
    return:
      type: "int"
- uid: "ui.layout.GridLayout.FillingOrder.getRow(int,int,int)"
  id: "getRow(int,int,int)"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "getRow(int i, int columns, int rows)"
  nameWithType: "GridLayout.FillingOrder.getRow(int i, int columns, int rows)"
  fullName: "ui.layout.GridLayout.FillingOrder.getRow(int i, int columns, int rows)"
  overload: "ui.layout.GridLayout.FillingOrder.getRow*"
  type: "Method"
  package: "ui.layout"
  syntax:
    content: "public int getRow(int i, int columns, int rows)"
    parameters:
    - id: "i"
      type: "int"
    - id: "columns"
      type: "int"
    - id: "rows"
      type: "int"
    return:
      type: "int"
- uid: "ui.layout.GridLayout.FillingOrder.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "GridLayout.FillingOrder.valueOf(String name)"
  fullName: "ui.layout.GridLayout.FillingOrder.valueOf(String name)"
  overload: "ui.layout.GridLayout.FillingOrder.valueOf*"
  type: "Method"
  package: "ui.layout"
  syntax:
    content: "public static GridLayout.FillingOrder valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "ui.layout.GridLayout.FillingOrder"
- uid: "ui.layout.GridLayout.FillingOrder.values()"
  id: "values()"
  parent: "ui.layout.GridLayout.FillingOrder"
  langs:
  - "java"
  name: "values()"
  nameWithType: "GridLayout.FillingOrder.values()"
  fullName: "ui.layout.GridLayout.FillingOrder.values()"
  overload: "ui.layout.GridLayout.FillingOrder.values*"
  type: "Method"
  package: "ui.layout"
  syntax:
    content: "public static GridLayout.FillingOrder[] values()"
    return:
      type: "ui.layout.GridLayout.FillingOrder[]"
references:
- uid: "ui.layout.GridLayout.FillingOrder.FillingOrder*"
  name: "FillingOrder"
  nameWithType: "GridLayout.FillingOrder.FillingOrder"
  fullName: "ui.layout.GridLayout.FillingOrder.FillingOrder"
  package: "ui.layout"
- uid: "ui.layout.GridLayout.FillingOrder[]"
  spec.java:
  - uid: "ui.layout.GridLayout.FillingOrder"
    name: "FillingOrder"
    fullName: "ui.layout.GridLayout.FillingOrder"
  - name: "[]"
    fullName: "[]"
- uid: "ui.layout.GridLayout.FillingOrder.values*"
  name: "values"
  nameWithType: "GridLayout.FillingOrder.values"
  fullName: "ui.layout.GridLayout.FillingOrder.values"
  package: "ui.layout"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "ui.layout.GridLayout.FillingOrder.valueOf*"
  name: "valueOf"
  nameWithType: "GridLayout.FillingOrder.valueOf"
  fullName: "ui.layout.GridLayout.FillingOrder.valueOf"
  package: "ui.layout"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ui.layout.GridLayout.FillingOrder.getRow*"
  name: "getRow"
  nameWithType: "GridLayout.FillingOrder.getRow"
  fullName: "ui.layout.GridLayout.FillingOrder.getRow"
  package: "ui.layout"
- uid: "ui.layout.GridLayout.FillingOrder.getColumn*"
  name: "getColumn"
  nameWithType: "GridLayout.FillingOrder.getColumn"
  fullName: "ui.layout.GridLayout.FillingOrder.getColumn"
  package: "ui.layout"
- uid: "java.lang.Enum<ui.layout.GridLayout.FillingOrder>"
  name: "Enum<GridLayout.FillingOrder>"
  nameWithType: "Enum<GridLayout.FillingOrder>"
  fullName: "java.lang.Enum<ui.layout.GridLayout.FillingOrder>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
