### YamlMime:ManagedReference
items:
- uid: "io.xml.XMLElement"
  id: "XMLElement"
  parent: "io.xml"
  children:
  - "io.xml.XMLElement.XMLElement(java.lang.String)"
  - "io.xml.XMLElement.XMLElement(java.lang.String,java.lang.String)"
  - "io.xml.XMLElement.XMLElement(java.lang.String,java.util.List<io.xml.XMLElement>)"
  - "io.xml.XMLElement.XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String)"
  - "io.xml.XMLElement.XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.util.List<io.xml.XMLElement>)"
  - "io.xml.XMLElement.addAttribute(java.lang.String,java.lang.String)"
  - "io.xml.XMLElement.addSubElement(io.xml.XMLElement)"
  - "io.xml.XMLElement.getAttributes()"
  - "io.xml.XMLElement.getChildren()"
  - "io.xml.XMLElement.getTag()"
  - "io.xml.XMLElement.getValue()"
  - "io.xml.XMLElement.setValue(java.lang.String)"
  - "io.xml.XMLElement.toString()"
  - "io.xml.XMLElement.toString(boolean)"
  langs:
  - "java"
  name: "XMLElement"
  nameWithType: "XMLElement"
  fullName: "io.xml.XMLElement"
  type: "Class"
  package: "io.xml"
  syntax:
    content: "public class XMLElement"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.xml.XMLElement.XMLElement(java.lang.String)"
  id: "XMLElement(java.lang.String)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "XMLElement(String comment)"
  nameWithType: "XMLElement.XMLElement(String comment)"
  fullName: "io.xml.XMLElement.XMLElement(String comment)"
  overload: "io.xml.XMLElement.XMLElement*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLElement(String comment)"
    parameters:
    - id: "comment"
      type: "java.lang.String"
- uid: "io.xml.XMLElement.XMLElement(java.lang.String,java.lang.String)"
  id: "XMLElement(java.lang.String,java.lang.String)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "XMLElement(String tag, String value)"
  nameWithType: "XMLElement.XMLElement(String tag, String value)"
  fullName: "io.xml.XMLElement.XMLElement(String tag, String value)"
  overload: "io.xml.XMLElement.XMLElement*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLElement(String tag, String value)"
    parameters:
    - id: "tag"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
- uid: "io.xml.XMLElement.XMLElement(java.lang.String,java.util.List<io.xml.XMLElement>)"
  id: "XMLElement(java.lang.String,java.util.List<io.xml.XMLElement>)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "XMLElement(String tag, List<XMLElement> subElements)"
  nameWithType: "XMLElement.XMLElement(String tag, List<XMLElement> subElements)"
  fullName: "io.xml.XMLElement.XMLElement(String tag, List<XMLElement> subElements)"
  overload: "io.xml.XMLElement.XMLElement*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLElement(String tag, List<XMLElement> subElements)"
    parameters:
    - id: "tag"
      type: "java.lang.String"
    - id: "subElements"
      type: "java.util.List<io.xml.XMLElement>"
- uid: "io.xml.XMLElement.XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String)"
  id: "XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "XMLElement(String tag, Map<String,String> attributes, String value)"
  nameWithType: "XMLElement.XMLElement(String tag, Map<String,String> attributes, String value)"
  fullName: "io.xml.XMLElement.XMLElement(String tag, Map<String,String> attributes, String value)"
  overload: "io.xml.XMLElement.XMLElement*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLElement(String tag, Map<String,String> attributes, String value)"
    parameters:
    - id: "tag"
      type: "java.lang.String"
    - id: "attributes"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "value"
      type: "java.lang.String"
- uid: "io.xml.XMLElement.XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.util.List<io.xml.XMLElement>)"
  id: "XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.util.List<io.xml.XMLElement>)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)"
  nameWithType: "XMLElement.XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)"
  fullName: "io.xml.XMLElement.XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)"
  overload: "io.xml.XMLElement.XMLElement*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)"
    parameters:
    - id: "tag"
      type: "java.lang.String"
    - id: "attributes"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "subElements"
      type: "java.util.List<io.xml.XMLElement>"
- uid: "io.xml.XMLElement.addAttribute(java.lang.String,java.lang.String)"
  id: "addAttribute(java.lang.String,java.lang.String)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "addAttribute(String name, String value)"
  nameWithType: "XMLElement.addAttribute(String name, String value)"
  fullName: "io.xml.XMLElement.addAttribute(String name, String value)"
  overload: "io.xml.XMLElement.addAttribute*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public void addAttribute(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
- uid: "io.xml.XMLElement.addSubElement(io.xml.XMLElement)"
  id: "addSubElement(io.xml.XMLElement)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "addSubElement(XMLElement element)"
  nameWithType: "XMLElement.addSubElement(XMLElement element)"
  fullName: "io.xml.XMLElement.addSubElement(XMLElement element)"
  overload: "io.xml.XMLElement.addSubElement*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public void addSubElement(XMLElement element)"
    parameters:
    - id: "element"
      type: "io.xml.XMLElement"
- uid: "io.xml.XMLElement.getAttributes()"
  id: "getAttributes()"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "getAttributes()"
  nameWithType: "XMLElement.getAttributes()"
  fullName: "io.xml.XMLElement.getAttributes()"
  overload: "io.xml.XMLElement.getAttributes*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public Map<String,String> getAttributes()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "io.xml.XMLElement.getChildren()"
  id: "getChildren()"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "getChildren()"
  nameWithType: "XMLElement.getChildren()"
  fullName: "io.xml.XMLElement.getChildren()"
  overload: "io.xml.XMLElement.getChildren*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public List<XMLElement> getChildren()"
    return:
      type: "java.util.List<io.xml.XMLElement>"
- uid: "io.xml.XMLElement.getTag()"
  id: "getTag()"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "getTag()"
  nameWithType: "XMLElement.getTag()"
  fullName: "io.xml.XMLElement.getTag()"
  overload: "io.xml.XMLElement.getTag*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public String getTag()"
    return:
      type: "java.lang.String"
- uid: "io.xml.XMLElement.getValue()"
  id: "getValue()"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "XMLElement.getValue()"
  fullName: "io.xml.XMLElement.getValue()"
  overload: "io.xml.XMLElement.getValue*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public String getValue()"
    return:
      type: "java.lang.String"
- uid: "io.xml.XMLElement.setValue(java.lang.String)"
  id: "setValue(java.lang.String)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "setValue(String value)"
  nameWithType: "XMLElement.setValue(String value)"
  fullName: "io.xml.XMLElement.setValue(String value)"
  overload: "io.xml.XMLElement.setValue*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public void setValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
- uid: "io.xml.XMLElement.toString()"
  id: "toString()"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "XMLElement.toString()"
  fullName: "io.xml.XMLElement.toString()"
  overload: "io.xml.XMLElement.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
- uid: "io.xml.XMLElement.toString(boolean)"
  id: "toString(boolean)"
  parent: "io.xml.XMLElement"
  langs:
  - "java"
  name: "toString(boolean fancy)"
  nameWithType: "XMLElement.toString(boolean fancy)"
  fullName: "io.xml.XMLElement.toString(boolean fancy)"
  overload: "io.xml.XMLElement.toString*"
  type: "Method"
  package: "io.xml"
  syntax:
    content: "public String toString(boolean fancy)"
    parameters:
    - id: "fancy"
      type: "boolean"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.util.List<io.xml.XMLElement>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "io.xml.XMLElement"
    name: "XMLElement"
    fullName: "io.xml.XMLElement"
  - name: ">"
    fullName: ">"
- uid: "io.xml.XMLElement.XMLElement*"
  name: "XMLElement"
  nameWithType: "XMLElement.XMLElement"
  fullName: "io.xml.XMLElement.XMLElement"
  package: "io.xml"
- uid: "io.xml.XMLElement.getChildren*"
  name: "getChildren"
  nameWithType: "XMLElement.getChildren"
  fullName: "io.xml.XMLElement.getChildren"
  package: "io.xml"
- uid: "io.xml.XMLElement.getAttributes*"
  name: "getAttributes"
  nameWithType: "XMLElement.getAttributes"
  fullName: "io.xml.XMLElement.getAttributes"
  package: "io.xml"
- uid: "io.xml.XMLElement.getTag*"
  name: "getTag"
  nameWithType: "XMLElement.getTag"
  fullName: "io.xml.XMLElement.getTag"
  package: "io.xml"
- uid: "io.xml.XMLElement.getValue*"
  name: "getValue"
  nameWithType: "XMLElement.getValue"
  fullName: "io.xml.XMLElement.getValue"
  package: "io.xml"
- uid: "io.xml.XMLElement.setValue*"
  name: "setValue"
  nameWithType: "XMLElement.setValue"
  fullName: "io.xml.XMLElement.setValue"
  package: "io.xml"
- uid: "io.xml.XMLElement.addAttribute*"
  name: "addAttribute"
  nameWithType: "XMLElement.addAttribute"
  fullName: "io.xml.XMLElement.addAttribute"
  package: "io.xml"
- uid: "io.xml.XMLElement.addSubElement*"
  name: "addSubElement"
  nameWithType: "XMLElement.addSubElement"
  fullName: "io.xml.XMLElement.addSubElement"
  package: "io.xml"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "io.xml.XMLElement.toString*"
  name: "toString"
  nameWithType: "XMLElement.toString"
  fullName: "io.xml.XMLElement.toString"
  package: "io.xml"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
