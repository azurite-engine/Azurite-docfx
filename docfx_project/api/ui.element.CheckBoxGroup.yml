### YamlMime:ManagedReference
items:
- uid: "ui.element.CheckBoxGroup"
  id: "CheckBoxGroup"
  parent: "ui.element"
  children:
  - "ui.element.CheckBoxGroup.CheckBoxGroup(ui.element.CheckBox.Type,java.util.List<java.lang.String>,graphics.Sprite,graphics.Sprite,org.joml.Vector2f)"
  - "ui.element.CheckBoxGroup.addOption(java.lang.String)"
  - "ui.element.CheckBoxGroup.getOptions()"
  - "ui.element.CheckBoxGroup.getSelected()"
  - "ui.element.CheckBoxGroup.removeOption(java.lang.String)"
  - "ui.element.CheckBoxGroup.select(int)"
  - "ui.element.CheckBoxGroup.type"
  - "ui.element.CheckBoxGroup.update()"
  langs:
  - "java"
  name: "CheckBoxGroup"
  nameWithType: "CheckBoxGroup"
  fullName: "ui.element.CheckBoxGroup"
  type: "Class"
  package: "ui.element"
  syntax:
    content: "public class CheckBoxGroup extends Element"
  inheritance:
  - "java.lang.Object"
  - "ui.Element"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "ui.Element.draw()"
  - "ui.Element.getCursor()"
  - "ui.Element.getEnabled()"
  - "ui.Element.getEventHandler()"
  - "ui.Element.getFocused()"
  - "ui.Element.getFont()"
  - "ui.Element.getFrame()"
  - "ui.Element.getHeight()"
  - "ui.Element.getLayoutInfo()"
  - "ui.Element.getParent()"
  - "ui.Element.getVisible()"
  - "ui.Element.getWidth()"
  - "ui.Element.getX()"
  - "ui.Element.getY()"
  - "ui.Element.hasEventHandler()"
  - "ui.Element.isEnabled()"
  - "ui.Element.isFocused()"
  - "ui.Element.isMouseOnThis()"
  - "ui.Element.isVisible()"
  - "ui.Element.postUpdate()"
  - "ui.Element.requestFocus()"
  - "ui.Element.setCursor(int)"
  - "ui.Element.setEnabled(boolean)"
  - "ui.Element.setFocused(boolean)"
  - "ui.Element.setFont(ui.fonts.Font)"
  - "ui.Element.setLayoutInfo(java.lang.Object)"
  - "ui.Element.setParent(ui.Container)"
  - "ui.Element.setVisible(boolean)"
  - "ui.Element.update()"
  - "ui.Element.zIndex()"
- uid: "ui.element.CheckBoxGroup.CheckBoxGroup(ui.element.CheckBox.Type,java.util.List<java.lang.String>,graphics.Sprite,graphics.Sprite,org.joml.Vector2f)"
  id: "CheckBoxGroup(ui.element.CheckBox.Type,java.util.List<java.lang.String>,graphics.Sprite,graphics.Sprite,org.joml.Vector2f)"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "CheckBoxGroup(CheckBox.Type type, List<String> options, Sprite unchecked, Sprite checked, Vector2f position)"
  nameWithType: "CheckBoxGroup.CheckBoxGroup(CheckBox.Type type, List<String> options, Sprite unchecked, Sprite checked, Vector2f position)"
  fullName: "ui.element.CheckBoxGroup.CheckBoxGroup(CheckBox.Type type, List<String> options, Sprite unchecked, Sprite checked, Vector2f position)"
  overload: "ui.element.CheckBoxGroup.CheckBoxGroup*"
  type: "Constructor"
  package: "ui.element"
  syntax:
    content: "public CheckBoxGroup(CheckBox.Type type, List<String> options, Sprite unchecked, Sprite checked, Vector2f position)"
    parameters:
    - id: "type"
      type: "ui.element.CheckBox.Type"
    - id: "options"
      type: "java.util.List<java.lang.String>"
    - id: "unchecked"
      type: "graphics.Sprite"
    - id: "checked"
      type: "graphics.Sprite"
    - id: "position"
      type: "org.joml.Vector2f"
- uid: "ui.element.CheckBoxGroup.addOption(java.lang.String)"
  id: "addOption(java.lang.String)"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "addOption(String option)"
  nameWithType: "CheckBoxGroup.addOption(String option)"
  fullName: "ui.element.CheckBoxGroup.addOption(String option)"
  overload: "ui.element.CheckBoxGroup.addOption*"
  type: "Method"
  package: "ui.element"
  syntax:
    content: "public void addOption(String option)"
    parameters:
    - id: "option"
      type: "java.lang.String"
- uid: "ui.element.CheckBoxGroup.getOptions()"
  id: "getOptions()"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "getOptions()"
  nameWithType: "CheckBoxGroup.getOptions()"
  fullName: "ui.element.CheckBoxGroup.getOptions()"
  overload: "ui.element.CheckBoxGroup.getOptions*"
  type: "Method"
  package: "ui.element"
  syntax:
    content: "public List<String> getOptions()"
    return:
      type: "java.util.List<java.lang.String>"
- uid: "ui.element.CheckBoxGroup.getSelected()"
  id: "getSelected()"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "getSelected()"
  nameWithType: "CheckBoxGroup.getSelected()"
  fullName: "ui.element.CheckBoxGroup.getSelected()"
  overload: "ui.element.CheckBoxGroup.getSelected*"
  type: "Method"
  package: "ui.element"
  syntax:
    content: "public List<String> getSelected()"
    return:
      type: "java.util.List<java.lang.String>"
- uid: "ui.element.CheckBoxGroup.removeOption(java.lang.String)"
  id: "removeOption(java.lang.String)"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "removeOption(String option)"
  nameWithType: "CheckBoxGroup.removeOption(String option)"
  fullName: "ui.element.CheckBoxGroup.removeOption(String option)"
  overload: "ui.element.CheckBoxGroup.removeOption*"
  type: "Method"
  package: "ui.element"
  syntax:
    content: "public void removeOption(String option)"
    parameters:
    - id: "option"
      type: "java.lang.String"
- uid: "ui.element.CheckBoxGroup.select(int)"
  id: "select(int)"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "select(int select)"
  nameWithType: "CheckBoxGroup.select(int select)"
  fullName: "ui.element.CheckBoxGroup.select(int select)"
  overload: "ui.element.CheckBoxGroup.select*"
  type: "Method"
  package: "ui.element"
  syntax:
    content: "public void select(int select)"
    parameters:
    - id: "select"
      type: "int"
- uid: "ui.element.CheckBoxGroup.type"
  id: "type"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "type"
  nameWithType: "CheckBoxGroup.type"
  fullName: "ui.element.CheckBoxGroup.type"
  type: "Field"
  package: "ui.element"
  syntax:
    content: "protected final CheckBox.Type type"
    return:
      type: "ui.element.CheckBox.Type"
- uid: "ui.element.CheckBoxGroup.update()"
  id: "update()"
  parent: "ui.element.CheckBoxGroup"
  langs:
  - "java"
  name: "update()"
  nameWithType: "CheckBoxGroup.update()"
  fullName: "ui.element.CheckBoxGroup.update()"
  overload: "ui.element.CheckBoxGroup.update*"
  overridden: "ui.Element.update()"
  type: "Method"
  package: "ui.element"
  syntax:
    content: "public void update()"
references:
- uid: "ui.element.CheckBox.Type"
  name: "CheckBox.Type"
  nameWithType: "CheckBox.Type"
  fullName: "ui.element.CheckBox.Type"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "graphics.Sprite"
  name: "Sprite"
  nameWithType: "Sprite"
  fullName: "graphics.Sprite"
- uid: "org.joml.Vector2f"
  spec.java:
  - uid: "org.joml.Vector2f"
    name: "Vector2f"
    fullName: "org.joml.Vector2f"
- uid: "ui.element.CheckBoxGroup.CheckBoxGroup*"
  name: "CheckBoxGroup"
  nameWithType: "CheckBoxGroup.CheckBoxGroup"
  fullName: "ui.element.CheckBoxGroup.CheckBoxGroup"
  package: "ui.element"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "ui.element.CheckBoxGroup.addOption*"
  name: "addOption"
  nameWithType: "CheckBoxGroup.addOption"
  fullName: "ui.element.CheckBoxGroup.addOption"
  package: "ui.element"
- uid: "ui.element.CheckBoxGroup.removeOption*"
  name: "removeOption"
  nameWithType: "CheckBoxGroup.removeOption"
  fullName: "ui.element.CheckBoxGroup.removeOption"
  package: "ui.element"
- uid: "ui.element.CheckBoxGroup.getSelected*"
  name: "getSelected"
  nameWithType: "CheckBoxGroup.getSelected"
  fullName: "ui.element.CheckBoxGroup.getSelected"
  package: "ui.element"
- uid: "ui.element.CheckBoxGroup.getOptions*"
  name: "getOptions"
  nameWithType: "CheckBoxGroup.getOptions"
  fullName: "ui.element.CheckBoxGroup.getOptions"
  package: "ui.element"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ui.element.CheckBoxGroup.select*"
  name: "select"
  nameWithType: "CheckBoxGroup.select"
  fullName: "ui.element.CheckBoxGroup.select"
  package: "ui.element"
- uid: "ui.element.CheckBoxGroup.update*"
  name: "update"
  nameWithType: "CheckBoxGroup.update"
  fullName: "ui.element.CheckBoxGroup.update"
  package: "ui.element"
- uid: "ui.Element"
  name: "Element"
  nameWithType: "Element"
  fullName: "ui.Element"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "ui.Element.setParent(ui.Container)"
  name: "Element.setParent(Container)"
  nameWithType: "Element.setParent(Container)"
  fullName: "ui.Element.setParent(ui.Container)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "ui.Element.isFocused()"
  name: "Element.isFocused()"
  nameWithType: "Element.isFocused()"
  fullName: "ui.Element.isFocused()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "ui.Element.getLayoutInfo()"
  name: "Element.getLayoutInfo()"
  nameWithType: "Element.getLayoutInfo()"
  fullName: "ui.Element.getLayoutInfo()"
- uid: "ui.Element.getY()"
  name: "Element.getY()"
  nameWithType: "Element.getY()"
  fullName: "ui.Element.getY()"
- uid: "ui.Element.getCursor()"
  name: "Element.getCursor()"
  nameWithType: "Element.getCursor()"
  fullName: "ui.Element.getCursor()"
- uid: "ui.Element.isEnabled()"
  name: "Element.isEnabled()"
  nameWithType: "Element.isEnabled()"
  fullName: "ui.Element.isEnabled()"
- uid: "ui.Element.getWidth()"
  name: "Element.getWidth()"
  nameWithType: "Element.getWidth()"
  fullName: "ui.Element.getWidth()"
- uid: "ui.Element.setFocused(boolean)"
  name: "Element.setFocused(boolean)"
  nameWithType: "Element.setFocused(boolean)"
  fullName: "ui.Element.setFocused(boolean)"
- uid: "ui.Element.getHeight()"
  name: "Element.getHeight()"
  nameWithType: "Element.getHeight()"
  fullName: "ui.Element.getHeight()"
- uid: "ui.Element.zIndex()"
  name: "Element.zIndex()"
  nameWithType: "Element.zIndex()"
  fullName: "ui.Element.zIndex()"
- uid: "ui.Element.getX()"
  name: "Element.getX()"
  nameWithType: "Element.getX()"
  fullName: "ui.Element.getX()"
- uid: "ui.Element.setFont(ui.fonts.Font)"
  name: "Element.setFont(Font)"
  nameWithType: "Element.setFont(Font)"
  fullName: "ui.Element.setFont(ui.fonts.Font)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "ui.Element.setVisible(boolean)"
  name: "Element.setVisible(boolean)"
  nameWithType: "Element.setVisible(boolean)"
  fullName: "ui.Element.setVisible(boolean)"
- uid: "ui.Element.update()"
  name: "Element.update()"
  nameWithType: "Element.update()"
  fullName: "ui.Element.update()"
- uid: "ui.Element.setCursor(int)"
  name: "Element.setCursor(int)"
  nameWithType: "Element.setCursor(int)"
  fullName: "ui.Element.setCursor(int)"
- uid: "ui.Element.getParent()"
  name: "Element.getParent()"
  nameWithType: "Element.getParent()"
  fullName: "ui.Element.getParent()"
- uid: "ui.Element.requestFocus()"
  name: "Element.requestFocus()"
  nameWithType: "Element.requestFocus()"
  fullName: "ui.Element.requestFocus()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "ui.Element.hasEventHandler()"
  name: "Element.hasEventHandler()"
  nameWithType: "Element.hasEventHandler()"
  fullName: "ui.Element.hasEventHandler()"
- uid: "ui.Element.postUpdate()"
  name: "Element.postUpdate()"
  nameWithType: "Element.postUpdate()"
  fullName: "ui.Element.postUpdate()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "ui.Element.getFocused()"
  name: "Element.getFocused()"
  nameWithType: "Element.getFocused()"
  fullName: "ui.Element.getFocused()"
- uid: "ui.Element.isMouseOnThis()"
  name: "Element.isMouseOnThis()"
  nameWithType: "Element.isMouseOnThis()"
  fullName: "ui.Element.isMouseOnThis()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "ui.Element.setLayoutInfo(java.lang.Object)"
  name: "Element.setLayoutInfo(Object)"
  nameWithType: "Element.setLayoutInfo(Object)"
  fullName: "ui.Element.setLayoutInfo(java.lang.Object)"
- uid: "ui.Element.getFont()"
  name: "Element.getFont()"
  nameWithType: "Element.getFont()"
  fullName: "ui.Element.getFont()"
- uid: "ui.Element.getEventHandler()"
  name: "Element.getEventHandler()"
  nameWithType: "Element.getEventHandler()"
  fullName: "ui.Element.getEventHandler()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "ui.Element.getVisible()"
  name: "Element.getVisible()"
  nameWithType: "Element.getVisible()"
  fullName: "ui.Element.getVisible()"
- uid: "ui.Element.getEnabled()"
  name: "Element.getEnabled()"
  nameWithType: "Element.getEnabled()"
  fullName: "ui.Element.getEnabled()"
- uid: "ui.Element.draw()"
  name: "Element.draw()"
  nameWithType: "Element.draw()"
  fullName: "ui.Element.draw()"
- uid: "ui.Element.isVisible()"
  name: "Element.isVisible()"
  nameWithType: "Element.isVisible()"
  fullName: "ui.Element.isVisible()"
- uid: "ui.Element.setEnabled(boolean)"
  name: "Element.setEnabled(boolean)"
  nameWithType: "Element.setEnabled(boolean)"
  fullName: "ui.Element.setEnabled(boolean)"
- uid: "ui.Element.getFrame()"
  name: "Element.getFrame()"
  nameWithType: "Element.getFrame()"
  fullName: "ui.Element.getFrame()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
