### YamlMime:ManagedReference
items:
- uid: "io.xml.XMLTokenizer"
  id: "XMLTokenizer"
  parent: "io.xml"
  children:
  - "io.xml.XMLTokenizer.ATTR_EQUALS"
  - "io.xml.XMLTokenizer.CLOSE_TAG"
  - "io.xml.XMLTokenizer.COMMENT_CONTENT"
  - "io.xml.XMLTokenizer.COMMENT_DASHES"
  - "io.xml.XMLTokenizer.COMMENT_MARK"
  - "io.xml.XMLTokenizer.IDENTIFIER"
  - "io.xml.XMLTokenizer.OPEN_TAG"
  - "io.xml.XMLTokenizer.QUOTATION"
  - "io.xml.XMLTokenizer.SELF_CLOSE"
  - "io.xml.XMLTokenizer.SPACING"
  - "io.xml.XMLTokenizer.VALUE"
  - "io.xml.XMLTokenizer.XMLTokenizer()"
  - "io.xml.XMLTokenizer.detectCharset(byte[])"
  - "io.xml.XMLTokenizer.tokenize(java.lang.String)"
  langs:
  - "java"
  name: "XMLTokenizer"
  nameWithType: "XMLTokenizer"
  fullName: "io.xml.XMLTokenizer"
  type: "Class"
  package: "io.xml"
  syntax:
    content: "public final class XMLTokenizer extends Tokenizer"
  inheritance:
  - "java.lang.Object"
  - "io.Tokenizer"
  inheritedMembers:
  - "io.Tokenizer.detectCharset(byte[])"
  - "io.Tokenizer.tokenize(byte[])"
  - "io.Tokenizer.tokenize(byte[],java.nio.charset.Charset)"
  - "io.Tokenizer.tokenize(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "io.xml.XMLTokenizer.ATTR_EQUALS"
  id: "ATTR_EQUALS"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "ATTR_EQUALS"
  nameWithType: "XMLTokenizer.ATTR_EQUALS"
  fullName: "io.xml.XMLTokenizer.ATTR_EQUALS"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader ATTR_EQUALS"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.CLOSE_TAG"
  id: "CLOSE_TAG"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "CLOSE_TAG"
  nameWithType: "XMLTokenizer.CLOSE_TAG"
  fullName: "io.xml.XMLTokenizer.CLOSE_TAG"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader CLOSE_TAG"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.COMMENT_CONTENT"
  id: "COMMENT_CONTENT"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "COMMENT_CONTENT"
  nameWithType: "XMLTokenizer.COMMENT_CONTENT"
  fullName: "io.xml.XMLTokenizer.COMMENT_CONTENT"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader COMMENT_CONTENT"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.COMMENT_DASHES"
  id: "COMMENT_DASHES"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "COMMENT_DASHES"
  nameWithType: "XMLTokenizer.COMMENT_DASHES"
  fullName: "io.xml.XMLTokenizer.COMMENT_DASHES"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader COMMENT_DASHES"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.COMMENT_MARK"
  id: "COMMENT_MARK"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "COMMENT_MARK"
  nameWithType: "XMLTokenizer.COMMENT_MARK"
  fullName: "io.xml.XMLTokenizer.COMMENT_MARK"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader COMMENT_MARK"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.IDENTIFIER"
  id: "IDENTIFIER"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "IDENTIFIER"
  nameWithType: "XMLTokenizer.IDENTIFIER"
  fullName: "io.xml.XMLTokenizer.IDENTIFIER"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader IDENTIFIER"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.OPEN_TAG"
  id: "OPEN_TAG"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "OPEN_TAG"
  nameWithType: "XMLTokenizer.OPEN_TAG"
  fullName: "io.xml.XMLTokenizer.OPEN_TAG"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader OPEN_TAG"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.QUOTATION"
  id: "QUOTATION"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "QUOTATION"
  nameWithType: "XMLTokenizer.QUOTATION"
  fullName: "io.xml.XMLTokenizer.QUOTATION"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader QUOTATION"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.SELF_CLOSE"
  id: "SELF_CLOSE"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "SELF_CLOSE"
  nameWithType: "XMLTokenizer.SELF_CLOSE"
  fullName: "io.xml.XMLTokenizer.SELF_CLOSE"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader SELF_CLOSE"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.SPACING"
  id: "SPACING"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "SPACING"
  nameWithType: "XMLTokenizer.SPACING"
  fullName: "io.xml.XMLTokenizer.SPACING"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader SPACING"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.VALUE"
  id: "VALUE"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "VALUE"
  nameWithType: "XMLTokenizer.VALUE"
  fullName: "io.xml.XMLTokenizer.VALUE"
  type: "Field"
  package: "io.xml"
  syntax:
    content: "public static final TokenReader VALUE"
    return:
      type: "io.token.TokenReader"
- uid: "io.xml.XMLTokenizer.XMLTokenizer()"
  id: "XMLTokenizer()"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "XMLTokenizer()"
  nameWithType: "XMLTokenizer.XMLTokenizer()"
  fullName: "io.xml.XMLTokenizer.XMLTokenizer()"
  overload: "io.xml.XMLTokenizer.XMLTokenizer*"
  type: "Constructor"
  package: "io.xml"
  syntax:
    content: "public XMLTokenizer()"
- uid: "io.xml.XMLTokenizer.detectCharset(byte[])"
  id: "detectCharset(byte[])"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "detectCharset(byte[] input)"
  nameWithType: "XMLTokenizer.detectCharset(byte[] input)"
  fullName: "io.xml.XMLTokenizer.detectCharset(byte[] input)"
  overload: "io.xml.XMLTokenizer.detectCharset*"
  overridden: "io.Tokenizer.detectCharset(byte[])"
  type: "Method"
  package: "io.xml"
  summary: "Read raw input data to determine the charset based on the input - or return a default one."
  syntax:
    content: "public Charset detectCharset(byte[] input)"
    parameters:
    - id: "input"
      type: "byte[]"
    return:
      type: "java.nio.charset.Charset"
- uid: "io.xml.XMLTokenizer.tokenize(java.lang.String)"
  id: "tokenize(java.lang.String)"
  parent: "io.xml.XMLTokenizer"
  langs:
  - "java"
  name: "tokenize(String input)"
  nameWithType: "XMLTokenizer.tokenize(String input)"
  fullName: "io.xml.XMLTokenizer.tokenize(String input)"
  overload: "io.xml.XMLTokenizer.tokenize*"
  overridden: "io.Tokenizer.tokenize(java.lang.String)"
  type: "Method"
  package: "io.xml"
  summary: "Reads an input string and extracts all tokens depending on the implementation from it"
  syntax:
    content: "public List<Token> tokenize(String input)"
    parameters:
    - id: "input"
      type: "java.lang.String"
    return:
      type: "java.util.List<io.token.Token>"
references:
- uid: "io.xml.XMLTokenizer.XMLTokenizer*"
  name: "XMLTokenizer"
  nameWithType: "XMLTokenizer.XMLTokenizer"
  fullName: "io.xml.XMLTokenizer.XMLTokenizer"
  package: "io.xml"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.List<io.token.Token>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "io.token.Token"
    name: "Token"
    fullName: "io.token.Token"
  - name: ">"
    fullName: ">"
- uid: "io.xml.XMLTokenizer.tokenize*"
  name: "tokenize"
  nameWithType: "XMLTokenizer.tokenize"
  fullName: "io.xml.XMLTokenizer.tokenize"
  package: "io.xml"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.nio.charset.Charset"
  spec.java:
  - uid: "java.nio.charset.Charset"
    name: "Charset"
    fullName: "java.nio.charset.Charset"
- uid: "io.xml.XMLTokenizer.detectCharset*"
  name: "detectCharset"
  nameWithType: "XMLTokenizer.detectCharset"
  fullName: "io.xml.XMLTokenizer.detectCharset"
  package: "io.xml"
- uid: "io.token.TokenReader"
  name: "TokenReader"
  nameWithType: "TokenReader"
  fullName: "io.token.TokenReader"
- uid: "io.Tokenizer"
  name: "Tokenizer"
  nameWithType: "Tokenizer"
  fullName: "io.Tokenizer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "io.Tokenizer.tokenize(byte[])"
  name: "Tokenizer.tokenize(byte[])"
  nameWithType: "Tokenizer.tokenize(byte[])"
  fullName: "io.Tokenizer.tokenize(byte[])"
- uid: "io.Tokenizer.tokenize(byte[],java.nio.charset.Charset)"
  name: "Tokenizer.tokenize(byte[],Charset)"
  nameWithType: "Tokenizer.tokenize(byte[],Charset)"
  fullName: "io.Tokenizer.tokenize(byte[],java.nio.charset.Charset)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "io.Tokenizer.detectCharset(byte[])"
  name: "Tokenizer.detectCharset(byte[])"
  nameWithType: "Tokenizer.detectCharset(byte[])"
  fullName: "io.Tokenizer.detectCharset(byte[])"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "io.Tokenizer.tokenize(java.lang.String)"
  name: "Tokenizer.tokenize(String)"
  nameWithType: "Tokenizer.tokenize(String)"
  fullName: "io.Tokenizer.tokenize(java.lang.String)"
- uid: "io.token.Token"
  name: "Token"
  nameWithType: "Token"
  fullName: "io.token.Token"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
