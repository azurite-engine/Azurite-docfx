### YamlMime:ManagedReference
items:
- uid: "tiles.TilesystemSideScroll"
  id: "TilesystemSideScroll"
  parent: "tiles"
  children:
  - "tiles.TilesystemSideScroll.TilesystemSideScroll(graphics.Spritesheet,int,int,int,int,ecs.GameObject,int[])"
  - "tiles.TilesystemSideScroll.getIndex(int,int)"
  - "tiles.TilesystemSideScroll.getType(int,int)"
  langs:
  - "java"
  name: "TilesystemSideScroll"
  nameWithType: "TilesystemSideScroll"
  fullName: "tiles.TilesystemSideScroll"
  type: "Class"
  package: "tiles"
  summary: "An example class of a platformer stage and it's tilemap. Eventually I think this should be expanded to a more general API, maybe even with a <xref uid=\"scene.Scene\" data-throw-if-not-resolved=\"false\">Scene</xref> dedicated to an in-engine way of constructing them (Mario Maker flavoured Azurite?), but that's likely a future plan; I, the mortal JavaDocumentator, don't have insight into the minds of the owners of this game engine (go ask Asher, idk). lol see <xref uid=\"tiles.Tilesystem\" data-throw-if-not-resolved=\"false\">Tilesystem</xref>, this is now deprectated :D -Asher"
  syntax:
    content: "public class TilesystemSideScroll"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "tiles.TilesystemSideScroll.TilesystemSideScroll(graphics.Spritesheet,int,int,int,int,ecs.GameObject,int[])"
  id: "TilesystemSideScroll(graphics.Spritesheet,int,int,int,int,ecs.GameObject,int[])"
  parent: "tiles.TilesystemSideScroll"
  langs:
  - "java"
  name: "TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)"
  nameWithType: "TilesystemSideScroll.TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)"
  fullName: "tiles.TilesystemSideScroll.TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)"
  overload: "tiles.TilesystemSideScroll.TilesystemSideScroll*"
  type: "Constructor"
  package: "tiles"
  syntax:
    content: "public TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)"
    parameters:
    - id: "s"
      type: "graphics.Spritesheet"
    - id: "xTiles"
      type: "int"
    - id: "yTiles"
      type: "int"
    - id: "width"
      type: "int"
    - id: "height"
      type: "int"
    - id: "c"
      type: "ecs.GameObject"
    - id: "layers"
      type: "int[]"
- uid: "tiles.TilesystemSideScroll.getIndex(int,int)"
  id: "getIndex(int,int)"
  parent: "tiles.TilesystemSideScroll"
  langs:
  - "java"
  name: "getIndex(int worldX, int worldY)"
  nameWithType: "TilesystemSideScroll.getIndex(int worldX, int worldY)"
  fullName: "tiles.TilesystemSideScroll.getIndex(int worldX, int worldY)"
  overload: "tiles.TilesystemSideScroll.getIndex*"
  type: "Method"
  package: "tiles"
  syntax:
    content: "public int[] getIndex(int worldX, int worldY)"
    parameters:
    - id: "worldX"
      type: "int"
    - id: "worldY"
      type: "int"
    return:
      type: "int[]"
- uid: "tiles.TilesystemSideScroll.getType(int,int)"
  id: "getType(int,int)"
  parent: "tiles.TilesystemSideScroll"
  langs:
  - "java"
  name: "getType(int worldX, int worldY)"
  nameWithType: "TilesystemSideScroll.getType(int worldX, int worldY)"
  fullName: "tiles.TilesystemSideScroll.getType(int worldX, int worldY)"
  overload: "tiles.TilesystemSideScroll.getType*"
  type: "Method"
  package: "tiles"
  syntax:
    content: "public int getType(int worldX, int worldY)"
    parameters:
    - id: "worldX"
      type: "int"
    - id: "worldY"
      type: "int"
    return:
      type: "int"
references:
- uid: "graphics.Spritesheet"
  name: "Spritesheet"
  nameWithType: "Spritesheet"
  fullName: "graphics.Spritesheet"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ecs.GameObject"
  name: "GameObject"
  nameWithType: "GameObject"
  fullName: "ecs.GameObject"
- uid: "int[]"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
  - name: "[]"
    fullName: "[]"
- uid: "tiles.TilesystemSideScroll.TilesystemSideScroll*"
  name: "TilesystemSideScroll"
  nameWithType: "TilesystemSideScroll.TilesystemSideScroll"
  fullName: "tiles.TilesystemSideScroll.TilesystemSideScroll"
  package: "tiles"
- uid: "tiles.TilesystemSideScroll.getType*"
  name: "getType"
  nameWithType: "TilesystemSideScroll.getType"
  fullName: "tiles.TilesystemSideScroll.getType"
  package: "tiles"
- uid: "tiles.TilesystemSideScroll.getIndex*"
  name: "getIndex"
  nameWithType: "TilesystemSideScroll.getIndex"
  fullName: "tiles.TilesystemSideScroll.getIndex"
  package: "tiles"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
