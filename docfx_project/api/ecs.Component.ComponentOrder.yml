### YamlMime:ManagedReference
items:
- uid: "ecs.Component.ComponentOrder"
  id: "ComponentOrder"
  parent: "ecs"
  children:
  - "ecs.Component.ComponentOrder.COLLISION"
  - "ecs.Component.ComponentOrder.DRAW"
  - "ecs.Component.ComponentOrder.INPUT"
  - "ecs.Component.ComponentOrder.POST_DRAW"
  - "ecs.Component.ComponentOrder.POST_TRANSFORM"
  - "ecs.Component.ComponentOrder.PRE_CALC"
  - "ecs.Component.ComponentOrder.TRANSFORM"
  - "ecs.Component.ComponentOrder.valueOf(java.lang.String)"
  - "ecs.Component.ComponentOrder.values()"
  langs:
  - "java"
  name: "Component.ComponentOrder"
  nameWithType: "Component.ComponentOrder"
  fullName: "ecs.Component.ComponentOrder"
  type: "Enum"
  package: "ecs"
  syntax:
    content: "public enum Component.ComponentOrder extends Enum<Component.ComponentOrder>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "ecs.Component.ComponentOrder.COLLISION"
  id: "COLLISION"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "COLLISION"
  nameWithType: "Component.ComponentOrder.COLLISION"
  fullName: "ecs.Component.ComponentOrder.COLLISION"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder COLLISION"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.ComponentOrder(int)"
  id: "ComponentOrder(int)"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "ComponentOrder(int order)"
  nameWithType: "Component.ComponentOrder.ComponentOrder(int order)"
  fullName: "ecs.Component.ComponentOrder.ComponentOrder(int order)"
  overload: "ecs.Component.ComponentOrder.ComponentOrder*"
  type: "Constructor"
  package: "ecs"
  syntax:
    content: "private ComponentOrder(int order)"
    parameters:
    - id: "order"
      type: "int"
- uid: "ecs.Component.ComponentOrder.DRAW"
  id: "DRAW"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "DRAW"
  nameWithType: "Component.ComponentOrder.DRAW"
  fullName: "ecs.Component.ComponentOrder.DRAW"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder DRAW"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.INPUT"
  id: "INPUT"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "INPUT"
  nameWithType: "Component.ComponentOrder.INPUT"
  fullName: "ecs.Component.ComponentOrder.INPUT"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder INPUT"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.POST_DRAW"
  id: "POST_DRAW"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "POST_DRAW"
  nameWithType: "Component.ComponentOrder.POST_DRAW"
  fullName: "ecs.Component.ComponentOrder.POST_DRAW"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder POST_DRAW"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.POST_TRANSFORM"
  id: "POST_TRANSFORM"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "POST_TRANSFORM"
  nameWithType: "Component.ComponentOrder.POST_TRANSFORM"
  fullName: "ecs.Component.ComponentOrder.POST_TRANSFORM"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder POST_TRANSFORM"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.PRE_CALC"
  id: "PRE_CALC"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "PRE_CALC"
  nameWithType: "Component.ComponentOrder.PRE_CALC"
  fullName: "ecs.Component.ComponentOrder.PRE_CALC"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder PRE_CALC"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.TRANSFORM"
  id: "TRANSFORM"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "TRANSFORM"
  nameWithType: "Component.ComponentOrder.TRANSFORM"
  fullName: "ecs.Component.ComponentOrder.TRANSFORM"
  type: "Field"
  package: "ecs"
  syntax:
    content: "public static final Component.ComponentOrder TRANSFORM"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "Component.ComponentOrder.valueOf(String name)"
  fullName: "ecs.Component.ComponentOrder.valueOf(String name)"
  overload: "ecs.Component.ComponentOrder.valueOf*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public static Component.ComponentOrder valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "ecs.Component.ComponentOrder"
- uid: "ecs.Component.ComponentOrder.values()"
  id: "values()"
  parent: "ecs.Component.ComponentOrder"
  langs:
  - "java"
  name: "values()"
  nameWithType: "Component.ComponentOrder.values()"
  fullName: "ecs.Component.ComponentOrder.values()"
  overload: "ecs.Component.ComponentOrder.values*"
  type: "Method"
  package: "ecs"
  syntax:
    content: "public static Component.ComponentOrder[] values()"
    return:
      type: "ecs.Component.ComponentOrder[]"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "ecs.Component.ComponentOrder.ComponentOrder*"
  name: "ComponentOrder"
  nameWithType: "Component.ComponentOrder.ComponentOrder"
  fullName: "ecs.Component.ComponentOrder.ComponentOrder"
  package: "ecs"
- uid: "ecs.Component.ComponentOrder[]"
  spec.java:
  - uid: "ecs.Component.ComponentOrder"
    name: "ComponentOrder"
    fullName: "ecs.Component.ComponentOrder"
  - name: "[]"
    fullName: "[]"
- uid: "ecs.Component.ComponentOrder.values*"
  name: "values"
  nameWithType: "Component.ComponentOrder.values"
  fullName: "ecs.Component.ComponentOrder.values"
  package: "ecs"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "ecs.Component.ComponentOrder.valueOf*"
  name: "valueOf"
  nameWithType: "Component.ComponentOrder.valueOf"
  fullName: "ecs.Component.ComponentOrder.valueOf"
  package: "ecs"
- uid: "java.lang.Enum<ecs.Component.ComponentOrder>"
  name: "Enum<Component.ComponentOrder>"
  nameWithType: "Enum<Component.ComponentOrder>"
  fullName: "java.lang.Enum<ecs.Component.ComponentOrder>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
