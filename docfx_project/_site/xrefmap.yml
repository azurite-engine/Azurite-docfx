### YamlMime:XRefMap
sorted: true
references:
- uid: ai.path
  name: ai.path
  href: api/ai.path.html
  fullName: ai.path
  nameWithType: ai.path
- uid: ai.path.Map
  name: Map<Position>
  href: api/ai.path.Map.html
  fullName: ai.path.Map<Position>
  nameWithType: Map<Position>
- uid: ai.path.Map.start()
  name: start()
  href: api/ai.path.Map.html#ai_path_Map_start__
  fullName: ai.path.Map<Position>.start()
  nameWithType: Map<Position>.start()
- uid: ai.path.Map.start*
  name: start
  href: api/ai.path.Map.html#ai_path_Map_start_
  isSpec: "True"
  fullName: ai.path.Map<Position>.start
  nameWithType: Map<Position>.start
  package: ai.path
- uid: ai.path.Map.target()
  name: target()
  href: api/ai.path.Map.html#ai_path_Map_target__
  fullName: ai.path.Map<Position>.target()
  nameWithType: Map<Position>.target()
- uid: ai.path.Map.target*
  name: target
  href: api/ai.path.Map.html#ai_path_Map_target_
  isSpec: "True"
  fullName: ai.path.Map<Position>.target
  nameWithType: Map<Position>.target
  package: ai.path
- uid: ai.path.Node
  name: Node<Position>
  href: api/ai.path.Node.html
  fullName: ai.path.Node<Position>
  nameWithType: Node<Position>
- uid: ai.path.Node.getMarker()
  name: getMarker()
  href: api/ai.path.Node.html#ai_path_Node_getMarker__
  fullName: ai.path.Node<Position>.getMarker()
  nameWithType: Node<Position>.getMarker()
- uid: ai.path.Node.getMarker*
  name: getMarker
  href: api/ai.path.Node.html#ai_path_Node_getMarker_
  isSpec: "True"
  fullName: ai.path.Node<Position>.getMarker
  nameWithType: Node<Position>.getMarker
  package: ai.path
- uid: ai.path.Node.hasMarker()
  name: hasMarker()
  href: api/ai.path.Node.html#ai_path_Node_hasMarker__
  fullName: ai.path.Node<Position>.hasMarker()
  nameWithType: Node<Position>.hasMarker()
- uid: ai.path.Node.hasMarker*
  name: hasMarker
  href: api/ai.path.Node.html#ai_path_Node_hasMarker_
  isSpec: "True"
  fullName: ai.path.Node<Position>.hasMarker
  nameWithType: Node<Position>.hasMarker
  package: ai.path
- uid: ai.path.Node.Node()
  name: Node()
  href: api/ai.path.Node.html#ai_path_Node_Node__
  fullName: ai.path.Node<Position>.Node()
  nameWithType: Node<Position>.Node()
- uid: ai.path.Node.Node*
  name: Node
  href: api/ai.path.Node.html#ai_path_Node_Node_
  isSpec: "True"
  fullName: ai.path.Node<Position>.Node
  nameWithType: Node<Position>.Node
  package: ai.path
- uid: ai.path.Node.paths()
  name: paths()
  href: api/ai.path.Node.html#ai_path_Node_paths__
  fullName: ai.path.Node<Position>.paths()
  nameWithType: Node<Position>.paths()
- uid: ai.path.Node.paths*
  name: paths
  href: api/ai.path.Node.html#ai_path_Node_paths_
  isSpec: "True"
  fullName: ai.path.Node<Position>.paths
  nameWithType: Node<Position>.paths
  package: ai.path
- uid: ai.path.Node.position()
  name: position()
  href: api/ai.path.Node.html#ai_path_Node_position__
  fullName: ai.path.Node<Position>.position()
  nameWithType: Node<Position>.position()
- uid: ai.path.Node.position*
  name: position
  href: api/ai.path.Node.html#ai_path_Node_position_
  isSpec: "True"
  fullName: ai.path.Node<Position>.position
  nameWithType: Node<Position>.position
  package: ai.path
- uid: ai.path.Node.setMarker(ai.path.Node.Marker<Position>)
  name: setMarker(Node.Marker<Position> marker)
  href: api/ai.path.Node.html#ai_path_Node_setMarker_ai_path_Node_Marker_Position__
  fullName: ai.path.Node<Position>.setMarker(Node.Marker<Position> marker)
  nameWithType: Node<Position>.setMarker(Node.Marker<Position> marker)
- uid: ai.path.Node.setMarker*
  name: setMarker
  href: api/ai.path.Node.html#ai_path_Node_setMarker_
  isSpec: "True"
  fullName: ai.path.Node<Position>.setMarker
  nameWithType: Node<Position>.setMarker
  package: ai.path
- uid: ai.path.Path
  name: Path<Position>
  href: api/ai.path.Path.html
  fullName: ai.path.Path<Position>
  nameWithType: Path<Position>
- uid: ai.path.Path.cost()
  name: cost()
  href: api/ai.path.Path.html#ai_path_Path_cost__
  fullName: ai.path.Path<Position>.cost()
  nameWithType: Path<Position>.cost()
- uid: ai.path.Path.cost*
  name: cost
  href: api/ai.path.Path.html#ai_path_Path_cost_
  isSpec: "True"
  fullName: ai.path.Path<Position>.cost
  nameWithType: Path<Position>.cost
  package: ai.path
- uid: ai.path.Path.end()
  name: end()
  href: api/ai.path.Path.html#ai_path_Path_end__
  fullName: ai.path.Path<Position>.end()
  nameWithType: Path<Position>.end()
- uid: ai.path.Path.end*
  name: end
  href: api/ai.path.Path.html#ai_path_Path_end_
  isSpec: "True"
  fullName: ai.path.Path<Position>.end
  nameWithType: Path<Position>.end
  package: ai.path
- uid: ai.path.Path.start()
  name: start()
  href: api/ai.path.Path.html#ai_path_Path_start__
  fullName: ai.path.Path<Position>.start()
  nameWithType: Path<Position>.start()
- uid: ai.path.Path.start*
  name: start
  href: api/ai.path.Path.html#ai_path_Path_start_
  isSpec: "True"
  fullName: ai.path.Path<Position>.start
  nameWithType: Path<Position>.start
  package: ai.path
- uid: ai.path.Pathfinding
  name: Pathfinding
  href: api/ai.path.Pathfinding.html
  fullName: ai.path.Pathfinding
  nameWithType: Pathfinding
- uid: ai.path.Pathfinding.<Position>astar(ai.path.Map<Position>,java.util.function.BiFunction<Position,Position,java.lang.Float>)
  name: <Position>astar(Map<Position> map, BiFunction<Position,Position,Float> hCost)
  href: api/ai.path.Pathfinding.html#ai_path_Pathfinding__Position_astar_ai_path_Map_Position__java_util_function_BiFunction_Position_Position_java_lang_Float__
  fullName: ai.path.Pathfinding.<Position>astar(Map<Position> map, BiFunction<Position,Position,Float> hCost)
  nameWithType: Pathfinding.<Position>astar(Map<Position> map, BiFunction<Position,Position,Float> hCost)
- uid: ai.path.Pathfinding.<Position>dijkstra(ai.path.Map<Position>)
  name: <Position>dijkstra(Map<Position> map)
  href: api/ai.path.Pathfinding.html#ai_path_Pathfinding__Position_dijkstra_ai_path_Map_Position__
  fullName: ai.path.Pathfinding.<Position>dijkstra(Map<Position> map)
  nameWithType: Pathfinding.<Position>dijkstra(Map<Position> map)
- uid: ai.path.Pathfinding.astar*
  name: <Position>astar
  href: api/ai.path.Pathfinding.html#ai_path_Pathfinding_astar_
  isSpec: "True"
  fullName: ai.path.Pathfinding.<Position>astar
  nameWithType: Pathfinding.<Position>astar
  package: ai.path
- uid: ai.path.Pathfinding.dijkstra*
  name: <Position>dijkstra
  href: api/ai.path.Pathfinding.html#ai_path_Pathfinding_dijkstra_
  isSpec: "True"
  fullName: ai.path.Pathfinding.<Position>dijkstra
  nameWithType: Pathfinding.<Position>dijkstra
  package: ai.path
- uid: ai.path.Pathfinding.Pathfinding()
  name: Pathfinding()
  href: api/ai.path.Pathfinding.html#ai_path_Pathfinding_Pathfinding__
  fullName: ai.path.Pathfinding.Pathfinding()
  nameWithType: Pathfinding.Pathfinding()
- uid: ai.path.Pathfinding.Pathfinding*
  name: Pathfinding
  href: api/ai.path.Pathfinding.html#ai_path_Pathfinding_Pathfinding_
  isSpec: "True"
  fullName: ai.path.Pathfinding.Pathfinding
  nameWithType: Pathfinding.Pathfinding
  package: ai.path
- uid: ai.path.ResultPath
  name: ResultPath<Position>
  href: api/ai.path.ResultPath.html
  fullName: ai.path.ResultPath<Position>
  nameWithType: ResultPath<Position>
- uid: ai.path.ResultPath.fullPath()
  name: fullPath()
  href: api/ai.path.ResultPath.html#ai_path_ResultPath_fullPath__
  fullName: ai.path.ResultPath<Position>.fullPath()
  nameWithType: ResultPath<Position>.fullPath()
- uid: ai.path.ResultPath.fullPath*
  name: fullPath
  href: api/ai.path.ResultPath.html#ai_path_ResultPath_fullPath_
  isSpec: "True"
  fullName: ai.path.ResultPath<Position>.fullPath
  nameWithType: ResultPath<Position>.fullPath
  package: ai.path
- uid: ai.path.ResultPath.start()
  name: start()
  href: api/ai.path.ResultPath.html#ai_path_ResultPath_start__
  fullName: ai.path.ResultPath<Position>.start()
  nameWithType: ResultPath<Position>.start()
- uid: ai.path.ResultPath.start*
  name: start
  href: api/ai.path.ResultPath.html#ai_path_ResultPath_start_
  isSpec: "True"
  fullName: ai.path.ResultPath<Position>.start
  nameWithType: ResultPath<Position>.start
  package: ai.path
- uid: ai.path.ResultPath.target()
  name: target()
  href: api/ai.path.ResultPath.html#ai_path_ResultPath_target__
  fullName: ai.path.ResultPath<Position>.target()
  nameWithType: ResultPath<Position>.target()
- uid: ai.path.ResultPath.target*
  name: target
  href: api/ai.path.ResultPath.html#ai_path_ResultPath_target_
  isSpec: "True"
  fullName: ai.path.ResultPath<Position>.target
  nameWithType: ResultPath<Position>.target
  package: ai.path
- uid: ai.path.vector2f
  name: ai.path.vector2f
  href: api/ai.path.vector2f.html
  fullName: ai.path.vector2f
  nameWithType: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fMap
  name: Vector2fMap
  href: api/ai.path.vector2f.Vector2fMap.html
  fullName: ai.path.vector2f.Vector2fMap
  nameWithType: Vector2fMap
- uid: ai.path.vector2f.Vector2fMap.start()
  name: start()
  href: api/ai.path.vector2f.Vector2fMap.html#ai_path_vector2f_Vector2fMap_start__
  fullName: ai.path.vector2f.Vector2fMap.start()
  nameWithType: Vector2fMap.start()
- uid: ai.path.vector2f.Vector2fMap.start*
  name: start
  href: api/ai.path.vector2f.Vector2fMap.html#ai_path_vector2f_Vector2fMap_start_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fMap.start
  nameWithType: Vector2fMap.start
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fMap.target()
  name: target()
  href: api/ai.path.vector2f.Vector2fMap.html#ai_path_vector2f_Vector2fMap_target__
  fullName: ai.path.vector2f.Vector2fMap.target()
  nameWithType: Vector2fMap.target()
- uid: ai.path.vector2f.Vector2fMap.target*
  name: target
  href: api/ai.path.vector2f.Vector2fMap.html#ai_path_vector2f_Vector2fMap_target_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fMap.target
  nameWithType: Vector2fMap.target
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fMap.Vector2fMap(ai.path.Node<org.joml.Vector2f>,ai.path.Node<org.joml.Vector2f>)
  name: Vector2fMap(Node<Vector2f> start, Node<Vector2f> target)
  href: api/ai.path.vector2f.Vector2fMap.html#ai_path_vector2f_Vector2fMap_Vector2fMap_ai_path_Node_org_joml_Vector2f__ai_path_Node_org_joml_Vector2f__
  fullName: ai.path.vector2f.Vector2fMap.Vector2fMap(Node<Vector2f> start, Node<Vector2f> target)
  nameWithType: Vector2fMap.Vector2fMap(Node<Vector2f> start, Node<Vector2f> target)
- uid: ai.path.vector2f.Vector2fMap.Vector2fMap*
  name: Vector2fMap
  href: api/ai.path.vector2f.Vector2fMap.html#ai_path_vector2f_Vector2fMap_Vector2fMap_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fMap.Vector2fMap
  nameWithType: Vector2fMap.Vector2fMap
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fNode
  name: Vector2fNode
  href: api/ai.path.vector2f.Vector2fNode.html
  fullName: ai.path.vector2f.Vector2fNode
  nameWithType: Vector2fNode
- uid: ai.path.vector2f.Vector2fNode.addPathTo(ai.path.vector2f.Vector2fNode,float,boolean)
  name: addPathTo(Vector2fNode node, float cost, boolean bidirectional)
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_addPathTo_ai_path_vector2f_Vector2fNode_float_boolean_
  fullName: ai.path.vector2f.Vector2fNode.addPathTo(Vector2fNode node, float cost, boolean bidirectional)
  nameWithType: Vector2fNode.addPathTo(Vector2fNode node, float cost, boolean bidirectional)
- uid: ai.path.vector2f.Vector2fNode.addPathTo*
  name: addPathTo
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_addPathTo_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fNode.addPathTo
  nameWithType: Vector2fNode.addPathTo
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fNode.paths()
  name: paths()
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_paths__
  fullName: ai.path.vector2f.Vector2fNode.paths()
  nameWithType: Vector2fNode.paths()
- uid: ai.path.vector2f.Vector2fNode.paths*
  name: paths
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_paths_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fNode.paths
  nameWithType: Vector2fNode.paths
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fNode.position()
  name: position()
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_position__
  fullName: ai.path.vector2f.Vector2fNode.position()
  nameWithType: Vector2fNode.position()
- uid: ai.path.vector2f.Vector2fNode.position*
  name: position
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_position_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fNode.position
  nameWithType: Vector2fNode.position
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fNode.Vector2fNode(org.joml.Vector2f)
  name: Vector2fNode(Vector2f position)
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_Vector2fNode_org_joml_Vector2f_
  fullName: ai.path.vector2f.Vector2fNode.Vector2fNode(Vector2f position)
  nameWithType: Vector2fNode.Vector2fNode(Vector2f position)
- uid: ai.path.vector2f.Vector2fNode.Vector2fNode*
  name: Vector2fNode
  href: api/ai.path.vector2f.Vector2fNode.html#ai_path_vector2f_Vector2fNode_Vector2fNode_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fNode.Vector2fNode
  nameWithType: Vector2fNode.Vector2fNode
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fPath
  name: Vector2fPath
  href: api/ai.path.vector2f.Vector2fPath.html
  fullName: ai.path.vector2f.Vector2fPath
  nameWithType: Vector2fPath
- uid: ai.path.vector2f.Vector2fPath.cost()
  name: cost()
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_cost__
  fullName: ai.path.vector2f.Vector2fPath.cost()
  nameWithType: Vector2fPath.cost()
- uid: ai.path.vector2f.Vector2fPath.cost*
  name: cost
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_cost_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fPath.cost
  nameWithType: Vector2fPath.cost
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fPath.end()
  name: end()
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_end__
  fullName: ai.path.vector2f.Vector2fPath.end()
  nameWithType: Vector2fPath.end()
- uid: ai.path.vector2f.Vector2fPath.end*
  name: end
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_end_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fPath.end
  nameWithType: Vector2fPath.end
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fPath.start()
  name: start()
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_start__
  fullName: ai.path.vector2f.Vector2fPath.start()
  nameWithType: Vector2fPath.start()
- uid: ai.path.vector2f.Vector2fPath.start*
  name: start
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_start_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fPath.start
  nameWithType: Vector2fPath.start
  package: ai.path.vector2f
- uid: ai.path.vector2f.Vector2fPath.Vector2fPath(ai.path.Node<org.joml.Vector2f>,ai.path.Node<org.joml.Vector2f>,float)
  name: Vector2fPath(Node<Vector2f> start, Node<Vector2f> end, float cost)
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_Vector2fPath_ai_path_Node_org_joml_Vector2f__ai_path_Node_org_joml_Vector2f__float_
  fullName: ai.path.vector2f.Vector2fPath.Vector2fPath(Node<Vector2f> start, Node<Vector2f> end, float cost)
  nameWithType: Vector2fPath.Vector2fPath(Node<Vector2f> start, Node<Vector2f> end, float cost)
- uid: ai.path.vector2f.Vector2fPath.Vector2fPath*
  name: Vector2fPath
  href: api/ai.path.vector2f.Vector2fPath.html#ai_path_vector2f_Vector2fPath_Vector2fPath_
  isSpec: "True"
  fullName: ai.path.vector2f.Vector2fPath.Vector2fPath
  nameWithType: Vector2fPath.Vector2fPath
  package: ai.path.vector2f
- uid: ai.statemachine
  name: ai.statemachine
  href: api/ai.statemachine.html
  fullName: ai.statemachine
  nameWithType: ai.statemachine
- uid: ai.statemachine.State
  name: State
  href: api/ai.statemachine.State.html
  fullName: ai.statemachine.State
  nameWithType: State
- uid: ai.statemachine.State.enterState()
  name: enterState()
  href: api/ai.statemachine.State.html#ai_statemachine_State_enterState__
  fullName: ai.statemachine.State.enterState()
  nameWithType: State.enterState()
- uid: ai.statemachine.State.enterState*
  name: enterState
  href: api/ai.statemachine.State.html#ai_statemachine_State_enterState_
  isSpec: "True"
  fullName: ai.statemachine.State.enterState
  nameWithType: State.enterState
  package: ai.statemachine
- uid: ai.statemachine.State.exitState()
  name: exitState()
  href: api/ai.statemachine.State.html#ai_statemachine_State_exitState__
  fullName: ai.statemachine.State.exitState()
  nameWithType: State.exitState()
- uid: ai.statemachine.State.exitState*
  name: exitState
  href: api/ai.statemachine.State.html#ai_statemachine_State_exitState_
  isSpec: "True"
  fullName: ai.statemachine.State.exitState
  nameWithType: State.exitState
  package: ai.statemachine
- uid: ai.statemachine.State.updateState(float)
  name: updateState(float dt)
  href: api/ai.statemachine.State.html#ai_statemachine_State_updateState_float_
  fullName: ai.statemachine.State.updateState(float dt)
  nameWithType: State.updateState(float dt)
- uid: ai.statemachine.State.updateState*
  name: updateState
  href: api/ai.statemachine.State.html#ai_statemachine_State_updateState_
  isSpec: "True"
  fullName: ai.statemachine.State.updateState
  nameWithType: State.updateState
  package: ai.statemachine
- uid: ai.statemachine.StateMachine
  name: StateMachine
  href: api/ai.statemachine.StateMachine.html
  fullName: ai.statemachine.StateMachine
  nameWithType: StateMachine
- uid: ai.statemachine.StateMachine.addState(java.lang.String,ai.statemachine.State)
  name: addState(String name, State state)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_addState_java_lang_String_ai_statemachine_State_
  fullName: ai.statemachine.StateMachine.addState(String name, State state)
  nameWithType: StateMachine.addState(String name, State state)
- uid: ai.statemachine.StateMachine.addState*
  name: addState
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_addState_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.addState
  nameWithType: StateMachine.addState
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.addTransition(java.lang.String,java.lang.String,java.util.function.Function<ai.statemachine.State,java.lang.Boolean>)
  name: addTransition(String fromState, String toState, Function<State,Boolean> condition)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_addTransition_java_lang_String_java_lang_String_java_util_function_Function_ai_statemachine_State_java_lang_Boolean__
  fullName: ai.statemachine.StateMachine.addTransition(String fromState, String toState, Function<State,Boolean> condition)
  nameWithType: StateMachine.addTransition(String fromState, String toState, Function<State,Boolean> condition)
- uid: ai.statemachine.StateMachine.addTransition*
  name: addTransition
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_addTransition_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.addTransition
  nameWithType: StateMachine.addTransition
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.canTransitionTo(java.lang.String)
  name: canTransitionTo(String state)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_canTransitionTo_java_lang_String_
  fullName: ai.statemachine.StateMachine.canTransitionTo(String state)
  nameWithType: StateMachine.canTransitionTo(String state)
- uid: ai.statemachine.StateMachine.canTransitionTo*
  name: canTransitionTo
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_canTransitionTo_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.canTransitionTo
  nameWithType: StateMachine.canTransitionTo
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.doTransition(java.lang.String)
  name: doTransition(String toState)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_doTransition_java_lang_String_
  fullName: ai.statemachine.StateMachine.doTransition(String toState)
  nameWithType: StateMachine.doTransition(String toState)
- uid: ai.statemachine.StateMachine.doTransition*
  name: doTransition
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_doTransition_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.doTransition
  nameWithType: StateMachine.doTransition
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.getCurrentState()
  name: getCurrentState()
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_getCurrentState__
  fullName: ai.statemachine.StateMachine.getCurrentState()
  nameWithType: StateMachine.getCurrentState()
- uid: ai.statemachine.StateMachine.getCurrentState*
  name: getCurrentState
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_getCurrentState_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.getCurrentState
  nameWithType: StateMachine.getCurrentState
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.getCurrentStateName()
  name: getCurrentStateName()
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_getCurrentStateName__
  fullName: ai.statemachine.StateMachine.getCurrentStateName()
  nameWithType: StateMachine.getCurrentStateName()
- uid: ai.statemachine.StateMachine.getCurrentStateName*
  name: getCurrentStateName
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_getCurrentStateName_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.getCurrentStateName
  nameWithType: StateMachine.getCurrentStateName
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.hasState(java.lang.String)
  name: hasState(String name)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_hasState_java_lang_String_
  fullName: ai.statemachine.StateMachine.hasState(String name)
  nameWithType: StateMachine.hasState(String name)
- uid: ai.statemachine.StateMachine.hasState*
  name: hasState
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_hasState_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.hasState
  nameWithType: StateMachine.hasState
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.hasTransition(java.lang.String)
  name: hasTransition(String state)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_hasTransition_java_lang_String_
  fullName: ai.statemachine.StateMachine.hasTransition(String state)
  nameWithType: StateMachine.hasTransition(String state)
- uid: ai.statemachine.StateMachine.hasTransition(java.lang.String,java.lang.String)
  name: hasTransition(String fromState, String toState)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_hasTransition_java_lang_String_java_lang_String_
  fullName: ai.statemachine.StateMachine.hasTransition(String fromState, String toState)
  nameWithType: StateMachine.hasTransition(String fromState, String toState)
- uid: ai.statemachine.StateMachine.hasTransition*
  name: hasTransition
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_hasTransition_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.hasTransition
  nameWithType: StateMachine.hasTransition
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.startMachine(java.lang.String)
  name: startMachine(String startState)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_startMachine_java_lang_String_
  fullName: ai.statemachine.StateMachine.startMachine(String startState)
  nameWithType: StateMachine.startMachine(String startState)
- uid: ai.statemachine.StateMachine.startMachine*
  name: startMachine
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_startMachine_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.startMachine
  nameWithType: StateMachine.startMachine
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.StateMachine()
  name: StateMachine()
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_StateMachine__
  fullName: ai.statemachine.StateMachine.StateMachine()
  nameWithType: StateMachine.StateMachine()
- uid: ai.statemachine.StateMachine.StateMachine*
  name: StateMachine
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_StateMachine_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.StateMachine
  nameWithType: StateMachine.StateMachine
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.update(float)
  name: update(float dt)
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_update_float_
  fullName: ai.statemachine.StateMachine.update(float dt)
  nameWithType: StateMachine.update(float dt)
- uid: ai.statemachine.StateMachine.update*
  name: update
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_update_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.update
  nameWithType: StateMachine.update
  package: ai.statemachine
- uid: ai.statemachine.StateMachine.validate()
  name: validate()
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_validate__
  fullName: ai.statemachine.StateMachine.validate()
  nameWithType: StateMachine.validate()
- uid: ai.statemachine.StateMachine.validate*
  name: validate
  href: api/ai.statemachine.StateMachine.html#ai_statemachine_StateMachine_validate_
  isSpec: "True"
  fullName: ai.statemachine.StateMachine.validate
  nameWithType: StateMachine.validate
  package: ai.statemachine
- uid: ecs
  name: ecs
  href: api/ecs.html
  fullName: ecs
  nameWithType: ecs
- uid: ecs.CharacterController
  name: CharacterController
  href: api/ecs.CharacterController.html
  fullName: ecs.CharacterController
  nameWithType: CharacterController
- uid: ecs.CharacterController.CharacterController(float,physics.force.Force)
  name: CharacterController(float speedModifier, Force playerInputForce)
  href: api/ecs.CharacterController.html
  fullName: ecs.CharacterController.CharacterController(float speedModifier, Force playerInputForce)
  nameWithType: CharacterController.CharacterController(float speedModifier, Force playerInputForce)
- uid: ecs.CharacterController.CharacterController*
  name: CharacterController
  href: api/ecs.CharacterController.html
  isSpec: "True"
  fullName: ecs.CharacterController.CharacterController
  nameWithType: CharacterController.CharacterController
  package: ecs
- uid: ecs.CharacterController.getPlayerInputForce()
  name: getPlayerInputForce()
  href: api/ecs.CharacterController.html#ecs_CharacterController_getPlayerInputForce__
  fullName: ecs.CharacterController.getPlayerInputForce()
  nameWithType: CharacterController.getPlayerInputForce()
- uid: ecs.CharacterController.getPlayerInputForce*
  name: getPlayerInputForce
  href: api/ecs.CharacterController.html#ecs_CharacterController_getPlayerInputForce_
  isSpec: "True"
  fullName: ecs.CharacterController.getPlayerInputForce
  nameWithType: CharacterController.getPlayerInputForce
  package: ecs
- uid: ecs.CharacterController.getSpeedModifier()
  name: getSpeedModifier()
  href: api/ecs.CharacterController.html#ecs_CharacterController_getSpeedModifier__
  fullName: ecs.CharacterController.getSpeedModifier()
  nameWithType: CharacterController.getSpeedModifier()
- uid: ecs.CharacterController.getSpeedModifier*
  name: getSpeedModifier
  href: api/ecs.CharacterController.html#ecs_CharacterController_getSpeedModifier_
  isSpec: "True"
  fullName: ecs.CharacterController.getSpeedModifier
  nameWithType: CharacterController.getSpeedModifier
  package: ecs
- uid: ecs.CharacterController.standardPlatformer(ecs.Dynamics,float)
  name: standardPlatformer(Dynamics dynamics, float speedModifier)
  href: api/ecs.CharacterController.html#ecs_CharacterController_standardPlatformer_ecs_Dynamics_float_
  fullName: ecs.CharacterController.standardPlatformer(Dynamics dynamics, float speedModifier)
  nameWithType: CharacterController.standardPlatformer(Dynamics dynamics, float speedModifier)
- uid: ecs.CharacterController.standardPlatformer*
  name: standardPlatformer
  href: api/ecs.CharacterController.html#ecs_CharacterController_standardPlatformer_
  isSpec: "True"
  fullName: ecs.CharacterController.standardPlatformer
  nameWithType: CharacterController.standardPlatformer
  package: ecs
- uid: ecs.CharacterController.standardTopDown(ecs.Dynamics,float)
  name: standardTopDown(Dynamics dynamics, float speedModifier)
  href: api/ecs.CharacterController.html#ecs_CharacterController_standardTopDown_ecs_Dynamics_float_
  fullName: ecs.CharacterController.standardTopDown(Dynamics dynamics, float speedModifier)
  nameWithType: CharacterController.standardTopDown(Dynamics dynamics, float speedModifier)
- uid: ecs.CharacterController.standardTopDown*
  name: standardTopDown
  href: api/ecs.CharacterController.html#ecs_CharacterController_standardTopDown_
  isSpec: "True"
  fullName: ecs.CharacterController.standardTopDown
  nameWithType: CharacterController.standardTopDown
  package: ecs
- uid: ecs.CollisionHandler
  name: CollisionHandler
  href: api/ecs.CollisionHandler.html
  fullName: ecs.CollisionHandler
  nameWithType: CollisionHandler
- uid: ecs.CollisionHandler.collision(physics.collision.Collider,physics.collision.CollisionInformation)
  name: collision(Collider environment, CollisionInformation collisionInformation)
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_collision_physics_collision_Collider_physics_collision_CollisionInformation_
  fullName: ecs.CollisionHandler.collision(Collider environment, CollisionInformation collisionInformation)
  nameWithType: CollisionHandler.collision(Collider environment, CollisionInformation collisionInformation)
- uid: ecs.CollisionHandler.collision*
  name: collision
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_collision_
  isSpec: "True"
  fullName: ecs.CollisionHandler.collision
  nameWithType: CollisionHandler.collision
  package: ecs
- uid: ecs.CollisionHandler.CollisionHandler(physics.collision.Collider)
  name: CollisionHandler(Collider collider)
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_CollisionHandler_physics_collision_Collider_
  fullName: ecs.CollisionHandler.CollisionHandler(Collider collider)
  nameWithType: CollisionHandler.CollisionHandler(Collider collider)
- uid: ecs.CollisionHandler.CollisionHandler*
  name: CollisionHandler
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_CollisionHandler_
  isSpec: "True"
  fullName: ecs.CollisionHandler.CollisionHandler
  nameWithType: CollisionHandler.CollisionHandler
  package: ecs
- uid: ecs.CollisionHandler.getCollider()
  name: getCollider()
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_getCollider__
  fullName: ecs.CollisionHandler.getCollider()
  nameWithType: CollisionHandler.getCollider()
- uid: ecs.CollisionHandler.getCollider*
  name: getCollider
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_getCollider_
  isSpec: "True"
  fullName: ecs.CollisionHandler.getCollider
  nameWithType: CollisionHandler.getCollider
  package: ecs
- uid: ecs.CollisionHandler.start()
  name: start()
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_start__
  fullName: ecs.CollisionHandler.start()
  nameWithType: CollisionHandler.start()
- uid: ecs.CollisionHandler.start*
  name: start
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_start_
  isSpec: "True"
  fullName: ecs.CollisionHandler.start
  nameWithType: CollisionHandler.start
  package: ecs
- uid: ecs.CollisionHandler.update(float)
  name: update(float dt)
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_update_float_
  fullName: ecs.CollisionHandler.update(float dt)
  nameWithType: CollisionHandler.update(float dt)
- uid: ecs.CollisionHandler.update*
  name: update
  href: api/ecs.CollisionHandler.html#ecs_CollisionHandler_update_
  isSpec: "True"
  fullName: ecs.CollisionHandler.update
  nameWithType: CollisionHandler.update
  package: ecs
- uid: ecs.CollisionHandlers
  name: CollisionHandlers
  href: api/ecs.CollisionHandlers.html
  fullName: ecs.CollisionHandlers
  nameWithType: CollisionHandlers
- uid: ecs.CollisionHandlers.CollisionHandlers()
  name: CollisionHandlers()
  href: api/ecs.CollisionHandlers.html#ecs_CollisionHandlers_CollisionHandlers__
  fullName: ecs.CollisionHandlers.CollisionHandlers()
  nameWithType: CollisionHandlers.CollisionHandlers()
- uid: ecs.CollisionHandlers.CollisionHandlers*
  name: CollisionHandlers
  href: api/ecs.CollisionHandlers.html#ecs_CollisionHandlers_CollisionHandlers_
  isSpec: "True"
  fullName: ecs.CollisionHandlers.CollisionHandlers
  nameWithType: CollisionHandlers.CollisionHandlers
  package: ecs
- uid: ecs.CollisionHandlers.unpassablePolygonCollider(ecs.PolygonCollider)
  name: unpassablePolygonCollider(PolygonCollider collider)
  href: api/ecs.CollisionHandlers.html#ecs_CollisionHandlers_unpassablePolygonCollider_ecs_PolygonCollider_
  fullName: ecs.CollisionHandlers.unpassablePolygonCollider(PolygonCollider collider)
  nameWithType: CollisionHandlers.unpassablePolygonCollider(PolygonCollider collider)
- uid: ecs.CollisionHandlers.unpassablePolygonCollider*
  name: unpassablePolygonCollider
  href: api/ecs.CollisionHandlers.html#ecs_CollisionHandlers_unpassablePolygonCollider_
  isSpec: "True"
  fullName: ecs.CollisionHandlers.unpassablePolygonCollider
  nameWithType: CollisionHandlers.unpassablePolygonCollider
  package: ecs
- uid: ecs.Component
  name: Component
  href: api/ecs.Component.html
  fullName: ecs.Component
  nameWithType: Component
- uid: ecs.Component.compareTo(ecs.Component)
  name: compareTo(Component o)
  href: api/ecs.Component.html#ecs_Component_compareTo_ecs_Component_
  fullName: ecs.Component.compareTo(Component o)
  nameWithType: Component.compareTo(Component o)
- uid: ecs.Component.compareTo*
  name: compareTo
  href: api/ecs.Component.html#ecs_Component_compareTo_
  isSpec: "True"
  fullName: ecs.Component.compareTo
  nameWithType: Component.compareTo
  package: ecs
- uid: ecs.Component.Component()
  name: Component()
  href: api/ecs.Component.html#ecs_Component_Component__
  fullName: ecs.Component.Component()
  nameWithType: Component.Component()
- uid: ecs.Component.Component(ecs.Component.ComponentOrder)
  name: Component(Component.ComponentOrder order)
  href: api/ecs.Component.html#ecs_Component_Component_ecs_Component_ComponentOrder_
  fullName: ecs.Component.Component(Component.ComponentOrder order)
  nameWithType: Component.Component(Component.ComponentOrder order)
- uid: ecs.Component.Component*
  name: Component
  href: api/ecs.Component.html#ecs_Component_Component_
  isSpec: "True"
  fullName: ecs.Component.Component
  nameWithType: Component.Component
  package: ecs
- uid: ecs.Component.ComponentOrder
  name: Component.ComponentOrder
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder
  fullName: ecs.Component.ComponentOrder
  nameWithType: Component.ComponentOrder
- uid: ecs.Component.ComponentOrder.COLLISION
  name: COLLISION
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_COLLISION
  fullName: ecs.Component.ComponentOrder.COLLISION
  nameWithType: Component.ComponentOrder.COLLISION
- uid: ecs.Component.ComponentOrder.ComponentOrder(int)
  name: ComponentOrder(int order)
  href: api/ecs.Component.ComponentOrder.html
  fullName: ecs.Component.ComponentOrder.ComponentOrder(int order)
  nameWithType: Component.ComponentOrder.ComponentOrder(int order)
- uid: ecs.Component.ComponentOrder.ComponentOrder*
  name: ComponentOrder
  href: api/ecs.Component.ComponentOrder.html
  isSpec: "True"
  fullName: ecs.Component.ComponentOrder.ComponentOrder
  nameWithType: Component.ComponentOrder.ComponentOrder
  package: ecs
- uid: ecs.Component.ComponentOrder.DRAW
  name: DRAW
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_DRAW
  fullName: ecs.Component.ComponentOrder.DRAW
  nameWithType: Component.ComponentOrder.DRAW
- uid: ecs.Component.ComponentOrder.INPUT
  name: INPUT
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_INPUT
  fullName: ecs.Component.ComponentOrder.INPUT
  nameWithType: Component.ComponentOrder.INPUT
- uid: ecs.Component.ComponentOrder.POST_DRAW
  name: POST_DRAW
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_POST_DRAW
  fullName: ecs.Component.ComponentOrder.POST_DRAW
  nameWithType: Component.ComponentOrder.POST_DRAW
- uid: ecs.Component.ComponentOrder.POST_TRANSFORM
  name: POST_TRANSFORM
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_POST_TRANSFORM
  fullName: ecs.Component.ComponentOrder.POST_TRANSFORM
  nameWithType: Component.ComponentOrder.POST_TRANSFORM
- uid: ecs.Component.ComponentOrder.PRE_CALC
  name: PRE_CALC
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_PRE_CALC
  fullName: ecs.Component.ComponentOrder.PRE_CALC
  nameWithType: Component.ComponentOrder.PRE_CALC
- uid: ecs.Component.ComponentOrder.TRANSFORM
  name: TRANSFORM
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_TRANSFORM
  fullName: ecs.Component.ComponentOrder.TRANSFORM
  nameWithType: Component.ComponentOrder.TRANSFORM
- uid: ecs.Component.ComponentOrder.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_valueOf_java_lang_String_
  fullName: ecs.Component.ComponentOrder.valueOf(String name)
  nameWithType: Component.ComponentOrder.valueOf(String name)
- uid: ecs.Component.ComponentOrder.valueOf*
  name: valueOf
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_valueOf_
  isSpec: "True"
  fullName: ecs.Component.ComponentOrder.valueOf
  nameWithType: Component.ComponentOrder.valueOf
  package: ecs
- uid: ecs.Component.ComponentOrder.values()
  name: values()
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_values__
  fullName: ecs.Component.ComponentOrder.values()
  nameWithType: Component.ComponentOrder.values()
- uid: ecs.Component.ComponentOrder.values*
  name: values
  href: api/ecs.Component.ComponentOrder.html#ecs_Component_ComponentOrder_values_
  isSpec: "True"
  fullName: ecs.Component.ComponentOrder.values
  nameWithType: Component.ComponentOrder.values
  package: ecs
- uid: ecs.Component.debug()
  name: debug()
  href: api/ecs.Component.html#ecs_Component_debug__
  fullName: ecs.Component.debug()
  nameWithType: Component.debug()
- uid: ecs.Component.debug*
  name: debug
  href: api/ecs.Component.html#ecs_Component_debug_
  isSpec: "True"
  fullName: ecs.Component.debug
  nameWithType: Component.debug
  package: ecs
- uid: ecs.Component.gameObject
  name: gameObject
  href: api/ecs.Component.html#ecs_Component_gameObject
  fullName: ecs.Component.gameObject
  nameWithType: Component.gameObject
- uid: ecs.Component.position()
  name: position()
  href: api/ecs.Component.html#ecs_Component_position__
  fullName: ecs.Component.position()
  nameWithType: Component.position()
- uid: ecs.Component.position*
  name: position
  href: api/ecs.Component.html#ecs_Component_position_
  isSpec: "True"
  fullName: ecs.Component.position
  nameWithType: Component.position
  package: ecs
- uid: ecs.Component.remove()
  name: remove()
  href: api/ecs.Component.html#ecs_Component_remove__
  fullName: ecs.Component.remove()
  nameWithType: Component.remove()
- uid: ecs.Component.remove*
  name: remove
  href: api/ecs.Component.html#ecs_Component_remove_
  isSpec: "True"
  fullName: ecs.Component.remove
  nameWithType: Component.remove
  package: ecs
- uid: ecs.Component.setPosition(org.joml.Vector2f)
  name: setPosition(Vector2f position)
  href: api/ecs.Component.html#ecs_Component_setPosition_org_joml_Vector2f_
  fullName: ecs.Component.setPosition(Vector2f position)
  nameWithType: Component.setPosition(Vector2f position)
- uid: ecs.Component.setPosition*
  name: setPosition
  href: api/ecs.Component.html#ecs_Component_setPosition_
  isSpec: "True"
  fullName: ecs.Component.setPosition
  nameWithType: Component.setPosition
  package: ecs
- uid: ecs.Component.start()
  name: start()
  href: api/ecs.Component.html#ecs_Component_start__
  fullName: ecs.Component.start()
  nameWithType: Component.start()
- uid: ecs.Component.start*
  name: start
  href: api/ecs.Component.html#ecs_Component_start_
  isSpec: "True"
  fullName: ecs.Component.start
  nameWithType: Component.start
  package: ecs
- uid: ecs.Component.update(float)
  name: update(float dt)
  href: api/ecs.Component.html#ecs_Component_update_float_
  fullName: ecs.Component.update(float dt)
  nameWithType: Component.update(float dt)
- uid: ecs.Component.update*
  name: update
  href: api/ecs.Component.html#ecs_Component_update_
  isSpec: "True"
  fullName: ecs.Component.update
  nameWithType: Component.update
  package: ecs
- uid: ecs.Dynamics
  name: Dynamics
  href: api/ecs.Dynamics.html
  fullName: ecs.Dynamics
  nameWithType: Dynamics
- uid: ecs.Dynamics.applyForce(physics.force.Force)
  name: applyForce(Force force)
  href: api/ecs.Dynamics.html#ecs_Dynamics_applyForce_physics_force_Force_
  fullName: ecs.Dynamics.applyForce(Force force)
  nameWithType: Dynamics.applyForce(Force force)
- uid: ecs.Dynamics.applyForce*
  name: applyForce
  href: api/ecs.Dynamics.html#ecs_Dynamics_applyForce_
  isSpec: "True"
  fullName: ecs.Dynamics.applyForce
  nameWithType: Dynamics.applyForce
  package: ecs
- uid: ecs.Dynamics.DEFAULT_FORCE_CAPACITY
  name: DEFAULT_FORCE_CAPACITY
  href: api/ecs.Dynamics.html#ecs_Dynamics_DEFAULT_FORCE_CAPACITY
  fullName: ecs.Dynamics.DEFAULT_FORCE_CAPACITY
  nameWithType: Dynamics.DEFAULT_FORCE_CAPACITY
- uid: ecs.Dynamics.Dynamics()
  name: Dynamics()
  href: api/ecs.Dynamics.html#ecs_Dynamics_Dynamics__
  fullName: ecs.Dynamics.Dynamics()
  nameWithType: Dynamics.Dynamics()
- uid: ecs.Dynamics.Dynamics*
  name: Dynamics
  href: api/ecs.Dynamics.html#ecs_Dynamics_Dynamics_
  isSpec: "True"
  fullName: ecs.Dynamics.Dynamics
  nameWithType: Dynamics.Dynamics
  package: ecs
- uid: ecs.Dynamics.removeForce(java.lang.String)
  name: removeForce(String identifier)
  href: api/ecs.Dynamics.html#ecs_Dynamics_removeForce_java_lang_String_
  fullName: ecs.Dynamics.removeForce(String identifier)
  nameWithType: Dynamics.removeForce(String identifier)
- uid: ecs.Dynamics.removeForce*
  name: removeForce
  href: api/ecs.Dynamics.html#ecs_Dynamics_removeForce_
  isSpec: "True"
  fullName: ecs.Dynamics.removeForce
  nameWithType: Dynamics.removeForce
  package: ecs
- uid: ecs.Dynamics.update(float)
  name: update(float dt)
  href: api/ecs.Dynamics.html#ecs_Dynamics_update_float_
  fullName: ecs.Dynamics.update(float dt)
  nameWithType: Dynamics.update(float dt)
- uid: ecs.Dynamics.update*
  name: update
  href: api/ecs.Dynamics.html#ecs_Dynamics_update_
  isSpec: "True"
  fullName: ecs.Dynamics.update
  nameWithType: Dynamics.update
  package: ecs
- uid: ecs.Dynamics.velocity()
  name: velocity()
  href: api/ecs.Dynamics.html#ecs_Dynamics_velocity__
  fullName: ecs.Dynamics.velocity()
  nameWithType: Dynamics.velocity()
- uid: ecs.Dynamics.velocity*
  name: velocity
  href: api/ecs.Dynamics.html#ecs_Dynamics_velocity_
  isSpec: "True"
  fullName: ecs.Dynamics.velocity
  nameWithType: Dynamics.velocity
  package: ecs
- uid: ecs.GameObject
  name: GameObject
  href: api/ecs.GameObject.html
  fullName: ecs.GameObject
  nameWithType: GameObject
- uid: ecs.GameObject.<T>getComponent(java.lang.Class<T>)
  name: <T>getComponent(Class<T> componentClass)
  href: api/ecs.GameObject.html#ecs_GameObject__T_getComponent_java_lang_Class_T__
  fullName: ecs.GameObject.<T>getComponent(Class<T> componentClass)
  nameWithType: GameObject.<T>getComponent(Class<T> componentClass)
- uid: ecs.GameObject.<T>getComponents(java.lang.Class<T>)
  name: <T>getComponents(Class<T> componentClass)
  href: api/ecs.GameObject.html#ecs_GameObject__T_getComponents_java_lang_Class_T__
  fullName: ecs.GameObject.<T>getComponents(Class<T> componentClass)
  nameWithType: GameObject.<T>getComponents(Class<T> componentClass)
- uid: ecs.GameObject.<T>removeComponent(java.lang.Class<T>)
  name: <T>removeComponent(Class<T> componentClass)
  href: api/ecs.GameObject.html#ecs_GameObject__T_removeComponent_java_lang_Class_T__
  fullName: ecs.GameObject.<T>removeComponent(Class<T> componentClass)
  nameWithType: GameObject.<T>removeComponent(Class<T> componentClass)
- uid: ecs.GameObject.addComponent(ecs.Component)
  name: addComponent(Component c)
  href: api/ecs.GameObject.html#ecs_GameObject_addComponent_ecs_Component_
  fullName: ecs.GameObject.addComponent(Component c)
  nameWithType: GameObject.addComponent(Component c)
- uid: ecs.GameObject.addComponent*
  name: addComponent
  href: api/ecs.GameObject.html#ecs_GameObject_addComponent_
  isSpec: "True"
  fullName: ecs.GameObject.addComponent
  nameWithType: GameObject.addComponent
  package: ecs
- uid: ecs.GameObject.DEFAULT_GAMEOBJECT_NAME
  name: DEFAULT_GAMEOBJECT_NAME
  href: api/ecs.GameObject.html#ecs_GameObject_DEFAULT_GAMEOBJECT_NAME
  fullName: ecs.GameObject.DEFAULT_GAMEOBJECT_NAME
  nameWithType: GameObject.DEFAULT_GAMEOBJECT_NAME
- uid: ecs.GameObject.DEFAULT_Z_INDEX
  name: DEFAULT_Z_INDEX
  href: api/ecs.GameObject.html#ecs_GameObject_DEFAULT_Z_INDEX
  fullName: ecs.GameObject.DEFAULT_Z_INDEX
  nameWithType: GameObject.DEFAULT_Z_INDEX
- uid: ecs.GameObject.GameObject(java.lang.String,int)
  name: GameObject(String name, int zIndex)
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_java_lang_String_int_
  fullName: ecs.GameObject.GameObject(String name, int zIndex)
  nameWithType: GameObject.GameObject(String name, int zIndex)
- uid: ecs.GameObject.GameObject(java.lang.String,java.util.List<ecs.Component>,org.joml.Vector2f,int)
  name: GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_java_lang_String_java_util_List_ecs_Component__org_joml_Vector2f_int_
  fullName: ecs.GameObject.GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)
  nameWithType: GameObject.GameObject(String name, List<Component> componentList, Vector2f position, int zIndex)
- uid: ecs.GameObject.GameObject(java.lang.String,org.joml.Vector2f,int)
  name: GameObject(String name, Vector2f position, int zIndex)
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_java_lang_String_org_joml_Vector2f_int_
  fullName: ecs.GameObject.GameObject(String name, Vector2f position, int zIndex)
  nameWithType: GameObject.GameObject(String name, Vector2f position, int zIndex)
- uid: ecs.GameObject.GameObject(org.joml.Vector2f)
  name: GameObject(Vector2f position)
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_org_joml_Vector2f_
  fullName: ecs.GameObject.GameObject(Vector2f position)
  nameWithType: GameObject.GameObject(Vector2f position)
- uid: ecs.GameObject.GameObject(org.joml.Vector2f,int)
  name: GameObject(Vector2f position, int zIndex)
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_org_joml_Vector2f_int_
  fullName: ecs.GameObject.GameObject(Vector2f position, int zIndex)
  nameWithType: GameObject.GameObject(Vector2f position, int zIndex)
- uid: ecs.GameObject.GameObject(scene.Scene,java.lang.String,org.joml.Vector2f,int)
  name: GameObject(Scene scene, String name, Vector2f position, int zIndex)
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_scene_Scene_java_lang_String_org_joml_Vector2f_int_
  fullName: ecs.GameObject.GameObject(Scene scene, String name, Vector2f position, int zIndex)
  nameWithType: GameObject.GameObject(Scene scene, String name, Vector2f position, int zIndex)
- uid: ecs.GameObject.GameObject*
  name: GameObject
  href: api/ecs.GameObject.html#ecs_GameObject_GameObject_
  isSpec: "True"
  fullName: ecs.GameObject.GameObject
  nameWithType: GameObject.GameObject
  package: ecs
- uid: ecs.GameObject.getComponent*
  name: <T>getComponent
  href: api/ecs.GameObject.html#ecs_GameObject_getComponent_
  isSpec: "True"
  fullName: ecs.GameObject.<T>getComponent
  nameWithType: GameObject.<T>getComponent
  package: ecs
- uid: ecs.GameObject.getComponents()
  name: getComponents()
  href: api/ecs.GameObject.html#ecs_GameObject_getComponents__
  fullName: ecs.GameObject.getComponents()
  nameWithType: GameObject.getComponents()
- uid: ecs.GameObject.getComponents*
  name: <T>getComponents
  href: api/ecs.GameObject.html#ecs_GameObject_getComponents_
  isSpec: "True"
  fullName: ecs.GameObject.<T>getComponents
  nameWithType: GameObject.<T>getComponents
  package: ecs
- uid: ecs.GameObject.getParentScene()
  name: getParentScene()
  href: api/ecs.GameObject.html#ecs_GameObject_getParentScene__
  fullName: ecs.GameObject.getParentScene()
  nameWithType: GameObject.getParentScene()
- uid: ecs.GameObject.getParentScene*
  name: getParentScene
  href: api/ecs.GameObject.html#ecs_GameObject_getParentScene_
  isSpec: "True"
  fullName: ecs.GameObject.getParentScene
  nameWithType: GameObject.getParentScene
  package: ecs
- uid: ecs.GameObject.getPositionData()
  name: getPositionData()
  href: api/ecs.GameObject.html#ecs_GameObject_getPositionData__
  fullName: ecs.GameObject.getPositionData()
  nameWithType: GameObject.getPositionData()
- uid: ecs.GameObject.getPositionData*
  name: getPositionData
  href: api/ecs.GameObject.html#ecs_GameObject_getPositionData_
  isSpec: "True"
  fullName: ecs.GameObject.getPositionData
  nameWithType: GameObject.getPositionData
  package: ecs
- uid: ecs.GameObject.getReadOnlyPosition()
  name: getReadOnlyPosition()
  href: api/ecs.GameObject.html#ecs_GameObject_getReadOnlyPosition__
  fullName: ecs.GameObject.getReadOnlyPosition()
  nameWithType: GameObject.getReadOnlyPosition()
- uid: ecs.GameObject.getReadOnlyPosition*
  name: getReadOnlyPosition
  href: api/ecs.GameObject.html#ecs_GameObject_getReadOnlyPosition_
  isSpec: "True"
  fullName: ecs.GameObject.getReadOnlyPosition
  nameWithType: GameObject.getReadOnlyPosition
  package: ecs
- uid: ecs.GameObject.getUniqueId()
  name: getUniqueId()
  href: api/ecs.GameObject.html#ecs_GameObject_getUniqueId__
  fullName: ecs.GameObject.getUniqueId()
  nameWithType: GameObject.getUniqueId()
- uid: ecs.GameObject.getUniqueId*
  name: getUniqueId
  href: api/ecs.GameObject.html#ecs_GameObject_getUniqueId_
  isSpec: "True"
  fullName: ecs.GameObject.getUniqueId
  nameWithType: GameObject.getUniqueId
  package: ecs
- uid: ecs.GameObject.name()
  name: name()
  href: api/ecs.GameObject.html#ecs_GameObject_name__
  fullName: ecs.GameObject.name()
  nameWithType: GameObject.name()
- uid: ecs.GameObject.name*
  name: name
  href: api/ecs.GameObject.html#ecs_GameObject_name_
  isSpec: "True"
  fullName: ecs.GameObject.name
  nameWithType: GameObject.name
  package: ecs
- uid: ecs.GameObject.removeComponent*
  name: <T>removeComponent
  href: api/ecs.GameObject.html#ecs_GameObject_removeComponent_
  isSpec: "True"
  fullName: ecs.GameObject.<T>removeComponent
  nameWithType: GameObject.<T>removeComponent
  package: ecs
- uid: ecs.GameObject.setZIndex(int)
  name: setZIndex(int z)
  href: api/ecs.GameObject.html#ecs_GameObject_setZIndex_int_
  fullName: ecs.GameObject.setZIndex(int z)
  nameWithType: GameObject.setZIndex(int z)
- uid: ecs.GameObject.setZIndex*
  name: setZIndex
  href: api/ecs.GameObject.html#ecs_GameObject_setZIndex_
  isSpec: "True"
  fullName: ecs.GameObject.setZIndex
  nameWithType: GameObject.setZIndex
  package: ecs
- uid: ecs.GameObject.start()
  name: start()
  href: api/ecs.GameObject.html#ecs_GameObject_start__
  fullName: ecs.GameObject.start()
  nameWithType: GameObject.start()
- uid: ecs.GameObject.start*
  name: start
  href: api/ecs.GameObject.html#ecs_GameObject_start_
  isSpec: "True"
  fullName: ecs.GameObject.start
  nameWithType: GameObject.start
  package: ecs
- uid: ecs.GameObject.update(float)
  name: update(float dt)
  href: api/ecs.GameObject.html#ecs_GameObject_update_float_
  fullName: ecs.GameObject.update(float dt)
  nameWithType: GameObject.update(float dt)
- uid: ecs.GameObject.update*
  name: update
  href: api/ecs.GameObject.html#ecs_GameObject_update_
  isSpec: "True"
  fullName: ecs.GameObject.update
  nameWithType: GameObject.update
  package: ecs
- uid: ecs.GameObject.zIndex()
  name: zIndex()
  href: api/ecs.GameObject.html#ecs_GameObject_zIndex__
  fullName: ecs.GameObject.zIndex()
  nameWithType: GameObject.zIndex()
- uid: ecs.GameObject.zIndex*
  name: zIndex
  href: api/ecs.GameObject.html#ecs_GameObject_zIndex_
  isSpec: "True"
  fullName: ecs.GameObject.zIndex
  nameWithType: GameObject.zIndex
  package: ecs
- uid: ecs.PointLight
  name: PointLight
  href: api/ecs.PointLight.html
  fullName: ecs.PointLight
  nameWithType: PointLight
- uid: ecs.PointLight.color
  name: color
  href: api/ecs.PointLight.html#ecs_PointLight_color
  fullName: ecs.PointLight.color
  nameWithType: PointLight.color
- uid: ecs.PointLight.intensity
  name: intensity
  href: api/ecs.PointLight.html#ecs_PointLight_intensity
  fullName: ecs.PointLight.intensity
  nameWithType: PointLight.intensity
- uid: ecs.PointLight.PointLight(float)
  name: PointLight(float intensity)
  href: api/ecs.PointLight.html#ecs_PointLight_PointLight_float_
  fullName: ecs.PointLight.PointLight(float intensity)
  nameWithType: PointLight.PointLight(float intensity)
- uid: ecs.PointLight.PointLight(graphics.Color,float)
  name: PointLight(Color color, float intensity)
  href: api/ecs.PointLight.html#ecs_PointLight_PointLight_graphics_Color_float_
  fullName: ecs.PointLight.PointLight(Color color, float intensity)
  nameWithType: PointLight.PointLight(Color color, float intensity)
- uid: ecs.PointLight.PointLight*
  name: PointLight
  href: api/ecs.PointLight.html#ecs_PointLight_PointLight_
  isSpec: "True"
  fullName: ecs.PointLight.PointLight
  nameWithType: PointLight.PointLight
  package: ecs
- uid: ecs.PointLight.start()
  name: start()
  href: api/ecs.PointLight.html#ecs_PointLight_start__
  fullName: ecs.PointLight.start()
  nameWithType: PointLight.start()
- uid: ecs.PointLight.start*
  name: start
  href: api/ecs.PointLight.html#ecs_PointLight_start_
  isSpec: "True"
  fullName: ecs.PointLight.start
  nameWithType: PointLight.start
  package: ecs
- uid: ecs.PointLight.update(float)
  name: update(float dt)
  href: api/ecs.PointLight.html#ecs_PointLight_update_float_
  fullName: ecs.PointLight.update(float dt)
  nameWithType: PointLight.update(float dt)
- uid: ecs.PointLight.update*
  name: update
  href: api/ecs.PointLight.html#ecs_PointLight_update_
  isSpec: "True"
  fullName: ecs.PointLight.update
  nameWithType: PointLight.update
  package: ecs
- uid: ecs.PolygonCollider
  name: PolygonCollider
  href: api/ecs.PolygonCollider.html
  fullName: ecs.PolygonCollider
  nameWithType: PolygonCollider
- uid: ecs.PolygonCollider.canCollideWith(physics.collision.Collider)
  name: canCollideWith(Collider other)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_canCollideWith_physics_collision_Collider_
  fullName: ecs.PolygonCollider.canCollideWith(Collider other)
  nameWithType: PolygonCollider.canCollideWith(Collider other)
- uid: ecs.PolygonCollider.canCollideWith*
  name: canCollideWith
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_canCollideWith_
  isSpec: "True"
  fullName: ecs.PolygonCollider.canCollideWith
  nameWithType: PolygonCollider.canCollideWith
  package: ecs
- uid: ecs.PolygonCollider.detectCollision(physics.collision.Collider)
  name: detectCollision(Collider collider)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_detectCollision_physics_collision_Collider_
  fullName: ecs.PolygonCollider.detectCollision(Collider collider)
  nameWithType: PolygonCollider.detectCollision(Collider collider)
- uid: ecs.PolygonCollider.detectCollision*
  name: detectCollision
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_detectCollision_
  isSpec: "True"
  fullName: ecs.PolygonCollider.detectCollision
  nameWithType: PolygonCollider.detectCollision
  package: ecs
- uid: ecs.PolygonCollider.getShape()
  name: getShape()
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_getShape__
  fullName: ecs.PolygonCollider.getShape()
  nameWithType: PolygonCollider.getShape()
- uid: ecs.PolygonCollider.getShape*
  name: getShape
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_getShape_
  isSpec: "True"
  fullName: ecs.PolygonCollider.getShape
  nameWithType: PolygonCollider.getShape
  package: ecs
- uid: ecs.PolygonCollider.hasMask(int)
  name: hasMask(int layer)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_hasMask_int_
  fullName: ecs.PolygonCollider.hasMask(int layer)
  nameWithType: PolygonCollider.hasMask(int layer)
- uid: ecs.PolygonCollider.hasMask*
  name: hasMask
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_hasMask_
  isSpec: "True"
  fullName: ecs.PolygonCollider.hasMask
  nameWithType: PolygonCollider.hasMask
  package: ecs
- uid: ecs.PolygonCollider.isOnLayer(int)
  name: isOnLayer(int layer)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_isOnLayer_int_
  fullName: ecs.PolygonCollider.isOnLayer(int layer)
  nameWithType: PolygonCollider.isOnLayer(int layer)
- uid: ecs.PolygonCollider.isOnLayer*
  name: isOnLayer
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_isOnLayer_
  isSpec: "True"
  fullName: ecs.PolygonCollider.isOnLayer
  nameWithType: PolygonCollider.isOnLayer
  package: ecs
- uid: ecs.PolygonCollider.layer(int...)
  name: layer(int[] layers)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_layer_int____
  fullName: ecs.PolygonCollider.layer(int[] layers)
  nameWithType: PolygonCollider.layer(int[] layers)
- uid: ecs.PolygonCollider.layer*
  name: layer
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_layer_
  isSpec: "True"
  fullName: ecs.PolygonCollider.layer
  nameWithType: PolygonCollider.layer
  package: ecs
- uid: ecs.PolygonCollider.layers()
  name: layers()
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_layers__
  fullName: ecs.PolygonCollider.layers()
  nameWithType: PolygonCollider.layers()
- uid: ecs.PolygonCollider.layers*
  name: layers
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_layers_
  isSpec: "True"
  fullName: ecs.PolygonCollider.layers
  nameWithType: PolygonCollider.layers
  package: ecs
- uid: ecs.PolygonCollider.mask()
  name: mask()
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_mask__
  fullName: ecs.PolygonCollider.mask()
  nameWithType: PolygonCollider.mask()
- uid: ecs.PolygonCollider.mask(int...)
  name: mask(int[] masks)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_mask_int____
  fullName: ecs.PolygonCollider.mask(int[] masks)
  nameWithType: PolygonCollider.mask(int[] masks)
- uid: ecs.PolygonCollider.mask*
  name: mask
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_mask_
  isSpec: "True"
  fullName: ecs.PolygonCollider.mask
  nameWithType: PolygonCollider.mask
  package: ecs
- uid: ecs.PolygonCollider.passive()
  name: passive()
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_passive__
  fullName: ecs.PolygonCollider.passive()
  nameWithType: PolygonCollider.passive()
- uid: ecs.PolygonCollider.passive*
  name: passive
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_passive_
  isSpec: "True"
  fullName: ecs.PolygonCollider.passive
  nameWithType: PolygonCollider.passive
  package: ecs
- uid: ecs.PolygonCollider.PolygonCollider(physics.collision.shape.PrimitiveShape)
  name: PolygonCollider(PrimitiveShape shape)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_PolygonCollider_physics_collision_shape_PrimitiveShape_
  fullName: ecs.PolygonCollider.PolygonCollider(PrimitiveShape shape)
  nameWithType: PolygonCollider.PolygonCollider(PrimitiveShape shape)
- uid: ecs.PolygonCollider.PolygonCollider(physics.collision.shape.PrimitiveShape,boolean)
  name: PolygonCollider(PrimitiveShape shape, boolean passive)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_PolygonCollider_physics_collision_shape_PrimitiveShape_boolean_
  fullName: ecs.PolygonCollider.PolygonCollider(PrimitiveShape shape, boolean passive)
  nameWithType: PolygonCollider.PolygonCollider(PrimitiveShape shape, boolean passive)
- uid: ecs.PolygonCollider.PolygonCollider*
  name: PolygonCollider
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_PolygonCollider_
  isSpec: "True"
  fullName: ecs.PolygonCollider.PolygonCollider
  nameWithType: PolygonCollider.PolygonCollider
  package: ecs
- uid: ecs.PolygonCollider.setLayer(int,boolean)
  name: setLayer(int layer, boolean active)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_setLayer_int_boolean_
  fullName: ecs.PolygonCollider.setLayer(int layer, boolean active)
  nameWithType: PolygonCollider.setLayer(int layer, boolean active)
- uid: ecs.PolygonCollider.setLayer*
  name: setLayer
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_setLayer_
  isSpec: "True"
  fullName: ecs.PolygonCollider.setLayer
  nameWithType: PolygonCollider.setLayer
  package: ecs
- uid: ecs.PolygonCollider.setMask(int,boolean)
  name: setMask(int layer, boolean active)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_setMask_int_boolean_
  fullName: ecs.PolygonCollider.setMask(int layer, boolean active)
  nameWithType: PolygonCollider.setMask(int layer, boolean active)
- uid: ecs.PolygonCollider.setMask*
  name: setMask
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_setMask_
  isSpec: "True"
  fullName: ecs.PolygonCollider.setMask
  nameWithType: PolygonCollider.setMask
  package: ecs
- uid: ecs.PolygonCollider.setShape(physics.collision.shape.PrimitiveShape)
  name: setShape(PrimitiveShape shape)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_setShape_physics_collision_shape_PrimitiveShape_
  fullName: ecs.PolygonCollider.setShape(PrimitiveShape shape)
  nameWithType: PolygonCollider.setShape(PrimitiveShape shape)
- uid: ecs.PolygonCollider.setShape*
  name: setShape
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_setShape_
  isSpec: "True"
  fullName: ecs.PolygonCollider.setShape
  nameWithType: PolygonCollider.setShape
  package: ecs
- uid: ecs.PolygonCollider.start()
  name: start()
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_start__
  fullName: ecs.PolygonCollider.start()
  nameWithType: PolygonCollider.start()
- uid: ecs.PolygonCollider.start*
  name: start
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_start_
  isSpec: "True"
  fullName: ecs.PolygonCollider.start
  nameWithType: PolygonCollider.start
  package: ecs
- uid: ecs.PolygonCollider.update(float)
  name: update(float dt)
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_update_float_
  fullName: ecs.PolygonCollider.update(float dt)
  nameWithType: PolygonCollider.update(float dt)
- uid: ecs.PolygonCollider.update*
  name: update
  href: api/ecs.PolygonCollider.html#ecs_PolygonCollider_update_
  isSpec: "True"
  fullName: ecs.PolygonCollider.update
  nameWithType: PolygonCollider.update
  package: ecs
- uid: ecs.SpriteAnimation
  name: SpriteAnimation
  href: api/ecs.SpriteAnimation.html
  fullName: ecs.SpriteAnimation
  nameWithType: SpriteAnimation
- uid: ecs.SpriteAnimation.nextAnimation(java.lang.String,int)
  name: nextAnimation(String nextAnimation, int nextRepetitions)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_nextAnimation_java_lang_String_int_
  fullName: ecs.SpriteAnimation.nextAnimation(String nextAnimation, int nextRepetitions)
  nameWithType: SpriteAnimation.nextAnimation(String nextAnimation, int nextRepetitions)
- uid: ecs.SpriteAnimation.nextAnimation*
  name: nextAnimation
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_nextAnimation_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.nextAnimation
  nameWithType: SpriteAnimation.nextAnimation
  package: ecs
- uid: ecs.SpriteAnimation.setAnimation(java.lang.String,java.util.List<graphics.Sprite>)
  name: setAnimation(String name, List<Sprite> sprites)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setAnimation_java_lang_String_java_util_List_graphics_Sprite__
  fullName: ecs.SpriteAnimation.setAnimation(String name, List<Sprite> sprites)
  nameWithType: SpriteAnimation.setAnimation(String name, List<Sprite> sprites)
- uid: ecs.SpriteAnimation.setAnimation*
  name: setAnimation
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setAnimation_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.setAnimation
  nameWithType: SpriteAnimation.setAnimation
  package: ecs
- uid: ecs.SpriteAnimation.setAnimationEndEvent(java.util.function.Consumer<java.lang.String>)
  name: setAnimationEndEvent(Consumer<String> animationEndEvent)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setAnimationEndEvent_java_util_function_Consumer_java_lang_String__
  fullName: ecs.SpriteAnimation.setAnimationEndEvent(Consumer<String> animationEndEvent)
  nameWithType: SpriteAnimation.setAnimationEndEvent(Consumer<String> animationEndEvent)
- uid: ecs.SpriteAnimation.setAnimationEndEvent*
  name: setAnimationEndEvent
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setAnimationEndEvent_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.setAnimationEndEvent
  nameWithType: SpriteAnimation.setAnimationEndEvent
  package: ecs
- uid: ecs.SpriteAnimation.setBaseImage(graphics.Sprite)
  name: setBaseImage(Sprite baseImage)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setBaseImage_graphics_Sprite_
  fullName: ecs.SpriteAnimation.setBaseImage(Sprite baseImage)
  nameWithType: SpriteAnimation.setBaseImage(Sprite baseImage)
- uid: ecs.SpriteAnimation.setBaseImage*
  name: setBaseImage
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setBaseImage_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.setBaseImage
  nameWithType: SpriteAnimation.setBaseImage
  package: ecs
- uid: ecs.SpriteAnimation.setCurrentRepetition(int)
  name: setCurrentRepetition(int currentRepetition)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setCurrentRepetition_int_
  fullName: ecs.SpriteAnimation.setCurrentRepetition(int currentRepetition)
  nameWithType: SpriteAnimation.setCurrentRepetition(int currentRepetition)
- uid: ecs.SpriteAnimation.setCurrentRepetition*
  name: setCurrentRepetition
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setCurrentRepetition_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.setCurrentRepetition
  nameWithType: SpriteAnimation.setCurrentRepetition
  package: ecs
- uid: ecs.SpriteAnimation.setTimePerSprite(float)
  name: setTimePerSprite(float timePerSprite)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setTimePerSprite_float_
  fullName: ecs.SpriteAnimation.setTimePerSprite(float timePerSprite)
  nameWithType: SpriteAnimation.setTimePerSprite(float timePerSprite)
- uid: ecs.SpriteAnimation.setTimePerSprite*
  name: setTimePerSprite
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_setTimePerSprite_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.setTimePerSprite
  nameWithType: SpriteAnimation.setTimePerSprite
  package: ecs
- uid: ecs.SpriteAnimation.SpriteAnimation(ecs.SpriteRenderer,graphics.Sprite,float)
  name: SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_SpriteAnimation_ecs_SpriteRenderer_graphics_Sprite_float_
  fullName: ecs.SpriteAnimation.SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)
  nameWithType: SpriteAnimation.SpriteAnimation(SpriteRenderer renderer, Sprite baseImage, float timePerSprite)
- uid: ecs.SpriteAnimation.SpriteAnimation*
  name: SpriteAnimation
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_SpriteAnimation_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.SpriteAnimation
  nameWithType: SpriteAnimation.SpriteAnimation
  package: ecs
- uid: ecs.SpriteAnimation.start()
  name: start()
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_start__
  fullName: ecs.SpriteAnimation.start()
  nameWithType: SpriteAnimation.start()
- uid: ecs.SpriteAnimation.start*
  name: start
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_start_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.start
  nameWithType: SpriteAnimation.start
  package: ecs
- uid: ecs.SpriteAnimation.switchAnimation(boolean)
  name: switchAnimation(boolean instant)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_switchAnimation_boolean_
  fullName: ecs.SpriteAnimation.switchAnimation(boolean instant)
  nameWithType: SpriteAnimation.switchAnimation(boolean instant)
- uid: ecs.SpriteAnimation.switchAnimation*
  name: switchAnimation
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_switchAnimation_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.switchAnimation
  nameWithType: SpriteAnimation.switchAnimation
  package: ecs
- uid: ecs.SpriteAnimation.update(float)
  name: update(float dt)
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_update_float_
  fullName: ecs.SpriteAnimation.update(float dt)
  nameWithType: SpriteAnimation.update(float dt)
- uid: ecs.SpriteAnimation.update*
  name: update
  href: api/ecs.SpriteAnimation.html#ecs_SpriteAnimation_update_
  isSpec: "True"
  fullName: ecs.SpriteAnimation.update
  nameWithType: SpriteAnimation.update
  package: ecs
- uid: ecs.SpriteRenderer
  name: SpriteRenderer
  href: api/ecs.SpriteRenderer.html
  fullName: ecs.SpriteRenderer
  nameWithType: SpriteRenderer
- uid: ecs.SpriteRenderer.getColor()
  name: getColor()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getColor__
  fullName: ecs.SpriteRenderer.getColor()
  nameWithType: SpriteRenderer.getColor()
- uid: ecs.SpriteRenderer.getColor*
  name: getColor
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getColor_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.getColor
  nameWithType: SpriteRenderer.getColor
  package: ecs
- uid: ecs.SpriteRenderer.getColorVector()
  name: getColorVector()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getColorVector__
  fullName: ecs.SpriteRenderer.getColorVector()
  nameWithType: SpriteRenderer.getColorVector()
- uid: ecs.SpriteRenderer.getColorVector*
  name: getColorVector
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getColorVector_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.getColorVector
  nameWithType: SpriteRenderer.getColorVector
  package: ecs
- uid: ecs.SpriteRenderer.getSize()
  name: getSize()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getSize__
  fullName: ecs.SpriteRenderer.getSize()
  nameWithType: SpriteRenderer.getSize()
- uid: ecs.SpriteRenderer.getSize*
  name: getSize
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getSize_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.getSize
  nameWithType: SpriteRenderer.getSize
  package: ecs
- uid: ecs.SpriteRenderer.getTexCoords()
  name: getTexCoords()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getTexCoords__
  fullName: ecs.SpriteRenderer.getTexCoords()
  nameWithType: SpriteRenderer.getTexCoords()
- uid: ecs.SpriteRenderer.getTexCoords*
  name: getTexCoords
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getTexCoords_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.getTexCoords
  nameWithType: SpriteRenderer.getTexCoords
  package: ecs
- uid: ecs.SpriteRenderer.getTexture()
  name: getTexture()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getTexture__
  fullName: ecs.SpriteRenderer.getTexture()
  nameWithType: SpriteRenderer.getTexture()
- uid: ecs.SpriteRenderer.getTexture*
  name: getTexture
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_getTexture_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.getTexture
  nameWithType: SpriteRenderer.getTexture
  package: ecs
- uid: ecs.SpriteRenderer.isDirty()
  name: isDirty()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_isDirty__
  fullName: ecs.SpriteRenderer.isDirty()
  nameWithType: SpriteRenderer.isDirty()
- uid: ecs.SpriteRenderer.isDirty*
  name: isDirty
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_isDirty_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.isDirty
  nameWithType: SpriteRenderer.isDirty
  package: ecs
- uid: ecs.SpriteRenderer.markDirty()
  name: markDirty()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_markDirty__
  fullName: ecs.SpriteRenderer.markDirty()
  nameWithType: SpriteRenderer.markDirty()
- uid: ecs.SpriteRenderer.markDirty*
  name: markDirty
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_markDirty_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.markDirty
  nameWithType: SpriteRenderer.markDirty
  package: ecs
- uid: ecs.SpriteRenderer.setAlpha(float)
  name: setAlpha(float a)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setAlpha_float_
  fullName: ecs.SpriteRenderer.setAlpha(float a)
  nameWithType: SpriteRenderer.setAlpha(float a)
- uid: ecs.SpriteRenderer.setAlpha*
  name: setAlpha
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setAlpha_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.setAlpha
  nameWithType: SpriteRenderer.setAlpha
  package: ecs
- uid: ecs.SpriteRenderer.setClean()
  name: setClean()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setClean__
  fullName: ecs.SpriteRenderer.setClean()
  nameWithType: SpriteRenderer.setClean()
- uid: ecs.SpriteRenderer.setClean*
  name: setClean
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setClean_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.setClean
  nameWithType: SpriteRenderer.setClean
  package: ecs
- uid: ecs.SpriteRenderer.setColor(graphics.Color)
  name: setColor(Color color)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setColor_graphics_Color_
  fullName: ecs.SpriteRenderer.setColor(Color color)
  nameWithType: SpriteRenderer.setColor(Color color)
- uid: ecs.SpriteRenderer.setColor(org.joml.Vector4f)
  name: setColor(Vector4f color)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setColor_org_joml_Vector4f_
  fullName: ecs.SpriteRenderer.setColor(Vector4f color)
  nameWithType: SpriteRenderer.setColor(Vector4f color)
- uid: ecs.SpriteRenderer.setColor*
  name: setColor
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setColor_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.setColor
  nameWithType: SpriteRenderer.setColor
  package: ecs
- uid: ecs.SpriteRenderer.setSize(org.joml.Vector2f)
  name: setSize(Vector2f size)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setSize_org_joml_Vector2f_
  fullName: ecs.SpriteRenderer.setSize(Vector2f size)
  nameWithType: SpriteRenderer.setSize(Vector2f size)
- uid: ecs.SpriteRenderer.setSize*
  name: setSize
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setSize_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.setSize
  nameWithType: SpriteRenderer.setSize
  package: ecs
- uid: ecs.SpriteRenderer.setSprite(graphics.Sprite)
  name: setSprite(Sprite sprite)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setSprite_graphics_Sprite_
  fullName: ecs.SpriteRenderer.setSprite(Sprite sprite)
  nameWithType: SpriteRenderer.setSprite(Sprite sprite)
- uid: ecs.SpriteRenderer.setSprite*
  name: setSprite
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setSprite_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.setSprite
  nameWithType: SpriteRenderer.setSprite
  package: ecs
- uid: ecs.SpriteRenderer.setTexture(graphics.Texture)
  name: setTexture(Texture texture)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setTexture_graphics_Texture_
  fullName: ecs.SpriteRenderer.setTexture(Texture texture)
  nameWithType: SpriteRenderer.setTexture(Texture texture)
- uid: ecs.SpriteRenderer.setTexture*
  name: setTexture
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_setTexture_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.setTexture
  nameWithType: SpriteRenderer.setTexture
  package: ecs
- uid: ecs.SpriteRenderer.SpriteRenderer(graphics.Color,org.joml.Vector2f)
  name: SpriteRenderer(Color color, Vector2f size)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_SpriteRenderer_graphics_Color_org_joml_Vector2f_
  fullName: ecs.SpriteRenderer.SpriteRenderer(Color color, Vector2f size)
  nameWithType: SpriteRenderer.SpriteRenderer(Color color, Vector2f size)
- uid: ecs.SpriteRenderer.SpriteRenderer(graphics.Sprite,org.joml.Vector2f)
  name: SpriteRenderer(Sprite sprite, Vector2f size)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_SpriteRenderer_graphics_Sprite_org_joml_Vector2f_
  fullName: ecs.SpriteRenderer.SpriteRenderer(Sprite sprite, Vector2f size)
  nameWithType: SpriteRenderer.SpriteRenderer(Sprite sprite, Vector2f size)
- uid: ecs.SpriteRenderer.SpriteRenderer(java.lang.String,org.joml.Vector2f)
  name: SpriteRenderer(String path, Vector2f size)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_SpriteRenderer_java_lang_String_org_joml_Vector2f_
  fullName: ecs.SpriteRenderer.SpriteRenderer(String path, Vector2f size)
  nameWithType: SpriteRenderer.SpriteRenderer(String path, Vector2f size)
- uid: ecs.SpriteRenderer.SpriteRenderer(org.joml.Vector4f,org.joml.Vector2f)
  name: SpriteRenderer(Vector4f color, Vector2f size)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_SpriteRenderer_org_joml_Vector4f_org_joml_Vector2f_
  fullName: ecs.SpriteRenderer.SpriteRenderer(Vector4f color, Vector2f size)
  nameWithType: SpriteRenderer.SpriteRenderer(Vector4f color, Vector2f size)
- uid: ecs.SpriteRenderer.SpriteRenderer*
  name: SpriteRenderer
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_SpriteRenderer_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.SpriteRenderer
  nameWithType: SpriteRenderer.SpriteRenderer
  package: ecs
- uid: ecs.SpriteRenderer.start()
  name: start()
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_start__
  fullName: ecs.SpriteRenderer.start()
  nameWithType: SpriteRenderer.start()
- uid: ecs.SpriteRenderer.start*
  name: start
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_start_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.start
  nameWithType: SpriteRenderer.start
  package: ecs
- uid: ecs.SpriteRenderer.update(float)
  name: update(float dt)
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_update_float_
  fullName: ecs.SpriteRenderer.update(float dt)
  nameWithType: SpriteRenderer.update(float dt)
- uid: ecs.SpriteRenderer.update*
  name: update
  href: api/ecs.SpriteRenderer.html#ecs_SpriteRenderer_update_
  isSpec: "True"
  fullName: ecs.SpriteRenderer.update
  nameWithType: SpriteRenderer.update
  package: ecs
- uid: ecs.Text
  name: Text
  href: api/ecs.Text.html
  fullName: ecs.Text
  nameWithType: Text
- uid: ecs.Text.addX(float)
  name: addX(float x)
  href: api/ecs.Text.html#ecs_Text_addX_float_
  fullName: ecs.Text.addX(float x)
  nameWithType: Text.addX(float x)
- uid: ecs.Text.addX*
  name: addX
  href: api/ecs.Text.html#ecs_Text_addX_
  isSpec: "True"
  fullName: ecs.Text.addX
  nameWithType: Text.addX
  package: ecs
- uid: ecs.Text.addY(float)
  name: addY(float y)
  href: api/ecs.Text.html#ecs_Text_addY_float_
  fullName: ecs.Text.addY(float y)
  nameWithType: Text.addY(float y)
- uid: ecs.Text.addY*
  name: addY
  href: api/ecs.Text.html#ecs_Text_addY_
  isSpec: "True"
  fullName: ecs.Text.addY
  nameWithType: Text.addY
  package: ecs
- uid: ecs.Text.change(java.lang.String)
  name: change(String string)
  href: api/ecs.Text.html#ecs_Text_change_java_lang_String_
  fullName: ecs.Text.change(String string)
  nameWithType: Text.change(String string)
- uid: ecs.Text.change*
  name: change
  href: api/ecs.Text.html#ecs_Text_change_
  isSpec: "True"
  fullName: ecs.Text.change
  nameWithType: Text.change
  package: ecs
- uid: ecs.Text.getGlyphRenderers()
  name: getGlyphRenderers()
  href: api/ecs.Text.html#ecs_Text_getGlyphRenderers__
  fullName: ecs.Text.getGlyphRenderers()
  nameWithType: Text.getGlyphRenderers()
- uid: ecs.Text.getGlyphRenderers*
  name: getGlyphRenderers
  href: api/ecs.Text.html#ecs_Text_getGlyphRenderers_
  isSpec: "True"
  fullName: ecs.Text.getGlyphRenderers
  nameWithType: Text.getGlyphRenderers
  package: ecs
- uid: ecs.Text.getX()
  name: getX()
  href: api/ecs.Text.html#ecs_Text_getX__
  fullName: ecs.Text.getX()
  nameWithType: Text.getX()
- uid: ecs.Text.getX*
  name: getX
  href: api/ecs.Text.html#ecs_Text_getX_
  isSpec: "True"
  fullName: ecs.Text.getX
  nameWithType: Text.getX
  package: ecs
- uid: ecs.Text.getY()
  name: getY()
  href: api/ecs.Text.html#ecs_Text_getY__
  fullName: ecs.Text.getY()
  nameWithType: Text.getY()
- uid: ecs.Text.getY*
  name: getY
  href: api/ecs.Text.html#ecs_Text_getY_
  isSpec: "True"
  fullName: ecs.Text.getY
  nameWithType: Text.getY
  package: ecs
- uid: ecs.Text.isCentered()
  name: isCentered()
  href: api/ecs.Text.html#ecs_Text_isCentered__
  fullName: ecs.Text.isCentered()
  nameWithType: Text.isCentered()
- uid: ecs.Text.isCentered*
  name: isCentered
  href: api/ecs.Text.html#ecs_Text_isCentered_
  isSpec: "True"
  fullName: ecs.Text.isCentered
  nameWithType: Text.isCentered
  package: ecs
- uid: ecs.Text.rainbowify()
  name: rainbowify()
  href: api/ecs.Text.html#ecs_Text_rainbowify__
  fullName: ecs.Text.rainbowify()
  nameWithType: Text.rainbowify()
- uid: ecs.Text.rainbowify*
  name: rainbowify
  href: api/ecs.Text.html#ecs_Text_rainbowify_
  isSpec: "True"
  fullName: ecs.Text.rainbowify
  nameWithType: Text.rainbowify
  package: ecs
- uid: ecs.Text.setCentered(boolean)
  name: setCentered(boolean centered)
  href: api/ecs.Text.html#ecs_Text_setCentered_boolean_
  fullName: ecs.Text.setCentered(boolean centered)
  nameWithType: Text.setCentered(boolean centered)
- uid: ecs.Text.setCentered*
  name: setCentered
  href: api/ecs.Text.html#ecs_Text_setCentered_
  isSpec: "True"
  fullName: ecs.Text.setCentered
  nameWithType: Text.setCentered
  package: ecs
- uid: ecs.Text.setColor(graphics.Color)
  name: setColor(Color color)
  href: api/ecs.Text.html#ecs_Text_setColor_graphics_Color_
  fullName: ecs.Text.setColor(Color color)
  nameWithType: Text.setColor(Color color)
- uid: ecs.Text.setColor*
  name: setColor
  href: api/ecs.Text.html#ecs_Text_setColor_
  isSpec: "True"
  fullName: ecs.Text.setColor
  nameWithType: Text.setColor
  package: ecs
- uid: ecs.Text.setPosition(org.joml.Vector2f)
  name: setPosition(Vector2f position)
  href: api/ecs.Text.html#ecs_Text_setPosition_org_joml_Vector2f_
  fullName: ecs.Text.setPosition(Vector2f position)
  nameWithType: Text.setPosition(Vector2f position)
- uid: ecs.Text.setPosition*
  name: setPosition
  href: api/ecs.Text.html#ecs_Text_setPosition_
  isSpec: "True"
  fullName: ecs.Text.setPosition
  nameWithType: Text.setPosition
  package: ecs
- uid: ecs.Text.setX(float)
  name: setX(float x)
  href: api/ecs.Text.html#ecs_Text_setX_float_
  fullName: ecs.Text.setX(float x)
  nameWithType: Text.setX(float x)
- uid: ecs.Text.setX*
  name: setX
  href: api/ecs.Text.html#ecs_Text_setX_
  isSpec: "True"
  fullName: ecs.Text.setX
  nameWithType: Text.setX
  package: ecs
- uid: ecs.Text.setY(float)
  name: setY(float y)
  href: api/ecs.Text.html#ecs_Text_setY_float_
  fullName: ecs.Text.setY(float y)
  nameWithType: Text.setY(float y)
- uid: ecs.Text.setY*
  name: setY
  href: api/ecs.Text.html#ecs_Text_setY_
  isSpec: "True"
  fullName: ecs.Text.setY
  nameWithType: Text.setY
  package: ecs
- uid: ecs.Text.Text(java.lang.String,float,float)
  name: Text(String string, float x, float y)
  href: api/ecs.Text.html#ecs_Text_Text_java_lang_String_float_float_
  fullName: ecs.Text.Text(String string, float x, float y)
  nameWithType: Text.Text(String string, float x, float y)
- uid: ecs.Text.Text(java.lang.String,fonts.Font,graphics.Color,float,float)
  name: Text(String string, Font font, Color color, float x, float y)
  href: api/ecs.Text.html#ecs_Text_Text_java_lang_String_fonts_Font_graphics_Color_float_float_
  fullName: ecs.Text.Text(String string, Font font, Color color, float x, float y)
  nameWithType: Text.Text(String string, Font font, Color color, float x, float y)
- uid: ecs.Text.Text(java.lang.String,fonts.Font,graphics.Color,float,float,int,boolean,boolean)
  name: Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)
  href: api/ecs.Text.html#ecs_Text_Text_java_lang_String_fonts_Font_graphics_Color_float_float_int_boolean_boolean_
  fullName: ecs.Text.Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)
  nameWithType: Text.Text(String string, Font font, Color color, float x, float y, int zIndex, boolean isSticky, boolean isCentered)
- uid: ecs.Text.Text(java.lang.String,graphics.Color,float,float)
  name: Text(String string, Color color, float x, float y)
  href: api/ecs.Text.html#ecs_Text_Text_java_lang_String_graphics_Color_float_float_
  fullName: ecs.Text.Text(String string, Color color, float x, float y)
  nameWithType: Text.Text(String string, Color color, float x, float y)
- uid: ecs.Text.Text*
  name: Text
  href: api/ecs.Text.html#ecs_Text_Text_
  isSpec: "True"
  fullName: ecs.Text.Text
  nameWithType: Text.Text
  package: ecs
- uid: ecs.Text.update()
  name: update()
  href: api/ecs.Text.html#ecs_Text_update__
  fullName: ecs.Text.update()
  nameWithType: Text.update()
- uid: ecs.Text.update*
  name: update
  href: api/ecs.Text.html#ecs_Text_update_
  isSpec: "True"
  fullName: ecs.Text.update
  nameWithType: Text.update
  package: ecs
- uid: ecs.Text.zIndex()
  name: zIndex()
  href: api/ecs.Text.html#ecs_Text_zIndex__
  fullName: ecs.Text.zIndex()
  nameWithType: Text.zIndex()
- uid: ecs.Text.zIndex*
  name: zIndex
  href: api/ecs.Text.html#ecs_Text_zIndex_
  isSpec: "True"
  fullName: ecs.Text.zIndex
  nameWithType: Text.zIndex
  package: ecs
- uid: event
  name: event
  href: api/event.html
  fullName: event
  nameWithType: event
- uid: event.EventData
  name: EventData
  href: api/event.EventData.html
  fullName: event.EventData
  nameWithType: EventData
- uid: event.EventData.EventData()
  name: EventData()
  href: api/event.EventData.html#event_EventData_EventData__
  fullName: event.EventData.EventData()
  nameWithType: EventData.EventData()
- uid: event.EventData.EventData*
  name: EventData
  href: api/event.EventData.html#event_EventData_EventData_
  isSpec: "True"
  fullName: event.EventData.EventData
  nameWithType: EventData.EventData
  package: event
- uid: event.EventData.KeyEventData
  name: EventData.KeyEventData
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData
  fullName: event.EventData.KeyEventData
  nameWithType: EventData.KeyEventData
- uid: event.EventData.KeyEventData.action
  name: action
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData_action
  fullName: event.EventData.KeyEventData.action
  nameWithType: EventData.KeyEventData.action
- uid: event.EventData.KeyEventData.keycode
  name: keycode
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData_keycode
  fullName: event.EventData.KeyEventData.keycode
  nameWithType: EventData.KeyEventData.keycode
- uid: event.EventData.KeyEventData.KeyEventData(int,int,int,int)
  name: KeyEventData(int keycode, int scancode, int action, int modifiers)
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData_KeyEventData_int_int_int_int_
  fullName: event.EventData.KeyEventData.KeyEventData(int keycode, int scancode, int action, int modifiers)
  nameWithType: EventData.KeyEventData.KeyEventData(int keycode, int scancode, int action, int modifiers)
- uid: event.EventData.KeyEventData.KeyEventData*
  name: KeyEventData
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData_KeyEventData_
  isSpec: "True"
  fullName: event.EventData.KeyEventData.KeyEventData
  nameWithType: EventData.KeyEventData.KeyEventData
  package: event
- uid: event.EventData.KeyEventData.modifiers
  name: modifiers
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData_modifiers
  fullName: event.EventData.KeyEventData.modifiers
  nameWithType: EventData.KeyEventData.modifiers
- uid: event.EventData.KeyEventData.scancode
  name: scancode
  href: api/event.EventData.KeyEventData.html#event_EventData_KeyEventData_scancode
  fullName: event.EventData.KeyEventData.scancode
  nameWithType: EventData.KeyEventData.scancode
- uid: event.EventData.MouseButtonEventData
  name: EventData.MouseButtonEventData
  href: api/event.EventData.MouseButtonEventData.html#event_EventData_MouseButtonEventData
  fullName: event.EventData.MouseButtonEventData
  nameWithType: EventData.MouseButtonEventData
- uid: event.EventData.MouseButtonEventData.action
  name: action
  href: api/event.EventData.MouseButtonEventData.html#event_EventData_MouseButtonEventData_action
  fullName: event.EventData.MouseButtonEventData.action
  nameWithType: EventData.MouseButtonEventData.action
- uid: event.EventData.MouseButtonEventData.button
  name: button
  href: api/event.EventData.MouseButtonEventData.html#event_EventData_MouseButtonEventData_button
  fullName: event.EventData.MouseButtonEventData.button
  nameWithType: EventData.MouseButtonEventData.button
- uid: event.EventData.MouseButtonEventData.modifiers
  name: modifiers
  href: api/event.EventData.MouseButtonEventData.html#event_EventData_MouseButtonEventData_modifiers
  fullName: event.EventData.MouseButtonEventData.modifiers
  nameWithType: EventData.MouseButtonEventData.modifiers
- uid: event.EventData.MouseButtonEventData.MouseButtonEventData(int,int,int)
  name: MouseButtonEventData(int button, int action, int modifiers)
  href: api/event.EventData.MouseButtonEventData.html#event_EventData_MouseButtonEventData_MouseButtonEventData_int_int_int_
  fullName: event.EventData.MouseButtonEventData.MouseButtonEventData(int button, int action, int modifiers)
  nameWithType: EventData.MouseButtonEventData.MouseButtonEventData(int button, int action, int modifiers)
- uid: event.EventData.MouseButtonEventData.MouseButtonEventData*
  name: MouseButtonEventData
  href: api/event.EventData.MouseButtonEventData.html#event_EventData_MouseButtonEventData_MouseButtonEventData_
  isSpec: "True"
  fullName: event.EventData.MouseButtonEventData.MouseButtonEventData
  nameWithType: EventData.MouseButtonEventData.MouseButtonEventData
  package: event
- uid: event.EventData.MouseScrollEventData
  name: EventData.MouseScrollEventData
  href: api/event.EventData.MouseScrollEventData.html#event_EventData_MouseScrollEventData
  fullName: event.EventData.MouseScrollEventData
  nameWithType: EventData.MouseScrollEventData
- uid: event.EventData.MouseScrollEventData.MouseScrollEventData(double,double)
  name: MouseScrollEventData(double xScroll, double yScroll)
  href: api/event.EventData.MouseScrollEventData.html#event_EventData_MouseScrollEventData_MouseScrollEventData_double_double_
  fullName: event.EventData.MouseScrollEventData.MouseScrollEventData(double xScroll, double yScroll)
  nameWithType: EventData.MouseScrollEventData.MouseScrollEventData(double xScroll, double yScroll)
- uid: event.EventData.MouseScrollEventData.MouseScrollEventData*
  name: MouseScrollEventData
  href: api/event.EventData.MouseScrollEventData.html#event_EventData_MouseScrollEventData_MouseScrollEventData_
  isSpec: "True"
  fullName: event.EventData.MouseScrollEventData.MouseScrollEventData
  nameWithType: EventData.MouseScrollEventData.MouseScrollEventData
  package: event
- uid: event.EventData.MouseScrollEventData.xScroll
  name: xScroll
  href: api/event.EventData.MouseScrollEventData.html#event_EventData_MouseScrollEventData_xScroll
  fullName: event.EventData.MouseScrollEventData.xScroll
  nameWithType: EventData.MouseScrollEventData.xScroll
- uid: event.EventData.MouseScrollEventData.yScroll
  name: yScroll
  href: api/event.EventData.MouseScrollEventData.html#event_EventData_MouseScrollEventData_yScroll
  fullName: event.EventData.MouseScrollEventData.yScroll
  nameWithType: EventData.MouseScrollEventData.yScroll
- uid: event.EventData.TriggerEnterEvent
  name: EventData.TriggerEnterEvent
  href: api/event.EventData.TriggerEnterEvent.html#event_EventData_TriggerEnterEvent
  fullName: event.EventData.TriggerEnterEvent
  nameWithType: EventData.TriggerEnterEvent
- uid: event.EventData.TriggerEnterEvent.TriggerEnterEvent()
  name: TriggerEnterEvent()
  href: api/event.EventData.TriggerEnterEvent.html#event_EventData_TriggerEnterEvent_TriggerEnterEvent__
  fullName: event.EventData.TriggerEnterEvent.TriggerEnterEvent()
  nameWithType: EventData.TriggerEnterEvent.TriggerEnterEvent()
- uid: event.EventData.TriggerEnterEvent.TriggerEnterEvent*
  name: TriggerEnterEvent
  href: api/event.EventData.TriggerEnterEvent.html#event_EventData_TriggerEnterEvent_TriggerEnterEvent_
  isSpec: "True"
  fullName: event.EventData.TriggerEnterEvent.TriggerEnterEvent
  nameWithType: EventData.TriggerEnterEvent.TriggerEnterEvent
  package: event
- uid: event.EventData.TriggerExitEvent
  name: EventData.TriggerExitEvent
  href: api/event.EventData.TriggerExitEvent.html#event_EventData_TriggerExitEvent
  fullName: event.EventData.TriggerExitEvent
  nameWithType: EventData.TriggerExitEvent
- uid: event.EventData.TriggerExitEvent.TriggerExitEvent()
  name: TriggerExitEvent()
  href: api/event.EventData.TriggerExitEvent.html#event_EventData_TriggerExitEvent_TriggerExitEvent__
  fullName: event.EventData.TriggerExitEvent.TriggerExitEvent()
  nameWithType: EventData.TriggerExitEvent.TriggerExitEvent()
- uid: event.EventData.TriggerExitEvent.TriggerExitEvent*
  name: TriggerExitEvent
  href: api/event.EventData.TriggerExitEvent.html#event_EventData_TriggerExitEvent_TriggerExitEvent_
  isSpec: "True"
  fullName: event.EventData.TriggerExitEvent.TriggerExitEvent
  nameWithType: EventData.TriggerExitEvent.TriggerExitEvent
  package: event
- uid: event.EventData.WindowResizeEventData
  name: EventData.WindowResizeEventData
  href: api/event.EventData.WindowResizeEventData.html#event_EventData_WindowResizeEventData
  fullName: event.EventData.WindowResizeEventData
  nameWithType: EventData.WindowResizeEventData
- uid: event.EventData.WindowResizeEventData.WindowResizeEventData(int,int)
  name: WindowResizeEventData(int x, int y)
  href: api/event.EventData.WindowResizeEventData.html#event_EventData_WindowResizeEventData_WindowResizeEventData_int_int_
  fullName: event.EventData.WindowResizeEventData.WindowResizeEventData(int x, int y)
  nameWithType: EventData.WindowResizeEventData.WindowResizeEventData(int x, int y)
- uid: event.EventData.WindowResizeEventData.WindowResizeEventData*
  name: WindowResizeEventData
  href: api/event.EventData.WindowResizeEventData.html#event_EventData_WindowResizeEventData_WindowResizeEventData_
  isSpec: "True"
  fullName: event.EventData.WindowResizeEventData.WindowResizeEventData
  nameWithType: EventData.WindowResizeEventData.WindowResizeEventData
  package: event
- uid: event.EventData.WindowResizeEventData.x
  name: x
  href: api/event.EventData.WindowResizeEventData.html#event_EventData_WindowResizeEventData_x
  fullName: event.EventData.WindowResizeEventData.x
  nameWithType: EventData.WindowResizeEventData.x
- uid: event.EventData.WindowResizeEventData.y
  name: y
  href: api/event.EventData.WindowResizeEventData.html#event_EventData_WindowResizeEventData_y
  fullName: event.EventData.WindowResizeEventData.y
  nameWithType: EventData.WindowResizeEventData.y
- uid: event.EventListener
  name: EventListener<T>
  href: api/event.EventListener.html
  fullName: event.EventListener<T>
  nameWithType: EventListener<T>
- uid: event.EventListener.onEvent(T)
  name: onEvent(T t)
  href: api/event.EventListener.html#event_EventListener_onEvent_T_
  fullName: event.EventListener<T>.onEvent(T t)
  nameWithType: EventListener<T>.onEvent(T t)
- uid: event.EventListener.onEvent*
  name: onEvent
  href: api/event.EventListener.html#event_EventListener_onEvent_
  isSpec: "True"
  fullName: event.EventListener<T>.onEvent
  nameWithType: EventListener<T>.onEvent
  package: event
- uid: event.EventNode
  name: EventNode<T>
  href: api/event.EventNode.html
  fullName: event.EventNode<T>
  nameWithType: EventNode<T>
- uid: event.EventNode.EventNode()
  name: EventNode()
  href: api/event.EventNode.html#event_EventNode_EventNode__
  fullName: event.EventNode<T>.EventNode()
  nameWithType: EventNode<T>.EventNode()
- uid: event.EventNode.EventNode*
  name: EventNode
  href: api/event.EventNode.html#event_EventNode_EventNode_
  isSpec: "True"
  fullName: event.EventNode<T>.EventNode
  nameWithType: EventNode<T>.EventNode
  package: event
- uid: event.EventNode.onEvent(T)
  name: onEvent(T t)
  href: api/event.EventNode.html#event_EventNode_onEvent_T_
  fullName: event.EventNode<T>.onEvent(T t)
  nameWithType: EventNode<T>.onEvent(T t)
- uid: event.EventNode.onEvent*
  name: onEvent
  href: api/event.EventNode.html#event_EventNode_onEvent_
  isSpec: "True"
  fullName: event.EventNode<T>.onEvent
  nameWithType: EventNode<T>.onEvent
  package: event
- uid: event.EventNode.subscribe(event.EventListener<T>)
  name: subscribe(EventListener<T> listener)
  href: api/event.EventNode.html#event_EventNode_subscribe_event_EventListener_T__
  fullName: event.EventNode<T>.subscribe(EventListener<T> listener)
  nameWithType: EventNode<T>.subscribe(EventListener<T> listener)
- uid: event.EventNode.subscribe*
  name: subscribe
  href: api/event.EventNode.html#event_EventNode_subscribe_
  isSpec: "True"
  fullName: event.EventNode<T>.subscribe
  nameWithType: EventNode<T>.subscribe
  package: event
- uid: event.Events
  name: Events
  href: api/event.Events.html
  fullName: event.Events
  nameWithType: Events
- uid: event.Events.Events()
  name: Events()
  href: api/event.Events.html#event_Events_Events__
  fullName: event.Events.Events()
  nameWithType: Events.Events()
- uid: event.Events.Events*
  name: Events
  href: api/event.Events.html#event_Events_Events_
  isSpec: "True"
  fullName: event.Events.Events
  nameWithType: Events.Events
  package: event
- uid: event.Events.keyEvent
  name: keyEvent
  href: api/event.Events.html#event_Events_keyEvent
  fullName: event.Events.keyEvent
  nameWithType: Events.keyEvent
- uid: event.Events.mouseButtonEvent
  name: mouseButtonEvent
  href: api/event.Events.html#event_Events_mouseButtonEvent
  fullName: event.Events.mouseButtonEvent
  nameWithType: Events.mouseButtonEvent
- uid: event.Events.mouseScrollEvent
  name: mouseScrollEvent
  href: api/event.Events.html#event_Events_mouseScrollEvent
  fullName: event.Events.mouseScrollEvent
  nameWithType: Events.mouseScrollEvent
- uid: event.Events.windowResizeEvent
  name: windowResizeEvent
  href: api/event.Events.html#event_Events_windowResizeEvent
  fullName: event.Events.windowResizeEvent
  nameWithType: Events.windowResizeEvent
- uid: fonts
  name: fonts
  href: api/fonts.html
  fullName: fonts
  nameWithType: fonts
- uid: fonts.Font
  name: Font
  href: api/fonts.Font.html
  fullName: fonts.Font
  nameWithType: Font
- uid: fonts.Font.Font()
  name: Font()
  href: api/fonts.Font.html#fonts_Font_Font__
  fullName: fonts.Font.Font()
  nameWithType: Font.Font()
- uid: fonts.Font.Font(boolean)
  name: Font(boolean antiAlias)
  href: api/fonts.Font.html#fonts_Font_Font_boolean_
  fullName: fonts.Font.Font(boolean antiAlias)
  nameWithType: Font.Font(boolean antiAlias)
- uid: fonts.Font.Font(int)
  name: Font(int size)
  href: api/fonts.Font.html#fonts_Font_Font_int_
  fullName: fonts.Font.Font(int size)
  nameWithType: Font.Font(int size)
- uid: fonts.Font.Font(int,boolean)
  name: Font(int size, boolean antiAlias)
  href: api/fonts.Font.html#fonts_Font_Font_int_boolean_
  fullName: fonts.Font.Font(int size, boolean antiAlias)
  nameWithType: Font.Font(int size, boolean antiAlias)
- uid: fonts.Font.Font(java.awt.Font)
  name: Font(Font font)
  href: api/fonts.Font.html#fonts_Font_Font_java_awt_Font_
  fullName: fonts.Font.Font(Font font)
  nameWithType: Font.Font(Font font)
- uid: fonts.Font.Font(java.awt.Font,boolean)
  name: Font(Font font, boolean antiAlias)
  href: api/fonts.Font.html#fonts_Font_Font_java_awt_Font_boolean_
  fullName: fonts.Font.Font(Font font, boolean antiAlias)
  nameWithType: Font.Font(Font font, boolean antiAlias)
- uid: fonts.Font.Font(java.io.InputStream,int)
  name: Font(InputStream in, int size)
  href: api/fonts.Font.html#fonts_Font_Font_java_io_InputStream_int_
  fullName: fonts.Font.Font(InputStream in, int size)
  nameWithType: Font.Font(InputStream in, int size)
- uid: fonts.Font.Font(java.io.InputStream,int,boolean)
  name: Font(InputStream in, int size, boolean antiAlias)
  href: api/fonts.Font.html#fonts_Font_Font_java_io_InputStream_int_boolean_
  fullName: fonts.Font.Font(InputStream in, int size, boolean antiAlias)
  nameWithType: Font.Font(InputStream in, int size, boolean antiAlias)
- uid: fonts.Font.Font(java.lang.String,float,boolean)
  name: Font(String path, float size, boolean antiAlias)
  href: api/fonts.Font.html#fonts_Font_Font_java_lang_String_float_boolean_
  fullName: fonts.Font.Font(String path, float size, boolean antiAlias)
  nameWithType: Font.Font(String path, float size, boolean antiAlias)
- uid: fonts.Font.Font*
  name: Font
  href: api/fonts.Font.html#fonts_Font_Font_
  isSpec: "True"
  fullName: fonts.Font.Font
  nameWithType: Font.Font
  package: fonts
- uid: fonts.Font.getFontHeight()
  name: getFontHeight()
  href: api/fonts.Font.html#fonts_Font_getFontHeight__
  fullName: fonts.Font.getFontHeight()
  nameWithType: Font.getFontHeight()
- uid: fonts.Font.getFontHeight*
  name: getFontHeight
  href: api/fonts.Font.html#fonts_Font_getFontHeight_
  isSpec: "True"
  fullName: fonts.Font.getFontHeight
  nameWithType: Font.getFontHeight
  package: fonts
- uid: fonts.Font.getGlyphs()
  name: getGlyphs()
  href: api/fonts.Font.html#fonts_Font_getGlyphs__
  fullName: fonts.Font.getGlyphs()
  nameWithType: Font.getGlyphs()
- uid: fonts.Font.getGlyphs*
  name: getGlyphs
  href: api/fonts.Font.html#fonts_Font_getGlyphs_
  isSpec: "True"
  fullName: fonts.Font.getGlyphs
  nameWithType: Font.getGlyphs
  package: fonts
- uid: fonts.Font.getHeight(java.lang.CharSequence)
  name: getHeight(CharSequence text)
  href: api/fonts.Font.html#fonts_Font_getHeight_java_lang_CharSequence_
  fullName: fonts.Font.getHeight(CharSequence text)
  nameWithType: Font.getHeight(CharSequence text)
- uid: fonts.Font.getHeight*
  name: getHeight
  href: api/fonts.Font.html#fonts_Font_getHeight_
  isSpec: "True"
  fullName: fonts.Font.getHeight
  nameWithType: Font.getHeight
  package: fonts
- uid: fonts.Font.getTexture()
  name: getTexture()
  href: api/fonts.Font.html#fonts_Font_getTexture__
  fullName: fonts.Font.getTexture()
  nameWithType: Font.getTexture()
- uid: fonts.Font.getTexture*
  name: getTexture
  href: api/fonts.Font.html#fonts_Font_getTexture_
  isSpec: "True"
  fullName: fonts.Font.getTexture
  nameWithType: Font.getTexture
  package: fonts
- uid: fonts.Glyph
  name: Glyph
  href: api/fonts.Glyph.html
  fullName: fonts.Glyph
  nameWithType: Glyph
- uid: fonts.Glyph.calculateUVs(graphics.Texture)
  name: calculateUVs(Texture texture)
  href: api/fonts.Glyph.html#fonts_Glyph_calculateUVs_graphics_Texture_
  fullName: fonts.Glyph.calculateUVs(Texture texture)
  nameWithType: Glyph.calculateUVs(Texture texture)
- uid: fonts.Glyph.calculateUVs*
  name: calculateUVs
  href: api/fonts.Glyph.html#fonts_Glyph_calculateUVs_
  isSpec: "True"
  fullName: fonts.Glyph.calculateUVs
  nameWithType: Glyph.calculateUVs
  package: fonts
- uid: fonts.Glyph.getUV()
  name: getUV()
  href: api/fonts.Glyph.html#fonts_Glyph_getUV__
  fullName: fonts.Glyph.getUV()
  nameWithType: Glyph.getUV()
- uid: fonts.Glyph.getUV*
  name: getUV
  href: api/fonts.Glyph.html#fonts_Glyph_getUV_
  isSpec: "True"
  fullName: fonts.Glyph.getUV
  nameWithType: Glyph.getUV
  package: fonts
- uid: fonts.Glyph.Glyph(int,int,int,int)
  name: Glyph(int width, int height, int x, int y)
  href: api/fonts.Glyph.html#fonts_Glyph_Glyph_int_int_int_int_
  fullName: fonts.Glyph.Glyph(int width, int height, int x, int y)
  nameWithType: Glyph.Glyph(int width, int height, int x, int y)
- uid: fonts.Glyph.Glyph*
  name: Glyph
  href: api/fonts.Glyph.html#fonts_Glyph_Glyph_
  isSpec: "True"
  fullName: fonts.Glyph.Glyph
  nameWithType: Glyph.Glyph
  package: fonts
- uid: fonts.Glyph.height
  name: height
  href: api/fonts.Glyph.html#fonts_Glyph_height
  fullName: fonts.Glyph.height
  nameWithType: Glyph.height
- uid: fonts.Glyph.uvCoordinates
  name: uvCoordinates
  href: api/fonts.Glyph.html#fonts_Glyph_uvCoordinates
  fullName: fonts.Glyph.uvCoordinates
  nameWithType: Glyph.uvCoordinates
- uid: fonts.Glyph.width
  name: width
  href: api/fonts.Glyph.html#fonts_Glyph_width
  fullName: fonts.Glyph.width
  nameWithType: Glyph.width
- uid: fonts.Glyph.x
  name: x
  href: api/fonts.Glyph.html#fonts_Glyph_x
  fullName: fonts.Glyph.x
  nameWithType: Glyph.x
- uid: fonts.Glyph.y
  name: y
  href: api/fonts.Glyph.html#fonts_Glyph_y
  fullName: fonts.Glyph.y
  nameWithType: Glyph.y
- uid: fonts.GlyphRenderer
  name: GlyphRenderer
  href: api/fonts.GlyphRenderer.html
  fullName: fonts.GlyphRenderer
  nameWithType: GlyphRenderer
- uid: fonts.GlyphRenderer.addX(float)
  name: addX(float x)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_addX_float_
  fullName: fonts.GlyphRenderer.addX(float x)
  nameWithType: GlyphRenderer.addX(float x)
- uid: fonts.GlyphRenderer.addX*
  name: addX
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_addX_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.addX
  nameWithType: GlyphRenderer.addX
  package: fonts
- uid: fonts.GlyphRenderer.addY(float)
  name: addY(float x)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_addY_float_
  fullName: fonts.GlyphRenderer.addY(float x)
  nameWithType: GlyphRenderer.addY(float x)
- uid: fonts.GlyphRenderer.addY*
  name: addY
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_addY_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.addY
  nameWithType: GlyphRenderer.addY
  package: fonts
- uid: fonts.GlyphRenderer.getCharacter()
  name: getCharacter()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getCharacter__
  fullName: fonts.GlyphRenderer.getCharacter()
  nameWithType: GlyphRenderer.getCharacter()
- uid: fonts.GlyphRenderer.getCharacter*
  name: getCharacter
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getCharacter_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getCharacter
  nameWithType: GlyphRenderer.getCharacter
  package: fonts
- uid: fonts.GlyphRenderer.getColor()
  name: getColor()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getColor__
  fullName: fonts.GlyphRenderer.getColor()
  nameWithType: GlyphRenderer.getColor()
- uid: fonts.GlyphRenderer.getColor*
  name: getColor
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getColor_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getColor
  nameWithType: GlyphRenderer.getColor
  package: fonts
- uid: fonts.GlyphRenderer.getColorVector()
  name: getColorVector()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getColorVector__
  fullName: fonts.GlyphRenderer.getColorVector()
  nameWithType: GlyphRenderer.getColorVector()
- uid: fonts.GlyphRenderer.getColorVector*
  name: getColorVector
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getColorVector_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getColorVector
  nameWithType: GlyphRenderer.getColorVector
  package: fonts
- uid: fonts.GlyphRenderer.getLocalTransform()
  name: getLocalTransform()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getLocalTransform__
  fullName: fonts.GlyphRenderer.getLocalTransform()
  nameWithType: GlyphRenderer.getLocalTransform()
- uid: fonts.GlyphRenderer.getLocalTransform*
  name: getLocalTransform
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getLocalTransform_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getLocalTransform
  nameWithType: GlyphRenderer.getLocalTransform
  package: fonts
- uid: fonts.GlyphRenderer.getParentText()
  name: getParentText()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getParentText__
  fullName: fonts.GlyphRenderer.getParentText()
  nameWithType: GlyphRenderer.getParentText()
- uid: fonts.GlyphRenderer.getParentText*
  name: getParentText
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getParentText_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getParentText
  nameWithType: GlyphRenderer.getParentText
  package: fonts
- uid: fonts.GlyphRenderer.getTexCoords()
  name: getTexCoords()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getTexCoords__
  fullName: fonts.GlyphRenderer.getTexCoords()
  nameWithType: GlyphRenderer.getTexCoords()
- uid: fonts.GlyphRenderer.getTexCoords*
  name: getTexCoords
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getTexCoords_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getTexCoords
  nameWithType: GlyphRenderer.getTexCoords
  package: fonts
- uid: fonts.GlyphRenderer.getTexture()
  name: getTexture()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getTexture__
  fullName: fonts.GlyphRenderer.getTexture()
  nameWithType: GlyphRenderer.getTexture()
- uid: fonts.GlyphRenderer.getTexture*
  name: getTexture
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_getTexture_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.getTexture
  nameWithType: GlyphRenderer.getTexture
  package: fonts
- uid: fonts.GlyphRenderer.GlyphRenderer(util.Transform,fonts.Glyph,ecs.Text,char,boolean,graphics.Color)
  name: GlyphRenderer(Transform transform, Glyph glyph, Text parentText, char c, boolean isSticky, Color color)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_GlyphRenderer_util_Transform_fonts_Glyph_ecs_Text_char_boolean_graphics_Color_
  fullName: fonts.GlyphRenderer.GlyphRenderer(Transform transform, Glyph glyph, Text parentText, char c, boolean isSticky, Color color)
  nameWithType: GlyphRenderer.GlyphRenderer(Transform transform, Glyph glyph, Text parentText, char c, boolean isSticky, Color color)
- uid: fonts.GlyphRenderer.GlyphRenderer*
  name: GlyphRenderer
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_GlyphRenderer_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.GlyphRenderer
  nameWithType: GlyphRenderer.GlyphRenderer
  package: fonts
- uid: fonts.GlyphRenderer.isDirty()
  name: isDirty()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_isDirty__
  fullName: fonts.GlyphRenderer.isDirty()
  nameWithType: GlyphRenderer.isDirty()
- uid: fonts.GlyphRenderer.isDirty*
  name: isDirty
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_isDirty_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.isDirty
  nameWithType: GlyphRenderer.isDirty
  package: fonts
- uid: fonts.GlyphRenderer.isSticky()
  name: isSticky()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_isSticky__
  fullName: fonts.GlyphRenderer.isSticky()
  nameWithType: GlyphRenderer.isSticky()
- uid: fonts.GlyphRenderer.isSticky*
  name: isSticky
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_isSticky_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.isSticky
  nameWithType: GlyphRenderer.isSticky
  package: fonts
- uid: fonts.GlyphRenderer.setAlpha(float)
  name: setAlpha(float a)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setAlpha_float_
  fullName: fonts.GlyphRenderer.setAlpha(float a)
  nameWithType: GlyphRenderer.setAlpha(float a)
- uid: fonts.GlyphRenderer.setAlpha*
  name: setAlpha
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setAlpha_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.setAlpha
  nameWithType: GlyphRenderer.setAlpha
  package: fonts
- uid: fonts.GlyphRenderer.setClean()
  name: setClean()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setClean__
  fullName: fonts.GlyphRenderer.setClean()
  nameWithType: GlyphRenderer.setClean()
- uid: fonts.GlyphRenderer.setClean*
  name: setClean
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setClean_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.setClean
  nameWithType: GlyphRenderer.setClean
  package: fonts
- uid: fonts.GlyphRenderer.setColor(graphics.Color)
  name: setColor(Color color)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setColor_graphics_Color_
  fullName: fonts.GlyphRenderer.setColor(Color color)
  nameWithType: GlyphRenderer.setColor(Color color)
- uid: fonts.GlyphRenderer.setColor(org.joml.Vector4f)
  name: setColor(Vector4f color)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setColor_org_joml_Vector4f_
  fullName: fonts.GlyphRenderer.setColor(Vector4f color)
  nameWithType: GlyphRenderer.setColor(Vector4f color)
- uid: fonts.GlyphRenderer.setColor*
  name: setColor
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setColor_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.setColor
  nameWithType: GlyphRenderer.setColor
  package: fonts
- uid: fonts.GlyphRenderer.setDirty()
  name: setDirty()
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setDirty__
  fullName: fonts.GlyphRenderer.setDirty()
  nameWithType: GlyphRenderer.setDirty()
- uid: fonts.GlyphRenderer.setDirty*
  name: setDirty
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_setDirty_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.setDirty
  nameWithType: GlyphRenderer.setDirty
  package: fonts
- uid: fonts.GlyphRenderer.update(float)
  name: update(float dt)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_update_float_
  fullName: fonts.GlyphRenderer.update(float dt)
  nameWithType: GlyphRenderer.update(float dt)
- uid: fonts.GlyphRenderer.update*
  name: update
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_update_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.update
  nameWithType: GlyphRenderer.update
  package: fonts
- uid: fonts.GlyphRenderer.updatePosition(org.joml.Vector2f)
  name: updatePosition(Vector2f delta)
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_updatePosition_org_joml_Vector2f_
  fullName: fonts.GlyphRenderer.updatePosition(Vector2f delta)
  nameWithType: GlyphRenderer.updatePosition(Vector2f delta)
- uid: fonts.GlyphRenderer.updatePosition*
  name: updatePosition
  href: api/fonts.GlyphRenderer.html#fonts_GlyphRenderer_updatePosition_
  isSpec: "True"
  fullName: fonts.GlyphRenderer.updatePosition
  nameWithType: GlyphRenderer.updatePosition
  package: fonts
- uid: graphics
  name: graphics
  href: api/graphics.html
  fullName: graphics
  nameWithType: graphics
- uid: graphics.Camera
  name: Camera
  href: api/graphics.Camera.html
  fullName: graphics.Camera
  nameWithType: Camera
- uid: graphics.Camera.adjustProjection()
  name: adjustProjection()
  href: api/graphics.Camera.html#graphics_Camera_adjustProjection__
  fullName: graphics.Camera.adjustProjection()
  nameWithType: Camera.adjustProjection()
- uid: graphics.Camera.adjustProjection*
  name: adjustProjection
  href: api/graphics.Camera.html#graphics_Camera_adjustProjection_
  isSpec: "True"
  fullName: graphics.Camera.adjustProjection
  nameWithType: Camera.adjustProjection
  package: graphics
- uid: graphics.Camera.Camera()
  name: Camera()
  href: api/graphics.Camera.html#graphics_Camera_Camera__
  fullName: graphics.Camera.Camera()
  nameWithType: Camera.Camera()
- uid: graphics.Camera.Camera(org.joml.Vector2f)
  name: Camera(Vector2f position)
  href: api/graphics.Camera.html#graphics_Camera_Camera_org_joml_Vector2f_
  fullName: graphics.Camera.Camera(Vector2f position)
  nameWithType: Camera.Camera(Vector2f position)
- uid: graphics.Camera.Camera*
  name: Camera
  href: api/graphics.Camera.html#graphics_Camera_Camera_
  isSpec: "True"
  fullName: graphics.Camera.Camera
  nameWithType: Camera.Camera
  package: graphics
- uid: graphics.Camera.getPosition()
  name: getPosition()
  href: api/graphics.Camera.html#graphics_Camera_getPosition__
  fullName: graphics.Camera.getPosition()
  nameWithType: Camera.getPosition()
- uid: graphics.Camera.getPosition*
  name: getPosition
  href: api/graphics.Camera.html#graphics_Camera_getPosition_
  isSpec: "True"
  fullName: graphics.Camera.getPosition
  nameWithType: Camera.getPosition
  package: graphics
- uid: graphics.Camera.getProjectionMatrix()
  name: getProjectionMatrix()
  href: api/graphics.Camera.html#graphics_Camera_getProjectionMatrix__
  fullName: graphics.Camera.getProjectionMatrix()
  nameWithType: Camera.getProjectionMatrix()
- uid: graphics.Camera.getProjectionMatrix*
  name: getProjectionMatrix
  href: api/graphics.Camera.html#graphics_Camera_getProjectionMatrix_
  isSpec: "True"
  fullName: graphics.Camera.getProjectionMatrix
  nameWithType: Camera.getProjectionMatrix
  package: graphics
- uid: graphics.Camera.getViewMatrix()
  name: getViewMatrix()
  href: api/graphics.Camera.html#graphics_Camera_getViewMatrix__
  fullName: graphics.Camera.getViewMatrix()
  nameWithType: Camera.getViewMatrix()
- uid: graphics.Camera.getViewMatrix*
  name: getViewMatrix
  href: api/graphics.Camera.html#graphics_Camera_getViewMatrix_
  isSpec: "True"
  fullName: graphics.Camera.getViewMatrix
  nameWithType: Camera.getViewMatrix
  package: graphics
- uid: graphics.Camera.position
  name: position
  href: api/graphics.Camera.html#graphics_Camera_position
  fullName: graphics.Camera.position
  nameWithType: Camera.position
- uid: graphics.Camera.smoothFollow(org.joml.Vector2f)
  name: smoothFollow(Vector2f c)
  href: api/graphics.Camera.html#graphics_Camera_smoothFollow_org_joml_Vector2f_
  fullName: graphics.Camera.smoothFollow(Vector2f c)
  nameWithType: Camera.smoothFollow(Vector2f c)
- uid: graphics.Camera.smoothFollow*
  name: smoothFollow
  href: api/graphics.Camera.html#graphics_Camera_smoothFollow_
  isSpec: "True"
  fullName: graphics.Camera.smoothFollow
  nameWithType: Camera.smoothFollow
  package: graphics
- uid: graphics.Color
  name: Color
  href: api/graphics.Color.html
  fullName: graphics.Color
  nameWithType: Color
- uid: graphics.Color.a
  name: a
  href: api/graphics.Color.html#graphics_Color_a
  fullName: graphics.Color.a
  nameWithType: Color.a
- uid: graphics.Color.b
  name: b
  href: api/graphics.Color.html#graphics_Color_b
  fullName: graphics.Color.b
  nameWithType: Color.b
- uid: graphics.Color.BLACK
  name: BLACK
  href: api/graphics.Color.html#graphics_Color_BLACK
  fullName: graphics.Color.BLACK
  nameWithType: Color.BLACK
- uid: graphics.Color.BLUE
  name: BLUE
  href: api/graphics.Color.html#graphics_Color_BLUE
  fullName: graphics.Color.BLUE
  nameWithType: Color.BLUE
- uid: graphics.Color.BROWN
  name: BROWN
  href: api/graphics.Color.html#graphics_Color_BROWN
  fullName: graphics.Color.BROWN
  nameWithType: Color.BROWN
- uid: graphics.Color.Color(float)
  name: Color(float c)
  href: api/graphics.Color.html#graphics_Color_Color_float_
  fullName: graphics.Color.Color(float c)
  nameWithType: Color.Color(float c)
- uid: graphics.Color.Color(float,float,float)
  name: Color(float pr, float pg, float pb)
  href: api/graphics.Color.html#graphics_Color_Color_float_float_float_
  fullName: graphics.Color.Color(float pr, float pg, float pb)
  nameWithType: Color.Color(float pr, float pg, float pb)
- uid: graphics.Color.Color(float,float,float,float)
  name: Color(float pr, float pg, float pb, float pa)
  href: api/graphics.Color.html#graphics_Color_Color_float_float_float_float_
  fullName: graphics.Color.Color(float pr, float pg, float pb, float pa)
  nameWithType: Color.Color(float pr, float pg, float pb, float pa)
- uid: graphics.Color.Color*
  name: Color
  href: api/graphics.Color.html#graphics_Color_Color_
  isSpec: "True"
  fullName: graphics.Color.Color
  nameWithType: Color.Color
  package: graphics
- uid: graphics.Color.CRIMSON
  name: CRIMSON
  href: api/graphics.Color.html#graphics_Color_CRIMSON
  fullName: graphics.Color.CRIMSON
  nameWithType: Color.CRIMSON
- uid: graphics.Color.CYAN
  name: CYAN
  href: api/graphics.Color.html#graphics_Color_CYAN
  fullName: graphics.Color.CYAN
  nameWithType: Color.CYAN
- uid: graphics.Color.DARK_BLUE
  name: DARK_BLUE
  href: api/graphics.Color.html#graphics_Color_DARK_BLUE
  fullName: graphics.Color.DARK_BLUE
  nameWithType: Color.DARK_BLUE
- uid: graphics.Color.DARK_GREEN
  name: DARK_GREEN
  href: api/graphics.Color.html#graphics_Color_DARK_GREEN
  fullName: graphics.Color.DARK_GREEN
  nameWithType: Color.DARK_GREEN
- uid: graphics.Color.DARK_RED
  name: DARK_RED
  href: api/graphics.Color.html#graphics_Color_DARK_RED
  fullName: graphics.Color.DARK_RED
  nameWithType: Color.DARK_RED
- uid: graphics.Color.decode(java.lang.String)
  name: decode(String colorCode)
  href: api/graphics.Color.html#graphics_Color_decode_java_lang_String_
  fullName: graphics.Color.decode(String colorCode)
  nameWithType: Color.decode(String colorCode)
- uid: graphics.Color.decode*
  name: decode
  href: api/graphics.Color.html#graphics_Color_decode_
  isSpec: "True"
  fullName: graphics.Color.decode
  nameWithType: Color.decode
  package: graphics
- uid: graphics.Color.DIRTY_BLUE
  name: DIRTY_BLUE
  href: api/graphics.Color.html#graphics_Color_DIRTY_BLUE
  fullName: graphics.Color.DIRTY_BLUE
  nameWithType: Color.DIRTY_BLUE
- uid: graphics.Color.equals(java.lang.Object)
  name: equals(Object c)
  href: api/graphics.Color.html#graphics_Color_equals_java_lang_Object_
  fullName: graphics.Color.equals(Object c)
  nameWithType: Color.equals(Object c)
- uid: graphics.Color.equals*
  name: equals
  href: api/graphics.Color.html#graphics_Color_equals_
  isSpec: "True"
  fullName: graphics.Color.equals
  nameWithType: Color.equals
  package: graphics
- uid: graphics.Color.FIREBRICK
  name: FIREBRICK
  href: api/graphics.Color.html#graphics_Color_FIREBRICK
  fullName: graphics.Color.FIREBRICK
  nameWithType: Color.FIREBRICK
- uid: graphics.Color.fromNormalized()
  name: fromNormalized()
  href: api/graphics.Color.html#graphics_Color_fromNormalized__
  fullName: graphics.Color.fromNormalized()
  nameWithType: Color.fromNormalized()
- uid: graphics.Color.fromNormalized*
  name: fromNormalized
  href: api/graphics.Color.html#graphics_Color_fromNormalized_
  isSpec: "True"
  fullName: graphics.Color.fromNormalized
  nameWithType: Color.fromNormalized
  package: graphics
- uid: graphics.Color.g
  name: g
  href: api/graphics.Color.html#graphics_Color_g
  fullName: graphics.Color.g
  nameWithType: Color.g
- uid: graphics.Color.getColor(float,float,float,float,int)
  name: getColor(float x, float y, float z, float a, int inputType)
  href: api/graphics.Color.html#graphics_Color_getColor_float_float_float_float_int_
  fullName: graphics.Color.getColor(float x, float y, float z, float a, int inputType)
  nameWithType: Color.getColor(float x, float y, float z, float a, int inputType)
- uid: graphics.Color.getColor*
  name: getColor
  href: api/graphics.Color.html#graphics_Color_getColor_
  isSpec: "True"
  fullName: graphics.Color.getColor
  nameWithType: Color.getColor
  package: graphics
- uid: graphics.Color.GRAY
  name: GRAY
  href: api/graphics.Color.html#graphics_Color_GRAY
  fullName: graphics.Color.GRAY
  nameWithType: Color.GRAY
- uid: graphics.Color.GREEN
  name: GREEN
  href: api/graphics.Color.html#graphics_Color_GREEN
  fullName: graphics.Color.GREEN
  nameWithType: Color.GREEN
- uid: graphics.Color.MAROON
  name: MAROON
  href: api/graphics.Color.html#graphics_Color_MAROON
  fullName: graphics.Color.MAROON
  nameWithType: Color.MAROON
- uid: graphics.Color.NAVY_BLUE
  name: NAVY_BLUE
  href: api/graphics.Color.html#graphics_Color_NAVY_BLUE
  fullName: graphics.Color.NAVY_BLUE
  nameWithType: Color.NAVY_BLUE
- uid: graphics.Color.OLIVE
  name: OLIVE
  href: api/graphics.Color.html#graphics_Color_OLIVE
  fullName: graphics.Color.OLIVE
  nameWithType: Color.OLIVE
- uid: graphics.Color.PINK
  name: PINK
  href: api/graphics.Color.html#graphics_Color_PINK
  fullName: graphics.Color.PINK
  nameWithType: Color.PINK
- uid: graphics.Color.PURPLE
  name: PURPLE
  href: api/graphics.Color.html#graphics_Color_PURPLE
  fullName: graphics.Color.PURPLE
  nameWithType: Color.PURPLE
- uid: graphics.Color.r
  name: r
  href: api/graphics.Color.html#graphics_Color_r
  fullName: graphics.Color.r
  nameWithType: Color.r
- uid: graphics.Color.random
  name: random
  href: api/graphics.Color.html#graphics_Color_random
  fullName: graphics.Color.random
  nameWithType: Color.random
- uid: graphics.Color.randomColor()
  name: randomColor()
  href: api/graphics.Color.html#graphics_Color_randomColor__
  fullName: graphics.Color.randomColor()
  nameWithType: Color.randomColor()
- uid: graphics.Color.randomColor*
  name: randomColor
  href: api/graphics.Color.html#graphics_Color_randomColor_
  isSpec: "True"
  fullName: graphics.Color.randomColor
  nameWithType: Color.randomColor
  package: graphics
- uid: graphics.Color.RED
  name: RED
  href: api/graphics.Color.html#graphics_Color_RED
  fullName: graphics.Color.RED
  nameWithType: Color.RED
- uid: graphics.Color.setAlpha(float)
  name: setAlpha(float value)
  href: api/graphics.Color.html#graphics_Color_setAlpha_float_
  fullName: graphics.Color.setAlpha(float value)
  nameWithType: Color.setAlpha(float value)
- uid: graphics.Color.setAlpha*
  name: setAlpha
  href: api/graphics.Color.html#graphics_Color_setAlpha_
  isSpec: "True"
  fullName: graphics.Color.setAlpha
  nameWithType: Color.setAlpha
  package: graphics
- uid: graphics.Color.setValue(char,float)
  name: setValue(char type, float value)
  href: api/graphics.Color.html#graphics_Color_setValue_char_float_
  fullName: graphics.Color.setValue(char type, float value)
  nameWithType: Color.setValue(char type, float value)
- uid: graphics.Color.setValue*
  name: setValue
  href: api/graphics.Color.html#graphics_Color_setValue_
  isSpec: "True"
  fullName: graphics.Color.setValue
  nameWithType: Color.setValue
  package: graphics
- uid: graphics.Color.SILVER
  name: SILVER
  href: api/graphics.Color.html#graphics_Color_SILVER
  fullName: graphics.Color.SILVER
  nameWithType: Color.SILVER
- uid: graphics.Color.TEAL
  name: TEAL
  href: api/graphics.Color.html#graphics_Color_TEAL
  fullName: graphics.Color.TEAL
  nameWithType: Color.TEAL
- uid: graphics.Color.toHSLColor()
  name: toHSLColor()
  href: api/graphics.Color.html#graphics_Color_toHSLColor__
  fullName: graphics.Color.toHSLColor()
  nameWithType: Color.toHSLColor()
- uid: graphics.Color.toHSLColor*
  name: toHSLColor
  href: api/graphics.Color.html#graphics_Color_toHSLColor_
  isSpec: "True"
  fullName: graphics.Color.toHSLColor
  nameWithType: Color.toHSLColor
  package: graphics
- uid: graphics.Color.toNormalizedVec3f()
  name: toNormalizedVec3f()
  href: api/graphics.Color.html#graphics_Color_toNormalizedVec3f__
  fullName: graphics.Color.toNormalizedVec3f()
  nameWithType: Color.toNormalizedVec3f()
- uid: graphics.Color.toNormalizedVec3f*
  name: toNormalizedVec3f
  href: api/graphics.Color.html#graphics_Color_toNormalizedVec3f_
  isSpec: "True"
  fullName: graphics.Color.toNormalizedVec3f
  nameWithType: Color.toNormalizedVec3f
  package: graphics
- uid: graphics.Color.toNormalizedVec4f()
  name: toNormalizedVec4f()
  href: api/graphics.Color.html#graphics_Color_toNormalizedVec4f__
  fullName: graphics.Color.toNormalizedVec4f()
  nameWithType: Color.toNormalizedVec4f()
- uid: graphics.Color.toNormalizedVec4f*
  name: toNormalizedVec4f
  href: api/graphics.Color.html#graphics_Color_toNormalizedVec4f_
  isSpec: "True"
  fullName: graphics.Color.toNormalizedVec4f
  nameWithType: Color.toNormalizedVec4f
  package: graphics
- uid: graphics.Color.toVec4f()
  name: toVec4f()
  href: api/graphics.Color.html#graphics_Color_toVec4f__
  fullName: graphics.Color.toVec4f()
  nameWithType: Color.toVec4f()
- uid: graphics.Color.toVec4f*
  name: toVec4f
  href: api/graphics.Color.html#graphics_Color_toVec4f_
  isSpec: "True"
  fullName: graphics.Color.toVec4f
  nameWithType: Color.toVec4f
  package: graphics
- uid: graphics.Color.TYPE_HSLA
  name: TYPE_HSLA
  href: api/graphics.Color.html#graphics_Color_TYPE_HSLA
  fullName: graphics.Color.TYPE_HSLA
  nameWithType: Color.TYPE_HSLA
- uid: graphics.Color.TYPE_RGBA
  name: TYPE_RGBA
  href: api/graphics.Color.html#graphics_Color_TYPE_RGBA
  fullName: graphics.Color.TYPE_RGBA
  nameWithType: Color.TYPE_RGBA
- uid: graphics.Color.WHITE
  name: WHITE
  href: api/graphics.Color.html#graphics_Color_WHITE
  fullName: graphics.Color.WHITE
  nameWithType: Color.WHITE
- uid: graphics.Color.YELLOW
  name: YELLOW
  href: api/graphics.Color.html#graphics_Color_YELLOW
  fullName: graphics.Color.YELLOW
  nameWithType: Color.YELLOW
- uid: graphics.Framebuffer
  name: Framebuffer
  href: api/graphics.Framebuffer.html
  fullName: graphics.Framebuffer
  nameWithType: Framebuffer
- uid: graphics.Framebuffer.bind()
  name: bind()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_bind__
  fullName: graphics.Framebuffer.bind()
  nameWithType: Framebuffer.bind()
- uid: graphics.Framebuffer.bind*
  name: bind
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_bind_
  isSpec: "True"
  fullName: graphics.Framebuffer.bind
  nameWithType: Framebuffer.bind
  package: graphics
- uid: graphics.Framebuffer.blitColorBuffersToScreen()
  name: blitColorBuffersToScreen()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_blitColorBuffersToScreen__
  fullName: graphics.Framebuffer.blitColorBuffersToScreen()
  nameWithType: Framebuffer.blitColorBuffersToScreen()
- uid: graphics.Framebuffer.blitColorBuffersToScreen*
  name: blitColorBuffersToScreen
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_blitColorBuffersToScreen_
  isSpec: "True"
  fullName: graphics.Framebuffer.blitColorBuffersToScreen
  nameWithType: Framebuffer.blitColorBuffersToScreen
  package: graphics
- uid: graphics.Framebuffer.blitEntireFboToScreen()
  name: blitEntireFboToScreen()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_blitEntireFboToScreen__
  fullName: graphics.Framebuffer.blitEntireFboToScreen()
  nameWithType: Framebuffer.blitEntireFboToScreen()
- uid: graphics.Framebuffer.blitEntireFboToScreen*
  name: blitEntireFboToScreen
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_blitEntireFboToScreen_
  isSpec: "True"
  fullName: graphics.Framebuffer.blitEntireFboToScreen
  nameWithType: Framebuffer.blitEntireFboToScreen
  package: graphics
- uid: graphics.Framebuffer.clean()
  name: clean()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_clean__
  fullName: graphics.Framebuffer.clean()
  nameWithType: Framebuffer.clean()
- uid: graphics.Framebuffer.clean*
  name: clean
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_clean_
  isSpec: "True"
  fullName: graphics.Framebuffer.clean
  nameWithType: Framebuffer.clean
  package: graphics
- uid: graphics.Framebuffer.createDefault()
  name: createDefault()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_createDefault__
  fullName: graphics.Framebuffer.createDefault()
  nameWithType: Framebuffer.createDefault()
- uid: graphics.Framebuffer.createDefault*
  name: createDefault
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_createDefault_
  isSpec: "True"
  fullName: graphics.Framebuffer.createDefault
  nameWithType: Framebuffer.createDefault
  package: graphics
- uid: graphics.Framebuffer.createHalfResWithColorAttachment()
  name: createHalfResWithColorAttachment()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_createHalfResWithColorAttachment__
  fullName: graphics.Framebuffer.createHalfResWithColorAttachment()
  nameWithType: Framebuffer.createHalfResWithColorAttachment()
- uid: graphics.Framebuffer.createHalfResWithColorAttachment*
  name: createHalfResWithColorAttachment
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_createHalfResWithColorAttachment_
  isSpec: "True"
  fullName: graphics.Framebuffer.createHalfResWithColorAttachment
  nameWithType: Framebuffer.createHalfResWithColorAttachment
  package: graphics
- uid: graphics.Framebuffer.createWithColorAttachment()
  name: createWithColorAttachment()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_createWithColorAttachment__
  fullName: graphics.Framebuffer.createWithColorAttachment()
  nameWithType: Framebuffer.createWithColorAttachment()
- uid: graphics.Framebuffer.createWithColorAttachment*
  name: createWithColorAttachment
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_createWithColorAttachment_
  isSpec: "True"
  fullName: graphics.Framebuffer.createWithColorAttachment
  nameWithType: Framebuffer.createWithColorAttachment
  package: graphics
- uid: graphics.Framebuffer.delete()
  name: delete()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_delete__
  fullName: graphics.Framebuffer.delete()
  nameWithType: Framebuffer.delete()
- uid: graphics.Framebuffer.delete*
  name: delete
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_delete_
  isSpec: "True"
  fullName: graphics.Framebuffer.delete
  nameWithType: Framebuffer.delete
  package: graphics
- uid: graphics.Framebuffer.Framebuffer(int)
  name: Framebuffer(int id)
  href: api/graphics.Framebuffer.html
  fullName: graphics.Framebuffer.Framebuffer(int id)
  nameWithType: Framebuffer.Framebuffer(int id)
- uid: graphics.Framebuffer.Framebuffer(int,int,util.specs.FramebufferSpec)
  name: Framebuffer(int width, int height, FramebufferSpec spec)
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_Framebuffer_int_int_util_specs_FramebufferSpec_
  fullName: graphics.Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec)
  nameWithType: Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec)
- uid: graphics.Framebuffer.Framebuffer(int,int,util.specs.FramebufferSpec,boolean,boolean)
  name: Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)
  href: api/graphics.Framebuffer.html
  fullName: graphics.Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)
  nameWithType: Framebuffer.Framebuffer(int width, int height, FramebufferSpec spec, boolean isScreenSize, boolean isHalfSize)
- uid: graphics.Framebuffer.Framebuffer*
  name: Framebuffer
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_Framebuffer_
  isSpec: "True"
  fullName: graphics.Framebuffer.Framebuffer
  nameWithType: Framebuffer.Framebuffer
  package: graphics
- uid: graphics.Framebuffer.getColorAttachment(int)
  name: getColorAttachment(int i)
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getColorAttachment_int_
  fullName: graphics.Framebuffer.getColorAttachment(int i)
  nameWithType: Framebuffer.getColorAttachment(int i)
- uid: graphics.Framebuffer.getColorAttachment*
  name: getColorAttachment
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getColorAttachment_
  isSpec: "True"
  fullName: graphics.Framebuffer.getColorAttachment
  nameWithType: Framebuffer.getColorAttachment
  package: graphics
- uid: graphics.Framebuffer.getDepthAttachment()
  name: getDepthAttachment()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getDepthAttachment__
  fullName: graphics.Framebuffer.getDepthAttachment()
  nameWithType: Framebuffer.getDepthAttachment()
- uid: graphics.Framebuffer.getDepthAttachment*
  name: getDepthAttachment
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getDepthAttachment_
  isSpec: "True"
  fullName: graphics.Framebuffer.getDepthAttachment
  nameWithType: Framebuffer.getDepthAttachment
  package: graphics
- uid: graphics.Framebuffer.getHeight()
  name: getHeight()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getHeight__
  fullName: graphics.Framebuffer.getHeight()
  nameWithType: Framebuffer.getHeight()
- uid: graphics.Framebuffer.getHeight*
  name: getHeight
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getHeight_
  isSpec: "True"
  fullName: graphics.Framebuffer.getHeight
  nameWithType: Framebuffer.getHeight
  package: graphics
- uid: graphics.Framebuffer.getWidth()
  name: getWidth()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getWidth__
  fullName: graphics.Framebuffer.getWidth()
  nameWithType: Framebuffer.getWidth()
- uid: graphics.Framebuffer.getWidth*
  name: getWidth
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_getWidth_
  isSpec: "True"
  fullName: graphics.Framebuffer.getWidth
  nameWithType: Framebuffer.getWidth
  package: graphics
- uid: graphics.Framebuffer.isDefault()
  name: isDefault()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_isDefault__
  fullName: graphics.Framebuffer.isDefault()
  nameWithType: Framebuffer.isDefault()
- uid: graphics.Framebuffer.isDefault*
  name: isDefault
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_isDefault_
  isSpec: "True"
  fullName: graphics.Framebuffer.isDefault
  nameWithType: Framebuffer.isDefault
  package: graphics
- uid: graphics.Framebuffer.resize(int,int)
  name: resize(int width, int height)
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_resize_int_int_
  fullName: graphics.Framebuffer.resize(int width, int height)
  nameWithType: Framebuffer.resize(int width, int height)
- uid: graphics.Framebuffer.resize*
  name: resize
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_resize_
  isSpec: "True"
  fullName: graphics.Framebuffer.resize
  nameWithType: Framebuffer.resize
  package: graphics
- uid: graphics.Framebuffer.resizeAll(event.EventData.WindowResizeEventData)
  name: resizeAll(EventData.WindowResizeEventData data)
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_resizeAll_event_EventData_WindowResizeEventData_
  fullName: graphics.Framebuffer.resizeAll(EventData.WindowResizeEventData data)
  nameWithType: Framebuffer.resizeAll(EventData.WindowResizeEventData data)
- uid: graphics.Framebuffer.resizeAll*
  name: resizeAll
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_resizeAll_
  isSpec: "True"
  fullName: graphics.Framebuffer.resizeAll
  nameWithType: Framebuffer.resizeAll
  package: graphics
- uid: graphics.Framebuffer.unbind()
  name: unbind()
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_unbind__
  fullName: graphics.Framebuffer.unbind()
  nameWithType: Framebuffer.unbind()
- uid: graphics.Framebuffer.unbind*
  name: unbind
  href: api/graphics.Framebuffer.html#graphics_Framebuffer_unbind_
  isSpec: "True"
  fullName: graphics.Framebuffer.unbind
  nameWithType: Framebuffer.unbind
  package: graphics
- uid: graphics.Graphics
  name: Graphics
  href: api/graphics.Graphics.html
  fullName: graphics.Graphics
  nameWithType: Graphics
- uid: graphics.Graphics.background(float)
  name: background(float rgb)
  href: api/graphics.Graphics.html#graphics_Graphics_background_float_
  fullName: graphics.Graphics.background(float rgb)
  nameWithType: Graphics.background(float rgb)
- uid: graphics.Graphics.background(float,float,float)
  name: background(float r, float g, float b)
  href: api/graphics.Graphics.html#graphics_Graphics_background_float_float_float_
  fullName: graphics.Graphics.background(float r, float g, float b)
  nameWithType: Graphics.background(float r, float g, float b)
- uid: graphics.Graphics.background(graphics.Color)
  name: background(Color color)
  href: api/graphics.Graphics.html#graphics_Graphics_background_graphics_Color_
  fullName: graphics.Graphics.background(Color color)
  nameWithType: Graphics.background(Color color)
- uid: graphics.Graphics.background*
  name: background
  href: api/graphics.Graphics.html#graphics_Graphics_background_
  isSpec: "True"
  fullName: graphics.Graphics.background
  nameWithType: Graphics.background
  package: graphics
- uid: graphics.Graphics.defaultBackground
  name: defaultBackground
  href: api/graphics.Graphics.html#graphics_Graphics_defaultBackground
  fullName: graphics.Graphics.defaultBackground
  nameWithType: Graphics.defaultBackground
- uid: graphics.Graphics.Graphics()
  name: Graphics()
  href: api/graphics.Graphics.html#graphics_Graphics_Graphics__
  fullName: graphics.Graphics.Graphics()
  nameWithType: Graphics.Graphics()
- uid: graphics.Graphics.Graphics*
  name: Graphics
  href: api/graphics.Graphics.html#graphics_Graphics_Graphics_
  isSpec: "True"
  fullName: graphics.Graphics.Graphics
  nameWithType: Graphics.Graphics
  package: graphics
- uid: graphics.Graphics.setDefaultBackground(float)
  name: setDefaultBackground(float rgb)
  href: api/graphics.Graphics.html#graphics_Graphics_setDefaultBackground_float_
  fullName: graphics.Graphics.setDefaultBackground(float rgb)
  nameWithType: Graphics.setDefaultBackground(float rgb)
- uid: graphics.Graphics.setDefaultBackground(float,float,float)
  name: setDefaultBackground(float r, float g, float b)
  href: api/graphics.Graphics.html#graphics_Graphics_setDefaultBackground_float_float_float_
  fullName: graphics.Graphics.setDefaultBackground(float r, float g, float b)
  nameWithType: Graphics.setDefaultBackground(float r, float g, float b)
- uid: graphics.Graphics.setDefaultBackground(graphics.Color)
  name: setDefaultBackground(Color color)
  href: api/graphics.Graphics.html#graphics_Graphics_setDefaultBackground_graphics_Color_
  fullName: graphics.Graphics.setDefaultBackground(Color color)
  nameWithType: Graphics.setDefaultBackground(Color color)
- uid: graphics.Graphics.setDefaultBackground*
  name: setDefaultBackground
  href: api/graphics.Graphics.html#graphics_Graphics_setDefaultBackground_
  isSpec: "True"
  fullName: graphics.Graphics.setDefaultBackground
  nameWithType: Graphics.setDefaultBackground
  package: graphics
- uid: graphics.HSLColor
  name: HSLColor
  href: api/graphics.HSLColor.html
  fullName: graphics.HSLColor
  nameWithType: HSLColor
- uid: graphics.HSLColor.ALPHA
  name: ALPHA
  href: api/graphics.HSLColor.html#graphics_HSLColor_ALPHA
  fullName: graphics.HSLColor.ALPHA
  nameWithType: HSLColor.ALPHA
- uid: graphics.HSLColor.equals(java.lang.Object)
  name: equals(Object o)
  href: api/graphics.HSLColor.html#graphics_HSLColor_equals_java_lang_Object_
  fullName: graphics.HSLColor.equals(Object o)
  nameWithType: HSLColor.equals(Object o)
- uid: graphics.HSLColor.equals*
  name: equals
  href: api/graphics.HSLColor.html#graphics_HSLColor_equals_
  isSpec: "True"
  fullName: graphics.HSLColor.equals
  nameWithType: HSLColor.equals
  package: graphics
- uid: graphics.HSLColor.get(int)
  name: get(int component)
  href: api/graphics.HSLColor.html#graphics_HSLColor_get_int_
  fullName: graphics.HSLColor.get(int component)
  nameWithType: HSLColor.get(int component)
- uid: graphics.HSLColor.get*
  name: get
  href: api/graphics.HSLColor.html#graphics_HSLColor_get_
  isSpec: "True"
  fullName: graphics.HSLColor.get
  nameWithType: HSLColor.get
  package: graphics
- uid: graphics.HSLColor.getHSLColor(float,float,float,float,int)
  name: getHSLColor(float x, float y, float z, float a, int inputType)
  href: api/graphics.HSLColor.html#graphics_HSLColor_getHSLColor_float_float_float_float_int_
  fullName: graphics.HSLColor.getHSLColor(float x, float y, float z, float a, int inputType)
  nameWithType: HSLColor.getHSLColor(float x, float y, float z, float a, int inputType)
- uid: graphics.HSLColor.getHSLColor*
  name: getHSLColor
  href: api/graphics.HSLColor.html#graphics_HSLColor_getHSLColor_
  isSpec: "True"
  fullName: graphics.HSLColor.getHSLColor
  nameWithType: HSLColor.getHSLColor
  package: graphics
- uid: graphics.HSLColor.hashCode()
  name: hashCode()
  href: api/graphics.HSLColor.html#graphics_HSLColor_hashCode__
  fullName: graphics.HSLColor.hashCode()
  nameWithType: HSLColor.hashCode()
- uid: graphics.HSLColor.hashCode*
  name: hashCode
  href: api/graphics.HSLColor.html#graphics_HSLColor_hashCode_
  isSpec: "True"
  fullName: graphics.HSLColor.hashCode
  nameWithType: HSLColor.hashCode
  package: graphics
- uid: graphics.HSLColor.HSLColor(float,float,float,float)
  name: HSLColor(float h, float s, float l, float a)
  href: api/graphics.HSLColor.html#graphics_HSLColor_HSLColor_float_float_float_float_
  fullName: graphics.HSLColor.HSLColor(float h, float s, float l, float a)
  nameWithType: HSLColor.HSLColor(float h, float s, float l, float a)
- uid: graphics.HSLColor.HSLColor*
  name: HSLColor
  href: api/graphics.HSLColor.html#graphics_HSLColor_HSLColor_
  isSpec: "True"
  fullName: graphics.HSLColor.HSLColor
  nameWithType: HSLColor.HSLColor
  package: graphics
- uid: graphics.HSLColor.HUE
  name: HUE
  href: api/graphics.HSLColor.html#graphics_HSLColor_HUE
  fullName: graphics.HSLColor.HUE
  nameWithType: HSLColor.HUE
- uid: graphics.HSLColor.LUMINANCE
  name: LUMINANCE
  href: api/graphics.HSLColor.html#graphics_HSLColor_LUMINANCE
  fullName: graphics.HSLColor.LUMINANCE
  nameWithType: HSLColor.LUMINANCE
- uid: graphics.HSLColor.SATURATION
  name: SATURATION
  href: api/graphics.HSLColor.html#graphics_HSLColor_SATURATION
  fullName: graphics.HSLColor.SATURATION
  nameWithType: HSLColor.SATURATION
- uid: graphics.HSLColor.set(int,float)
  name: set(int component, float newValue)
  href: api/graphics.HSLColor.html#graphics_HSLColor_set_int_float_
  fullName: graphics.HSLColor.set(int component, float newValue)
  nameWithType: HSLColor.set(int component, float newValue)
- uid: graphics.HSLColor.set*
  name: set
  href: api/graphics.HSLColor.html#graphics_HSLColor_set_
  isSpec: "True"
  fullName: graphics.HSLColor.set
  nameWithType: HSLColor.set
  package: graphics
- uid: graphics.HSLColor.toHSLA(float[])
  name: toHSLA(float[] rgba)
  href: api/graphics.HSLColor.html#graphics_HSLColor_toHSLA_float___
  fullName: graphics.HSLColor.toHSLA(float[] rgba)
  nameWithType: HSLColor.toHSLA(float[] rgba)
- uid: graphics.HSLColor.toHSLA*
  name: toHSLA
  href: api/graphics.HSLColor.html#graphics_HSLColor_toHSLA_
  isSpec: "True"
  fullName: graphics.HSLColor.toHSLA
  nameWithType: HSLColor.toHSLA
  package: graphics
- uid: graphics.HSLColor.toHSLAVector()
  name: toHSLAVector()
  href: api/graphics.HSLColor.html#graphics_HSLColor_toHSLAVector__
  fullName: graphics.HSLColor.toHSLAVector()
  nameWithType: HSLColor.toHSLAVector()
- uid: graphics.HSLColor.toHSLAVector*
  name: toHSLAVector
  href: api/graphics.HSLColor.html#graphics_HSLColor_toHSLAVector_
  isSpec: "True"
  fullName: graphics.HSLColor.toHSLAVector
  nameWithType: HSLColor.toHSLAVector
  package: graphics
- uid: graphics.HSLColor.toHSLVector()
  name: toHSLVector()
  href: api/graphics.HSLColor.html#graphics_HSLColor_toHSLVector__
  fullName: graphics.HSLColor.toHSLVector()
  nameWithType: HSLColor.toHSLVector()
- uid: graphics.HSLColor.toHSLVector*
  name: toHSLVector
  href: api/graphics.HSLColor.html#graphics_HSLColor_toHSLVector_
  isSpec: "True"
  fullName: graphics.HSLColor.toHSLVector
  nameWithType: HSLColor.toHSLVector
  package: graphics
- uid: graphics.HSLColor.toNormalizedRGBColor()
  name: toNormalizedRGBColor()
  href: api/graphics.HSLColor.html#graphics_HSLColor_toNormalizedRGBColor__
  fullName: graphics.HSLColor.toNormalizedRGBColor()
  nameWithType: HSLColor.toNormalizedRGBColor()
- uid: graphics.HSLColor.toNormalizedRGBColor*
  name: toNormalizedRGBColor
  href: api/graphics.HSLColor.html#graphics_HSLColor_toNormalizedRGBColor_
  isSpec: "True"
  fullName: graphics.HSLColor.toNormalizedRGBColor
  nameWithType: HSLColor.toNormalizedRGBColor
  package: graphics
- uid: graphics.HSLColor.toRGBA(float[])
  name: toRGBA(float[] hsla)
  href: api/graphics.HSLColor.html#graphics_HSLColor_toRGBA_float___
  fullName: graphics.HSLColor.toRGBA(float[] hsla)
  nameWithType: HSLColor.toRGBA(float[] hsla)
- uid: graphics.HSLColor.toRGBA*
  name: toRGBA
  href: api/graphics.HSLColor.html#graphics_HSLColor_toRGBA_
  isSpec: "True"
  fullName: graphics.HSLColor.toRGBA
  nameWithType: HSLColor.toRGBA
  package: graphics
- uid: graphics.HSLColor.toRGBColor()
  name: toRGBColor()
  href: api/graphics.HSLColor.html#graphics_HSLColor_toRGBColor__
  fullName: graphics.HSLColor.toRGBColor()
  nameWithType: HSLColor.toRGBColor()
- uid: graphics.HSLColor.toRGBColor*
  name: toRGBColor
  href: api/graphics.HSLColor.html#graphics_HSLColor_toRGBColor_
  isSpec: "True"
  fullName: graphics.HSLColor.toRGBColor
  nameWithType: HSLColor.toRGBColor
  package: graphics
- uid: graphics.Primitive
  name: Primitive
  href: api/graphics.Primitive.html
  fullName: graphics.Primitive
  nameWithType: Primitive
- uid: graphics.Primitive.elementCount
  name: elementCount
  href: api/graphics.Primitive.html#graphics_Primitive_elementCount
  fullName: graphics.Primitive.elementCount
  nameWithType: Primitive.elementCount
- uid: graphics.Primitive.elementCreation
  name: elementCreation
  href: api/graphics.Primitive.html#graphics_Primitive_elementCreation
  fullName: graphics.Primitive.elementCreation
  nameWithType: Primitive.elementCreation
- uid: graphics.Primitive.LINE
  name: LINE
  href: api/graphics.Primitive.html#graphics_Primitive_LINE
  fullName: graphics.Primitive.LINE
  nameWithType: Primitive.LINE
- uid: graphics.Primitive.openglPrimitive
  name: openglPrimitive
  href: api/graphics.Primitive.html#graphics_Primitive_openglPrimitive
  fullName: graphics.Primitive.openglPrimitive
  nameWithType: Primitive.openglPrimitive
- uid: graphics.Primitive.Primitive(int,int,int,java.util.function.BiConsumer<java.nio.IntBuffer,java.lang.Integer>)
  name: Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)
  href: api/graphics.Primitive.html
  fullName: graphics.Primitive.Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)
  nameWithType: Primitive.Primitive(int vertexCount, int elementCount, int openglPrimitive, BiConsumer<IntBuffer,Integer> elementCreation)
- uid: graphics.Primitive.Primitive*
  name: Primitive
  href: api/graphics.Primitive.html
  isSpec: "True"
  fullName: graphics.Primitive.Primitive
  nameWithType: Primitive.Primitive
  package: graphics
- uid: graphics.Primitive.QUAD
  name: QUAD
  href: api/graphics.Primitive.html#graphics_Primitive_QUAD
  fullName: graphics.Primitive.QUAD
  nameWithType: Primitive.QUAD
- uid: graphics.Primitive.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/graphics.Primitive.html#graphics_Primitive_valueOf_java_lang_String_
  fullName: graphics.Primitive.valueOf(String name)
  nameWithType: Primitive.valueOf(String name)
- uid: graphics.Primitive.valueOf*
  name: valueOf
  href: api/graphics.Primitive.html#graphics_Primitive_valueOf_
  isSpec: "True"
  fullName: graphics.Primitive.valueOf
  nameWithType: Primitive.valueOf
  package: graphics
- uid: graphics.Primitive.values()
  name: values()
  href: api/graphics.Primitive.html#graphics_Primitive_values__
  fullName: graphics.Primitive.values()
  nameWithType: Primitive.values()
- uid: graphics.Primitive.values*
  name: values
  href: api/graphics.Primitive.html#graphics_Primitive_values_
  isSpec: "True"
  fullName: graphics.Primitive.values
  nameWithType: Primitive.values
  package: graphics
- uid: graphics.Primitive.vertexCount
  name: vertexCount
  href: api/graphics.Primitive.html#graphics_Primitive_vertexCount
  fullName: graphics.Primitive.vertexCount
  nameWithType: Primitive.vertexCount
- uid: graphics.renderer
  name: graphics.renderer
  href: api/graphics.renderer.html
  fullName: graphics.renderer
  nameWithType: graphics.renderer
- uid: graphics.renderer.DebugRenderer
  name: DebugRenderer
  href: api/graphics.renderer.DebugRenderer.html
  fullName: graphics.renderer.DebugRenderer
  nameWithType: DebugRenderer
- uid: graphics.renderer.DebugRenderer.add(ecs.GameObject)
  name: add(GameObject gameObject)
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_add_ecs_GameObject_
  fullName: graphics.renderer.DebugRenderer.add(GameObject gameObject)
  nameWithType: DebugRenderer.add(GameObject gameObject)
- uid: graphics.renderer.DebugRenderer.add*
  name: add
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_add_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.add
  nameWithType: DebugRenderer.add
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.createBatch(int)
  name: createBatch(int zIndex)
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_createBatch_int_
  fullName: graphics.renderer.DebugRenderer.createBatch(int zIndex)
  nameWithType: DebugRenderer.createBatch(int zIndex)
- uid: graphics.renderer.DebugRenderer.createBatch*
  name: createBatch
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_createBatch_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.createBatch
  nameWithType: DebugRenderer.createBatch
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.createFramebuffer()
  name: createFramebuffer()
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_createFramebuffer__
  fullName: graphics.renderer.DebugRenderer.createFramebuffer()
  nameWithType: DebugRenderer.createFramebuffer()
- uid: graphics.renderer.DebugRenderer.createFramebuffer*
  name: createFramebuffer
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_createFramebuffer_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.createFramebuffer
  nameWithType: DebugRenderer.createFramebuffer
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.createShader()
  name: createShader()
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_createShader__
  fullName: graphics.renderer.DebugRenderer.createShader()
  nameWithType: DebugRenderer.createShader()
- uid: graphics.renderer.DebugRenderer.createShader*
  name: createShader
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_createShader_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.createShader
  nameWithType: DebugRenderer.createShader
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.DebugRenderer()
  name: DebugRenderer()
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_DebugRenderer__
  fullName: graphics.renderer.DebugRenderer.DebugRenderer()
  nameWithType: DebugRenderer.DebugRenderer()
- uid: graphics.renderer.DebugRenderer.DebugRenderer*
  name: DebugRenderer
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_DebugRenderer_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.DebugRenderer
  nameWithType: DebugRenderer.DebugRenderer
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.prepare()
  name: prepare()
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_prepare__
  fullName: graphics.renderer.DebugRenderer.prepare()
  nameWithType: DebugRenderer.prepare()
- uid: graphics.renderer.DebugRenderer.prepare*
  name: prepare
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_prepare_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.prepare
  nameWithType: DebugRenderer.prepare
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.rebuffer()
  name: rebuffer()
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_rebuffer__
  fullName: graphics.renderer.DebugRenderer.rebuffer()
  nameWithType: DebugRenderer.rebuffer()
- uid: graphics.renderer.DebugRenderer.rebuffer*
  name: rebuffer
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_rebuffer_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.rebuffer
  nameWithType: DebugRenderer.rebuffer
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.remove(ecs.GameObject)
  name: remove(GameObject gameObject)
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_remove_ecs_GameObject_
  fullName: graphics.renderer.DebugRenderer.remove(GameObject gameObject)
  nameWithType: DebugRenderer.remove(GameObject gameObject)
- uid: graphics.renderer.DebugRenderer.remove*
  name: remove
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_remove_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.remove
  nameWithType: DebugRenderer.remove
  package: graphics.renderer
- uid: graphics.renderer.DebugRenderer.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_uploadUniforms_graphics_Shader_
  fullName: graphics.renderer.DebugRenderer.uploadUniforms(Shader shader)
  nameWithType: DebugRenderer.uploadUniforms(Shader shader)
- uid: graphics.renderer.DebugRenderer.uploadUniforms*
  name: uploadUniforms
  href: api/graphics.renderer.DebugRenderer.html#graphics_renderer_DebugRenderer_uploadUniforms_
  isSpec: "True"
  fullName: graphics.renderer.DebugRenderer.uploadUniforms
  nameWithType: DebugRenderer.uploadUniforms
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer
  name: DefaultRenderer
  href: api/graphics.renderer.DefaultRenderer.html
  fullName: graphics.renderer.DefaultRenderer
  nameWithType: DefaultRenderer
- uid: graphics.renderer.DefaultRenderer.add(ecs.GameObject)
  name: add(GameObject gameObject)
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_add_ecs_GameObject_
  fullName: graphics.renderer.DefaultRenderer.add(GameObject gameObject)
  nameWithType: DefaultRenderer.add(GameObject gameObject)
- uid: graphics.renderer.DefaultRenderer.add*
  name: add
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_add_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.add
  nameWithType: DefaultRenderer.add
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.createBatch(int)
  name: createBatch(int zIndex)
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_createBatch_int_
  fullName: graphics.renderer.DefaultRenderer.createBatch(int zIndex)
  nameWithType: DefaultRenderer.createBatch(int zIndex)
- uid: graphics.renderer.DefaultRenderer.createBatch*
  name: createBatch
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_createBatch_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.createBatch
  nameWithType: DefaultRenderer.createBatch
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.createFramebuffer()
  name: createFramebuffer()
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_createFramebuffer__
  fullName: graphics.renderer.DefaultRenderer.createFramebuffer()
  nameWithType: DefaultRenderer.createFramebuffer()
- uid: graphics.renderer.DefaultRenderer.createFramebuffer*
  name: createFramebuffer
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_createFramebuffer_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.createFramebuffer
  nameWithType: DefaultRenderer.createFramebuffer
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.createShader()
  name: createShader()
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_createShader__
  fullName: graphics.renderer.DefaultRenderer.createShader()
  nameWithType: DefaultRenderer.createShader()
- uid: graphics.renderer.DefaultRenderer.createShader*
  name: createShader
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_createShader_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.createShader
  nameWithType: DefaultRenderer.createShader
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.DefaultRenderer()
  name: DefaultRenderer()
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_DefaultRenderer__
  fullName: graphics.renderer.DefaultRenderer.DefaultRenderer()
  nameWithType: DefaultRenderer.DefaultRenderer()
- uid: graphics.renderer.DefaultRenderer.DefaultRenderer*
  name: DefaultRenderer
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_DefaultRenderer_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.DefaultRenderer
  nameWithType: DefaultRenderer.DefaultRenderer
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.prepare()
  name: prepare()
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_prepare__
  fullName: graphics.renderer.DefaultRenderer.prepare()
  nameWithType: DefaultRenderer.prepare()
- uid: graphics.renderer.DefaultRenderer.prepare*
  name: prepare
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_prepare_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.prepare
  nameWithType: DefaultRenderer.prepare
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.rebuffer()
  name: rebuffer()
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_rebuffer__
  fullName: graphics.renderer.DefaultRenderer.rebuffer()
  nameWithType: DefaultRenderer.rebuffer()
- uid: graphics.renderer.DefaultRenderer.rebuffer*
  name: rebuffer
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_rebuffer_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.rebuffer
  nameWithType: DefaultRenderer.rebuffer
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.remove(ecs.GameObject)
  name: remove(GameObject gameObject)
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_remove_ecs_GameObject_
  fullName: graphics.renderer.DefaultRenderer.remove(GameObject gameObject)
  nameWithType: DefaultRenderer.remove(GameObject gameObject)
- uid: graphics.renderer.DefaultRenderer.remove*
  name: remove
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_remove_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.remove
  nameWithType: DefaultRenderer.remove
  package: graphics.renderer
- uid: graphics.renderer.DefaultRenderer.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_uploadUniforms_graphics_Shader_
  fullName: graphics.renderer.DefaultRenderer.uploadUniforms(Shader shader)
  nameWithType: DefaultRenderer.uploadUniforms(Shader shader)
- uid: graphics.renderer.DefaultRenderer.uploadUniforms*
  name: uploadUniforms
  href: api/graphics.renderer.DefaultRenderer.html#graphics_renderer_DefaultRenderer_uploadUniforms_
  isSpec: "True"
  fullName: graphics.renderer.DefaultRenderer.uploadUniforms
  nameWithType: DefaultRenderer.uploadUniforms
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer
  name: LightmapRenderer
  href: api/graphics.renderer.LightmapRenderer.html
  fullName: graphics.renderer.LightmapRenderer
  nameWithType: LightmapRenderer
- uid: graphics.renderer.LightmapRenderer.add(ecs.GameObject)
  name: add(GameObject gameObject)
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_add_ecs_GameObject_
  fullName: graphics.renderer.LightmapRenderer.add(GameObject gameObject)
  nameWithType: LightmapRenderer.add(GameObject gameObject)
- uid: graphics.renderer.LightmapRenderer.add*
  name: add
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_add_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.add
  nameWithType: LightmapRenderer.add
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.bindLightmap()
  name: bindLightmap()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_bindLightmap__
  fullName: graphics.renderer.LightmapRenderer.bindLightmap()
  nameWithType: LightmapRenderer.bindLightmap()
- uid: graphics.renderer.LightmapRenderer.bindLightmap*
  name: bindLightmap
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_bindLightmap_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.bindLightmap
  nameWithType: LightmapRenderer.bindLightmap
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.createBatch(int)
  name: createBatch(int zIndex)
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_createBatch_int_
  fullName: graphics.renderer.LightmapRenderer.createBatch(int zIndex)
  nameWithType: LightmapRenderer.createBatch(int zIndex)
- uid: graphics.renderer.LightmapRenderer.createBatch*
  name: createBatch
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_createBatch_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.createBatch
  nameWithType: LightmapRenderer.createBatch
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.createFramebuffer()
  name: createFramebuffer()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_createFramebuffer__
  fullName: graphics.renderer.LightmapRenderer.createFramebuffer()
  nameWithType: LightmapRenderer.createFramebuffer()
- uid: graphics.renderer.LightmapRenderer.createFramebuffer*
  name: createFramebuffer
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_createFramebuffer_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.createFramebuffer
  nameWithType: LightmapRenderer.createFramebuffer
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.createShader()
  name: createShader()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_createShader__
  fullName: graphics.renderer.LightmapRenderer.createShader()
  nameWithType: LightmapRenderer.createShader()
- uid: graphics.renderer.LightmapRenderer.createShader*
  name: createShader
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_createShader_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.createShader
  nameWithType: LightmapRenderer.createShader
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.init()
  name: init()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_init__
  fullName: graphics.renderer.LightmapRenderer.init()
  nameWithType: LightmapRenderer.init()
- uid: graphics.renderer.LightmapRenderer.init*
  name: init
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_init_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.init
  nameWithType: LightmapRenderer.init
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.LightmapRenderer()
  name: LightmapRenderer()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_LightmapRenderer__
  fullName: graphics.renderer.LightmapRenderer.LightmapRenderer()
  nameWithType: LightmapRenderer.LightmapRenderer()
- uid: graphics.renderer.LightmapRenderer.LightmapRenderer*
  name: LightmapRenderer
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_LightmapRenderer_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.LightmapRenderer
  nameWithType: LightmapRenderer.LightmapRenderer
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.prepare()
  name: prepare()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_prepare__
  fullName: graphics.renderer.LightmapRenderer.prepare()
  nameWithType: LightmapRenderer.prepare()
- uid: graphics.renderer.LightmapRenderer.prepare*
  name: prepare
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_prepare_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.prepare
  nameWithType: LightmapRenderer.prepare
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.rebuffer()
  name: rebuffer()
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_rebuffer__
  fullName: graphics.renderer.LightmapRenderer.rebuffer()
  nameWithType: LightmapRenderer.rebuffer()
- uid: graphics.renderer.LightmapRenderer.rebuffer*
  name: rebuffer
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_rebuffer_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.rebuffer
  nameWithType: LightmapRenderer.rebuffer
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.remove(ecs.GameObject)
  name: remove(GameObject gameObject)
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_remove_ecs_GameObject_
  fullName: graphics.renderer.LightmapRenderer.remove(GameObject gameObject)
  nameWithType: LightmapRenderer.remove(GameObject gameObject)
- uid: graphics.renderer.LightmapRenderer.remove*
  name: remove
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_remove_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.remove
  nameWithType: LightmapRenderer.remove
  package: graphics.renderer
- uid: graphics.renderer.LightmapRenderer.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_uploadUniforms_graphics_Shader_
  fullName: graphics.renderer.LightmapRenderer.uploadUniforms(Shader shader)
  nameWithType: LightmapRenderer.uploadUniforms(Shader shader)
- uid: graphics.renderer.LightmapRenderer.uploadUniforms*
  name: uploadUniforms
  href: api/graphics.renderer.LightmapRenderer.html#graphics_renderer_LightmapRenderer_uploadUniforms_
  isSpec: "True"
  fullName: graphics.renderer.LightmapRenderer.uploadUniforms
  nameWithType: LightmapRenderer.uploadUniforms
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch
  name: RenderBatch
  href: api/graphics.renderer.RenderBatch.html
  fullName: graphics.renderer.RenderBatch
  nameWithType: RenderBatch
- uid: graphics.renderer.RenderBatch.addTexture(graphics.Texture)
  name: addTexture(Texture texture)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_addTexture_graphics_Texture_
  fullName: graphics.renderer.RenderBatch.addTexture(Texture texture)
  nameWithType: RenderBatch.addTexture(Texture texture)
- uid: graphics.renderer.RenderBatch.addTexture*
  name: addTexture
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_addTexture_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.addTexture
  nameWithType: RenderBatch.addTexture
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.bind()
  name: bind()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_bind__
  fullName: graphics.renderer.RenderBatch.bind()
  nameWithType: RenderBatch.bind()
- uid: graphics.renderer.RenderBatch.bind*
  name: bind
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_bind_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.bind
  nameWithType: RenderBatch.bind
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.compareTo(graphics.renderer.RenderBatch)
  name: compareTo(RenderBatch a)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_compareTo_graphics_renderer_RenderBatch_
  fullName: graphics.renderer.RenderBatch.compareTo(RenderBatch a)
  nameWithType: RenderBatch.compareTo(RenderBatch a)
- uid: graphics.renderer.RenderBatch.compareTo*
  name: compareTo
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_compareTo_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.compareTo
  nameWithType: RenderBatch.compareTo
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.data
  name: data
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_data
  fullName: graphics.renderer.RenderBatch.data
  nameWithType: RenderBatch.data
- uid: graphics.renderer.RenderBatch.dataOffset
  name: dataOffset
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_dataOffset
  fullName: graphics.renderer.RenderBatch.dataOffset
  nameWithType: RenderBatch.dataOffset
- uid: graphics.renderer.RenderBatch.delete()
  name: delete()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_delete__
  fullName: graphics.renderer.RenderBatch.delete()
  nameWithType: RenderBatch.delete()
- uid: graphics.renderer.RenderBatch.delete*
  name: delete
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_delete_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.delete
  nameWithType: RenderBatch.delete
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.finish()
  name: finish()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_finish__
  fullName: graphics.renderer.RenderBatch.finish()
  nameWithType: RenderBatch.finish()
- uid: graphics.renderer.RenderBatch.finish*
  name: finish
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_finish_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.finish
  nameWithType: RenderBatch.finish
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.getVertexCount()
  name: getVertexCount()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_getVertexCount__
  fullName: graphics.renderer.RenderBatch.getVertexCount()
  nameWithType: RenderBatch.getVertexCount()
- uid: graphics.renderer.RenderBatch.getVertexCount*
  name: getVertexCount
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_getVertexCount_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.getVertexCount
  nameWithType: RenderBatch.getVertexCount
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.hasTexture(graphics.Texture)
  name: hasTexture(Texture tex)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_hasTexture_graphics_Texture_
  fullName: graphics.renderer.RenderBatch.hasTexture(Texture tex)
  nameWithType: RenderBatch.hasTexture(Texture tex)
- uid: graphics.renderer.RenderBatch.hasTexture*
  name: hasTexture
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_hasTexture_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.hasTexture
  nameWithType: RenderBatch.hasTexture
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.init()
  name: init()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_init__
  fullName: graphics.renderer.RenderBatch.init()
  nameWithType: RenderBatch.init()
- uid: graphics.renderer.RenderBatch.init*
  name: init
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_init_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.init
  nameWithType: RenderBatch.init
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.isFull
  name: isFull
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_isFull
  fullName: graphics.renderer.RenderBatch.isFull
  nameWithType: RenderBatch.isFull
- uid: graphics.renderer.RenderBatch.isFull_Textures
  name: isFull_Textures
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_isFull_Textures
  fullName: graphics.renderer.RenderBatch.isFull_Textures
  nameWithType: RenderBatch.isFull_Textures
- uid: graphics.renderer.RenderBatch.maxBatchSize
  name: maxBatchSize
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_maxBatchSize
  fullName: graphics.renderer.RenderBatch.maxBatchSize
  nameWithType: RenderBatch.maxBatchSize
- uid: graphics.renderer.RenderBatch.primitive
  name: primitive
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_primitive
  fullName: graphics.renderer.RenderBatch.primitive
  nameWithType: RenderBatch.primitive
- uid: graphics.renderer.RenderBatch.primitiveVertices
  name: primitiveVertices
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_primitiveVertices
  fullName: graphics.renderer.RenderBatch.primitiveVertices
  nameWithType: RenderBatch.primitiveVertices
- uid: graphics.renderer.RenderBatch.pushColor(graphics.Color)
  name: pushColor(Color c)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushColor_graphics_Color_
  fullName: graphics.renderer.RenderBatch.pushColor(Color c)
  nameWithType: RenderBatch.pushColor(Color c)
- uid: graphics.renderer.RenderBatch.pushColor*
  name: pushColor
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushColor_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.pushColor
  nameWithType: RenderBatch.pushColor
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.pushFloat(float)
  name: pushFloat(float f)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushFloat_float_
  fullName: graphics.renderer.RenderBatch.pushFloat(float f)
  nameWithType: RenderBatch.pushFloat(float f)
- uid: graphics.renderer.RenderBatch.pushFloat*
  name: pushFloat
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushFloat_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.pushFloat
  nameWithType: RenderBatch.pushFloat
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.pushInt(int)
  name: pushInt(int i)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushInt_int_
  fullName: graphics.renderer.RenderBatch.pushInt(int i)
  nameWithType: RenderBatch.pushInt(int i)
- uid: graphics.renderer.RenderBatch.pushInt*
  name: pushInt
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushInt_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.pushInt
  nameWithType: RenderBatch.pushInt
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.pushVec2(float,float)
  name: pushVec2(float x, float y)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec2_float_float_
  fullName: graphics.renderer.RenderBatch.pushVec2(float x, float y)
  nameWithType: RenderBatch.pushVec2(float x, float y)
- uid: graphics.renderer.RenderBatch.pushVec2(org.joml.Vector2f)
  name: pushVec2(Vector2f v)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec2_org_joml_Vector2f_
  fullName: graphics.renderer.RenderBatch.pushVec2(Vector2f v)
  nameWithType: RenderBatch.pushVec2(Vector2f v)
- uid: graphics.renderer.RenderBatch.pushVec2*
  name: pushVec2
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec2_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.pushVec2
  nameWithType: RenderBatch.pushVec2
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.pushVec3(float,float,float)
  name: pushVec3(float x, float y, float z)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec3_float_float_float_
  fullName: graphics.renderer.RenderBatch.pushVec3(float x, float y, float z)
  nameWithType: RenderBatch.pushVec3(float x, float y, float z)
- uid: graphics.renderer.RenderBatch.pushVec3(org.joml.Vector3f)
  name: pushVec3(Vector3f v)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec3_org_joml_Vector3f_
  fullName: graphics.renderer.RenderBatch.pushVec3(Vector3f v)
  nameWithType: RenderBatch.pushVec3(Vector3f v)
- uid: graphics.renderer.RenderBatch.pushVec3*
  name: pushVec3
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec3_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.pushVec3
  nameWithType: RenderBatch.pushVec3
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.pushVec4(float,float,float,float)
  name: pushVec4(float x, float y, float z, float w)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec4_float_float_float_float_
  fullName: graphics.renderer.RenderBatch.pushVec4(float x, float y, float z, float w)
  nameWithType: RenderBatch.pushVec4(float x, float y, float z, float w)
- uid: graphics.renderer.RenderBatch.pushVec4(org.joml.Vector4f)
  name: pushVec4(Vector4f v)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec4_org_joml_Vector4f_
  fullName: graphics.renderer.RenderBatch.pushVec4(Vector4f v)
  nameWithType: RenderBatch.pushVec4(Vector4f v)
- uid: graphics.renderer.RenderBatch.pushVec4*
  name: pushVec4
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_pushVec4_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.pushVec4
  nameWithType: RenderBatch.pushVec4
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.RenderBatch(int,int,graphics.Primitive,graphics.ShaderDatatype...)
  name: RenderBatch(int maxBatchSize, int zIndex, Primitive primitive, ShaderDatatype[] attributes)
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_RenderBatch_int_int_graphics_Primitive_graphics_ShaderDatatype____
  fullName: graphics.renderer.RenderBatch.RenderBatch(int maxBatchSize, int zIndex, Primitive primitive, ShaderDatatype[] attributes)
  nameWithType: RenderBatch.RenderBatch(int maxBatchSize, int zIndex, Primitive primitive, ShaderDatatype[] attributes)
- uid: graphics.renderer.RenderBatch.RenderBatch*
  name: RenderBatch
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_RenderBatch_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.RenderBatch
  nameWithType: RenderBatch.RenderBatch
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.start()
  name: start()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_start__
  fullName: graphics.renderer.RenderBatch.start()
  nameWithType: RenderBatch.start()
- uid: graphics.renderer.RenderBatch.start*
  name: start
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_start_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.start
  nameWithType: RenderBatch.start
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.textures
  name: textures
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_textures
  fullName: graphics.renderer.RenderBatch.textures
  nameWithType: RenderBatch.textures
- uid: graphics.renderer.RenderBatch.unbind()
  name: unbind()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_unbind__
  fullName: graphics.renderer.RenderBatch.unbind()
  nameWithType: RenderBatch.unbind()
- uid: graphics.renderer.RenderBatch.unbind*
  name: unbind
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_unbind_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.unbind
  nameWithType: RenderBatch.unbind
  package: graphics.renderer
- uid: graphics.renderer.RenderBatch.vao
  name: vao
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_vao
  fullName: graphics.renderer.RenderBatch.vao
  nameWithType: RenderBatch.vao
- uid: graphics.renderer.RenderBatch.vbo
  name: vbo
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_vbo
  fullName: graphics.renderer.RenderBatch.vbo
  nameWithType: RenderBatch.vbo
- uid: graphics.renderer.RenderBatch.vertexCount
  name: vertexCount
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_vertexCount
  fullName: graphics.renderer.RenderBatch.vertexCount
  nameWithType: RenderBatch.vertexCount
- uid: graphics.renderer.RenderBatch.vertexSize
  name: vertexSize
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_vertexSize
  fullName: graphics.renderer.RenderBatch.vertexSize
  nameWithType: RenderBatch.vertexSize
- uid: graphics.renderer.RenderBatch.zIndex()
  name: zIndex()
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_zIndex__
  fullName: graphics.renderer.RenderBatch.zIndex()
  nameWithType: RenderBatch.zIndex()
- uid: graphics.renderer.RenderBatch.zIndex*
  name: zIndex
  href: api/graphics.renderer.RenderBatch.html#graphics_renderer_RenderBatch_zIndex_
  isSpec: "True"
  fullName: graphics.renderer.RenderBatch.zIndex
  nameWithType: RenderBatch.zIndex
  package: graphics.renderer
- uid: graphics.renderer.Renderer
  name: Renderer
  href: api/graphics.renderer.Renderer.html
  fullName: graphics.renderer.Renderer
  nameWithType: Renderer
- uid: graphics.renderer.Renderer.add(ecs.GameObject)
  name: add(GameObject gameObject)
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_add_ecs_GameObject_
  fullName: graphics.renderer.Renderer.add(GameObject gameObject)
  nameWithType: Renderer.add(GameObject gameObject)
- uid: graphics.renderer.Renderer.add*
  name: add
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_add_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.add
  nameWithType: Renderer.add
  package: graphics.renderer
- uid: graphics.renderer.Renderer.batches
  name: batches
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_batches
  fullName: graphics.renderer.Renderer.batches
  nameWithType: Renderer.batches
- uid: graphics.renderer.Renderer.clean()
  name: clean()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_clean__
  fullName: graphics.renderer.Renderer.clean()
  nameWithType: Renderer.clean()
- uid: graphics.renderer.Renderer.clean*
  name: clean
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_clean_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.clean
  nameWithType: Renderer.clean
  package: graphics.renderer
- uid: graphics.renderer.Renderer.createBatch(int)
  name: createBatch(int zIndex)
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_createBatch_int_
  fullName: graphics.renderer.Renderer.createBatch(int zIndex)
  nameWithType: Renderer.createBatch(int zIndex)
- uid: graphics.renderer.Renderer.createBatch*
  name: createBatch
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_createBatch_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.createBatch
  nameWithType: Renderer.createBatch
  package: graphics.renderer
- uid: graphics.renderer.Renderer.createFramebuffer()
  name: createFramebuffer()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_createFramebuffer__
  fullName: graphics.renderer.Renderer.createFramebuffer()
  nameWithType: Renderer.createFramebuffer()
- uid: graphics.renderer.Renderer.createFramebuffer*
  name: createFramebuffer
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_createFramebuffer_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.createFramebuffer
  nameWithType: Renderer.createFramebuffer
  package: graphics.renderer
- uid: graphics.renderer.Renderer.createShader()
  name: createShader()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_createShader__
  fullName: graphics.renderer.Renderer.createShader()
  nameWithType: Renderer.createShader()
- uid: graphics.renderer.Renderer.createShader*
  name: createShader
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_createShader_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.createShader
  nameWithType: Renderer.createShader
  package: graphics.renderer
- uid: graphics.renderer.Renderer.fetchColorAttachment(int)
  name: fetchColorAttachment(int index)
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_fetchColorAttachment_int_
  fullName: graphics.renderer.Renderer.fetchColorAttachment(int index)
  nameWithType: Renderer.fetchColorAttachment(int index)
- uid: graphics.renderer.Renderer.fetchColorAttachment*
  name: fetchColorAttachment
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_fetchColorAttachment_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.fetchColorAttachment
  nameWithType: Renderer.fetchColorAttachment
  package: graphics.renderer
- uid: graphics.renderer.Renderer.framebuffer
  name: framebuffer
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_framebuffer
  fullName: graphics.renderer.Renderer.framebuffer
  nameWithType: Renderer.framebuffer
- uid: graphics.renderer.Renderer.getAvailableBatch(graphics.Texture,int)
  name: getAvailableBatch(Texture texture, int reqdZ)
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_getAvailableBatch_graphics_Texture_int_
  fullName: graphics.renderer.Renderer.getAvailableBatch(Texture texture, int reqdZ)
  nameWithType: Renderer.getAvailableBatch(Texture texture, int reqdZ)
- uid: graphics.renderer.Renderer.getAvailableBatch*
  name: getAvailableBatch
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_getAvailableBatch_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.getAvailableBatch
  nameWithType: Renderer.getAvailableBatch
  package: graphics.renderer
- uid: graphics.renderer.Renderer.init()
  name: init()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_init__
  fullName: graphics.renderer.Renderer.init()
  nameWithType: Renderer.init()
- uid: graphics.renderer.Renderer.init*
  name: init
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_init_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.init
  nameWithType: Renderer.init
  package: graphics.renderer
- uid: graphics.renderer.Renderer.noRebuffer
  name: noRebuffer
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_noRebuffer
  fullName: graphics.renderer.Renderer.noRebuffer
  nameWithType: Renderer.noRebuffer
- uid: graphics.renderer.Renderer.prepare()
  name: prepare()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_prepare__
  fullName: graphics.renderer.Renderer.prepare()
  nameWithType: Renderer.prepare()
- uid: graphics.renderer.Renderer.prepare*
  name: prepare
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_prepare_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.prepare
  nameWithType: Renderer.prepare
  package: graphics.renderer
- uid: graphics.renderer.Renderer.rebuffer()
  name: rebuffer()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_rebuffer__
  fullName: graphics.renderer.Renderer.rebuffer()
  nameWithType: Renderer.rebuffer()
- uid: graphics.renderer.Renderer.rebuffer*
  name: rebuffer
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_rebuffer_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.rebuffer
  nameWithType: Renderer.rebuffer
  package: graphics.renderer
- uid: graphics.renderer.Renderer.remove(ecs.GameObject)
  name: remove(GameObject gameObject)
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_remove_ecs_GameObject_
  fullName: graphics.renderer.Renderer.remove(GameObject gameObject)
  nameWithType: Renderer.remove(GameObject gameObject)
- uid: graphics.renderer.Renderer.remove*
  name: remove
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_remove_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.remove
  nameWithType: Renderer.remove
  package: graphics.renderer
- uid: graphics.renderer.Renderer.render()
  name: render()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_render__
  fullName: graphics.renderer.Renderer.render()
  nameWithType: Renderer.render()
- uid: graphics.renderer.Renderer.render*
  name: render
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_render_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.render
  nameWithType: Renderer.render
  package: graphics.renderer
- uid: graphics.renderer.Renderer.Renderer()
  name: Renderer()
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_Renderer__
  fullName: graphics.renderer.Renderer.Renderer()
  nameWithType: Renderer.Renderer()
- uid: graphics.renderer.Renderer.Renderer*
  name: Renderer
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_Renderer_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.Renderer
  nameWithType: Renderer.Renderer
  package: graphics.renderer
- uid: graphics.renderer.Renderer.textureSlots
  name: textureSlots
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_textureSlots
  fullName: graphics.renderer.Renderer.textureSlots
  nameWithType: Renderer.textureSlots
- uid: graphics.renderer.Renderer.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_uploadUniforms_graphics_Shader_
  fullName: graphics.renderer.Renderer.uploadUniforms(Shader shader)
  nameWithType: Renderer.uploadUniforms(Shader shader)
- uid: graphics.renderer.Renderer.uploadUniforms*
  name: uploadUniforms
  href: api/graphics.renderer.Renderer.html#graphics_renderer_Renderer_uploadUniforms_
  isSpec: "True"
  fullName: graphics.renderer.Renderer.uploadUniforms
  nameWithType: Renderer.uploadUniforms
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer
  name: TextRenderer
  href: api/graphics.renderer.TextRenderer.html
  fullName: graphics.renderer.TextRenderer
  nameWithType: TextRenderer
- uid: graphics.renderer.TextRenderer.add(ecs.Text)
  name: add(Text textObject)
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_add_ecs_Text_
  fullName: graphics.renderer.TextRenderer.add(Text textObject)
  nameWithType: TextRenderer.add(Text textObject)
- uid: graphics.renderer.TextRenderer.add*
  name: add
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_add_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.add
  nameWithType: TextRenderer.add
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.createBatch(int)
  name: createBatch(int zIndex)
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_createBatch_int_
  fullName: graphics.renderer.TextRenderer.createBatch(int zIndex)
  nameWithType: TextRenderer.createBatch(int zIndex)
- uid: graphics.renderer.TextRenderer.createBatch*
  name: createBatch
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_createBatch_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.createBatch
  nameWithType: TextRenderer.createBatch
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.createFramebuffer()
  name: createFramebuffer()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_createFramebuffer__
  fullName: graphics.renderer.TextRenderer.createFramebuffer()
  nameWithType: TextRenderer.createFramebuffer()
- uid: graphics.renderer.TextRenderer.createFramebuffer*
  name: createFramebuffer
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_createFramebuffer_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.createFramebuffer
  nameWithType: TextRenderer.createFramebuffer
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.createShader()
  name: createShader()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_createShader__
  fullName: graphics.renderer.TextRenderer.createShader()
  nameWithType: TextRenderer.createShader()
- uid: graphics.renderer.TextRenderer.createShader*
  name: createShader
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_createShader_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.createShader
  nameWithType: TextRenderer.createShader
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.getMaxBatchSize()
  name: getMaxBatchSize()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_getMaxBatchSize__
  fullName: graphics.renderer.TextRenderer.getMaxBatchSize()
  nameWithType: TextRenderer.getMaxBatchSize()
- uid: graphics.renderer.TextRenderer.getMaxBatchSize*
  name: getMaxBatchSize
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_getMaxBatchSize_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.getMaxBatchSize
  nameWithType: TextRenderer.getMaxBatchSize
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.prepare()
  name: prepare()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_prepare__
  fullName: graphics.renderer.TextRenderer.prepare()
  nameWithType: TextRenderer.prepare()
- uid: graphics.renderer.TextRenderer.prepare*
  name: prepare
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_prepare_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.prepare
  nameWithType: TextRenderer.prepare
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.rebuffer()
  name: rebuffer()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_rebuffer__
  fullName: graphics.renderer.TextRenderer.rebuffer()
  nameWithType: TextRenderer.rebuffer()
- uid: graphics.renderer.TextRenderer.rebuffer*
  name: rebuffer
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_rebuffer_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.rebuffer
  nameWithType: TextRenderer.rebuffer
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.remove(ecs.Text)
  name: remove(Text text)
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_remove_ecs_Text_
  fullName: graphics.renderer.TextRenderer.remove(Text text)
  nameWithType: TextRenderer.remove(Text text)
- uid: graphics.renderer.TextRenderer.remove*
  name: remove
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_remove_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.remove
  nameWithType: TextRenderer.remove
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.render()
  name: render()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_render__
  fullName: graphics.renderer.TextRenderer.render()
  nameWithType: TextRenderer.render()
- uid: graphics.renderer.TextRenderer.render*
  name: render
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_render_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.render
  nameWithType: TextRenderer.render
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.TextRenderer()
  name: TextRenderer()
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_TextRenderer__
  fullName: graphics.renderer.TextRenderer.TextRenderer()
  nameWithType: TextRenderer.TextRenderer()
- uid: graphics.renderer.TextRenderer.TextRenderer*
  name: TextRenderer
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_TextRenderer_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.TextRenderer
  nameWithType: TextRenderer.TextRenderer
  package: graphics.renderer
- uid: graphics.renderer.TextRenderer.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_uploadUniforms_graphics_Shader_
  fullName: graphics.renderer.TextRenderer.uploadUniforms(Shader shader)
  nameWithType: TextRenderer.uploadUniforms(Shader shader)
- uid: graphics.renderer.TextRenderer.uploadUniforms*
  name: uploadUniforms
  href: api/graphics.renderer.TextRenderer.html#graphics_renderer_TextRenderer_uploadUniforms_
  isSpec: "True"
  fullName: graphics.renderer.TextRenderer.uploadUniforms
  nameWithType: TextRenderer.uploadUniforms
  package: graphics.renderer
- uid: graphics.Shader
  name: Shader
  href: api/graphics.Shader.html
  fullName: graphics.Shader
  nameWithType: Shader
- uid: graphics.Shader.attach()
  name: attach()
  href: api/graphics.Shader.html#graphics_Shader_attach__
  fullName: graphics.Shader.attach()
  nameWithType: Shader.attach()
- uid: graphics.Shader.attach*
  name: attach
  href: api/graphics.Shader.html#graphics_Shader_attach_
  isSpec: "True"
  fullName: graphics.Shader.attach
  nameWithType: Shader.attach
  package: graphics
- uid: graphics.Shader.compile()
  name: compile()
  href: api/graphics.Shader.html#graphics_Shader_compile__
  fullName: graphics.Shader.compile()
  nameWithType: Shader.compile()
- uid: graphics.Shader.compile*
  name: compile
  href: api/graphics.Shader.html#graphics_Shader_compile_
  isSpec: "True"
  fullName: graphics.Shader.compile
  nameWithType: Shader.compile
  package: graphics
- uid: graphics.Shader.detach()
  name: detach()
  href: api/graphics.Shader.html#graphics_Shader_detach__
  fullName: graphics.Shader.detach()
  nameWithType: Shader.detach()
- uid: graphics.Shader.detach*
  name: detach
  href: api/graphics.Shader.html#graphics_Shader_detach_
  isSpec: "True"
  fullName: graphics.Shader.detach
  nameWithType: Shader.detach
  package: graphics
- uid: graphics.Shader.fragmentID
  name: fragmentID
  href: api/graphics.Shader.html#graphics_Shader_fragmentID
  fullName: graphics.Shader.fragmentID
  nameWithType: Shader.fragmentID
- uid: graphics.Shader.Shader(java.lang.String)
  name: Shader(String filePath)
  href: api/graphics.Shader.html#graphics_Shader_Shader_java_lang_String_
  fullName: graphics.Shader.Shader(String filePath)
  nameWithType: Shader.Shader(String filePath)
- uid: graphics.Shader.Shader*
  name: Shader
  href: api/graphics.Shader.html#graphics_Shader_Shader_
  isSpec: "True"
  fullName: graphics.Shader.Shader
  nameWithType: Shader.Shader
  package: graphics
- uid: graphics.Shader.uploadFloat(java.lang.String,float)
  name: uploadFloat(String varName, float val)
  href: api/graphics.Shader.html#graphics_Shader_uploadFloat_java_lang_String_float_
  fullName: graphics.Shader.uploadFloat(String varName, float val)
  nameWithType: Shader.uploadFloat(String varName, float val)
- uid: graphics.Shader.uploadFloat*
  name: uploadFloat
  href: api/graphics.Shader.html#graphics_Shader_uploadFloat_
  isSpec: "True"
  fullName: graphics.Shader.uploadFloat
  nameWithType: Shader.uploadFloat
  package: graphics
- uid: graphics.Shader.uploadFloatArray(java.lang.String,float[])
  name: uploadFloatArray(String varName, float[] array)
  href: api/graphics.Shader.html#graphics_Shader_uploadFloatArray_java_lang_String_float___
  fullName: graphics.Shader.uploadFloatArray(String varName, float[] array)
  nameWithType: Shader.uploadFloatArray(String varName, float[] array)
- uid: graphics.Shader.uploadFloatArray*
  name: uploadFloatArray
  href: api/graphics.Shader.html#graphics_Shader_uploadFloatArray_
  isSpec: "True"
  fullName: graphics.Shader.uploadFloatArray
  nameWithType: Shader.uploadFloatArray
  package: graphics
- uid: graphics.Shader.uploadInt(java.lang.String,int)
  name: uploadInt(String varName, int val)
  href: api/graphics.Shader.html#graphics_Shader_uploadInt_java_lang_String_int_
  fullName: graphics.Shader.uploadInt(String varName, int val)
  nameWithType: Shader.uploadInt(String varName, int val)
- uid: graphics.Shader.uploadInt*
  name: uploadInt
  href: api/graphics.Shader.html#graphics_Shader_uploadInt_
  isSpec: "True"
  fullName: graphics.Shader.uploadInt
  nameWithType: Shader.uploadInt
  package: graphics
- uid: graphics.Shader.uploadIntArray(java.lang.String,int[])
  name: uploadIntArray(String varName, int[] array)
  href: api/graphics.Shader.html#graphics_Shader_uploadIntArray_java_lang_String_int___
  fullName: graphics.Shader.uploadIntArray(String varName, int[] array)
  nameWithType: Shader.uploadIntArray(String varName, int[] array)
- uid: graphics.Shader.uploadIntArray*
  name: uploadIntArray
  href: api/graphics.Shader.html#graphics_Shader_uploadIntArray_
  isSpec: "True"
  fullName: graphics.Shader.uploadIntArray
  nameWithType: Shader.uploadIntArray
  package: graphics
- uid: graphics.Shader.uploadMat3f(java.lang.String,org.joml.Matrix3f)
  name: uploadMat3f(String varName, Matrix3f mat3)
  href: api/graphics.Shader.html#graphics_Shader_uploadMat3f_java_lang_String_org_joml_Matrix3f_
  fullName: graphics.Shader.uploadMat3f(String varName, Matrix3f mat3)
  nameWithType: Shader.uploadMat3f(String varName, Matrix3f mat3)
- uid: graphics.Shader.uploadMat3f*
  name: uploadMat3f
  href: api/graphics.Shader.html#graphics_Shader_uploadMat3f_
  isSpec: "True"
  fullName: graphics.Shader.uploadMat3f
  nameWithType: Shader.uploadMat3f
  package: graphics
- uid: graphics.Shader.uploadMat4f(java.lang.String,org.joml.Matrix4f)
  name: uploadMat4f(String varName, Matrix4f mat4)
  href: api/graphics.Shader.html#graphics_Shader_uploadMat4f_java_lang_String_org_joml_Matrix4f_
  fullName: graphics.Shader.uploadMat4f(String varName, Matrix4f mat4)
  nameWithType: Shader.uploadMat4f(String varName, Matrix4f mat4)
- uid: graphics.Shader.uploadMat4f*
  name: uploadMat4f
  href: api/graphics.Shader.html#graphics_Shader_uploadMat4f_
  isSpec: "True"
  fullName: graphics.Shader.uploadMat4f
  nameWithType: Shader.uploadMat4f
  package: graphics
- uid: graphics.Shader.uploadTexture(java.lang.String,int)
  name: uploadTexture(String varName, int slot)
  href: api/graphics.Shader.html#graphics_Shader_uploadTexture_java_lang_String_int_
  fullName: graphics.Shader.uploadTexture(String varName, int slot)
  nameWithType: Shader.uploadTexture(String varName, int slot)
- uid: graphics.Shader.uploadTexture*
  name: uploadTexture
  href: api/graphics.Shader.html#graphics_Shader_uploadTexture_
  isSpec: "True"
  fullName: graphics.Shader.uploadTexture
  nameWithType: Shader.uploadTexture
  package: graphics
- uid: graphics.Shader.uploadVec2f(java.lang.String,org.joml.Vector2f)
  name: uploadVec2f(String varName, Vector2f vec)
  href: api/graphics.Shader.html#graphics_Shader_uploadVec2f_java_lang_String_org_joml_Vector2f_
  fullName: graphics.Shader.uploadVec2f(String varName, Vector2f vec)
  nameWithType: Shader.uploadVec2f(String varName, Vector2f vec)
- uid: graphics.Shader.uploadVec2f*
  name: uploadVec2f
  href: api/graphics.Shader.html#graphics_Shader_uploadVec2f_
  isSpec: "True"
  fullName: graphics.Shader.uploadVec2f
  nameWithType: Shader.uploadVec2f
  package: graphics
- uid: graphics.Shader.uploadVec2fArray(java.lang.String,org.joml.Vector2f[])
  name: uploadVec2fArray(String varName, Vector2f[] vec)
  href: api/graphics.Shader.html#graphics_Shader_uploadVec2fArray_java_lang_String_org_joml_Vector2f___
  fullName: graphics.Shader.uploadVec2fArray(String varName, Vector2f[] vec)
  nameWithType: Shader.uploadVec2fArray(String varName, Vector2f[] vec)
- uid: graphics.Shader.uploadVec2fArray*
  name: uploadVec2fArray
  href: api/graphics.Shader.html#graphics_Shader_uploadVec2fArray_
  isSpec: "True"
  fullName: graphics.Shader.uploadVec2fArray
  nameWithType: Shader.uploadVec2fArray
  package: graphics
- uid: graphics.Shader.uploadVec3fArray(java.lang.String,org.joml.Vector3f[])
  name: uploadVec3fArray(String varName, Vector3f[] vec)
  href: api/graphics.Shader.html#graphics_Shader_uploadVec3fArray_java_lang_String_org_joml_Vector3f___
  fullName: graphics.Shader.uploadVec3fArray(String varName, Vector3f[] vec)
  nameWithType: Shader.uploadVec3fArray(String varName, Vector3f[] vec)
- uid: graphics.Shader.uploadVec3fArray*
  name: uploadVec3fArray
  href: api/graphics.Shader.html#graphics_Shader_uploadVec3fArray_
  isSpec: "True"
  fullName: graphics.Shader.uploadVec3fArray
  nameWithType: Shader.uploadVec3fArray
  package: graphics
- uid: graphics.Shader.uploadVec4f(java.lang.String,org.joml.Vector4f)
  name: uploadVec4f(String varName, Vector4f vec)
  href: api/graphics.Shader.html#graphics_Shader_uploadVec4f_java_lang_String_org_joml_Vector4f_
  fullName: graphics.Shader.uploadVec4f(String varName, Vector4f vec)
  nameWithType: Shader.uploadVec4f(String varName, Vector4f vec)
- uid: graphics.Shader.uploadVec4f*
  name: uploadVec4f
  href: api/graphics.Shader.html#graphics_Shader_uploadVec4f_
  isSpec: "True"
  fullName: graphics.Shader.uploadVec4f
  nameWithType: Shader.uploadVec4f
  package: graphics
- uid: graphics.Shader.vertexID
  name: vertexID
  href: api/graphics.Shader.html#graphics_Shader_vertexID
  fullName: graphics.Shader.vertexID
  nameWithType: Shader.vertexID
- uid: graphics.ShaderDatatype
  name: ShaderDatatype
  href: api/graphics.ShaderDatatype.html
  fullName: graphics.ShaderDatatype
  nameWithType: ShaderDatatype
- uid: graphics.ShaderDatatype.count
  name: count
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_count
  fullName: graphics.ShaderDatatype.count
  nameWithType: ShaderDatatype.count
- uid: graphics.ShaderDatatype.FLOAT
  name: FLOAT
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_FLOAT
  fullName: graphics.ShaderDatatype.FLOAT
  nameWithType: ShaderDatatype.FLOAT
- uid: graphics.ShaderDatatype.FLOAT2
  name: FLOAT2
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_FLOAT2
  fullName: graphics.ShaderDatatype.FLOAT2
  nameWithType: ShaderDatatype.FLOAT2
- uid: graphics.ShaderDatatype.FLOAT3
  name: FLOAT3
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_FLOAT3
  fullName: graphics.ShaderDatatype.FLOAT3
  nameWithType: ShaderDatatype.FLOAT3
- uid: graphics.ShaderDatatype.FLOAT4
  name: FLOAT4
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_FLOAT4
  fullName: graphics.ShaderDatatype.FLOAT4
  nameWithType: ShaderDatatype.FLOAT4
- uid: graphics.ShaderDatatype.INT
  name: INT
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_INT
  fullName: graphics.ShaderDatatype.INT
  nameWithType: ShaderDatatype.INT
- uid: graphics.ShaderDatatype.INT2
  name: INT2
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_INT2
  fullName: graphics.ShaderDatatype.INT2
  nameWithType: ShaderDatatype.INT2
- uid: graphics.ShaderDatatype.INT3
  name: INT3
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_INT3
  fullName: graphics.ShaderDatatype.INT3
  nameWithType: ShaderDatatype.INT3
- uid: graphics.ShaderDatatype.INT4
  name: INT4
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_INT4
  fullName: graphics.ShaderDatatype.INT4
  nameWithType: ShaderDatatype.INT4
- uid: graphics.ShaderDatatype.MAT3
  name: MAT3
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_MAT3
  fullName: graphics.ShaderDatatype.MAT3
  nameWithType: ShaderDatatype.MAT3
- uid: graphics.ShaderDatatype.MAT4
  name: MAT4
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_MAT4
  fullName: graphics.ShaderDatatype.MAT4
  nameWithType: ShaderDatatype.MAT4
- uid: graphics.ShaderDatatype.openglType
  name: openglType
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_openglType
  fullName: graphics.ShaderDatatype.openglType
  nameWithType: ShaderDatatype.openglType
- uid: graphics.ShaderDatatype.ShaderDatatype(int,int,int)
  name: ShaderDatatype(int count, int bytes, int openglType)
  href: api/graphics.ShaderDatatype.html
  fullName: graphics.ShaderDatatype.ShaderDatatype(int count, int bytes, int openglType)
  nameWithType: ShaderDatatype.ShaderDatatype(int count, int bytes, int openglType)
- uid: graphics.ShaderDatatype.ShaderDatatype*
  name: ShaderDatatype
  href: api/graphics.ShaderDatatype.html
  isSpec: "True"
  fullName: graphics.ShaderDatatype.ShaderDatatype
  nameWithType: ShaderDatatype.ShaderDatatype
  package: graphics
- uid: graphics.ShaderDatatype.size
  name: size
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_size
  fullName: graphics.ShaderDatatype.size
  nameWithType: ShaderDatatype.size
- uid: graphics.ShaderDatatype.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_valueOf_java_lang_String_
  fullName: graphics.ShaderDatatype.valueOf(String name)
  nameWithType: ShaderDatatype.valueOf(String name)
- uid: graphics.ShaderDatatype.valueOf*
  name: valueOf
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_valueOf_
  isSpec: "True"
  fullName: graphics.ShaderDatatype.valueOf
  nameWithType: ShaderDatatype.valueOf
  package: graphics
- uid: graphics.ShaderDatatype.values()
  name: values()
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_values__
  fullName: graphics.ShaderDatatype.values()
  nameWithType: ShaderDatatype.values()
- uid: graphics.ShaderDatatype.values*
  name: values
  href: api/graphics.ShaderDatatype.html#graphics_ShaderDatatype_values_
  isSpec: "True"
  fullName: graphics.ShaderDatatype.values
  nameWithType: ShaderDatatype.values
  package: graphics
- uid: graphics.Sprite
  name: Sprite
  href: api/graphics.Sprite.html
  fullName: graphics.Sprite
  nameWithType: Sprite
- uid: graphics.Sprite.getHeight()
  name: getHeight()
  href: api/graphics.Sprite.html#graphics_Sprite_getHeight__
  fullName: graphics.Sprite.getHeight()
  nameWithType: Sprite.getHeight()
- uid: graphics.Sprite.getHeight*
  name: getHeight
  href: api/graphics.Sprite.html#graphics_Sprite_getHeight_
  isSpec: "True"
  fullName: graphics.Sprite.getHeight
  nameWithType: Sprite.getHeight
  package: graphics
- uid: graphics.Sprite.getTexture()
  name: getTexture()
  href: api/graphics.Sprite.html#graphics_Sprite_getTexture__
  fullName: graphics.Sprite.getTexture()
  nameWithType: Sprite.getTexture()
- uid: graphics.Sprite.getTexture*
  name: getTexture
  href: api/graphics.Sprite.html#graphics_Sprite_getTexture_
  isSpec: "True"
  fullName: graphics.Sprite.getTexture
  nameWithType: Sprite.getTexture
  package: graphics
- uid: graphics.Sprite.getTextureCoordinates()
  name: getTextureCoordinates()
  href: api/graphics.Sprite.html#graphics_Sprite_getTextureCoordinates__
  fullName: graphics.Sprite.getTextureCoordinates()
  nameWithType: Sprite.getTextureCoordinates()
- uid: graphics.Sprite.getTextureCoordinates*
  name: getTextureCoordinates
  href: api/graphics.Sprite.html#graphics_Sprite_getTextureCoordinates_
  isSpec: "True"
  fullName: graphics.Sprite.getTextureCoordinates
  nameWithType: Sprite.getTextureCoordinates
  package: graphics
- uid: graphics.Sprite.getTextureID()
  name: getTextureID()
  href: api/graphics.Sprite.html#graphics_Sprite_getTextureID__
  fullName: graphics.Sprite.getTextureID()
  nameWithType: Sprite.getTextureID()
- uid: graphics.Sprite.getTextureID*
  name: getTextureID
  href: api/graphics.Sprite.html#graphics_Sprite_getTextureID_
  isSpec: "True"
  fullName: graphics.Sprite.getTextureID
  nameWithType: Sprite.getTextureID
  package: graphics
- uid: graphics.Sprite.getWidth()
  name: getWidth()
  href: api/graphics.Sprite.html#graphics_Sprite_getWidth__
  fullName: graphics.Sprite.getWidth()
  nameWithType: Sprite.getWidth()
- uid: graphics.Sprite.getWidth*
  name: getWidth
  href: api/graphics.Sprite.html#graphics_Sprite_getWidth_
  isSpec: "True"
  fullName: graphics.Sprite.getWidth
  nameWithType: Sprite.getWidth
  package: graphics
- uid: graphics.Sprite.setTexture(graphics.Texture)
  name: setTexture(Texture texture)
  href: api/graphics.Sprite.html#graphics_Sprite_setTexture_graphics_Texture_
  fullName: graphics.Sprite.setTexture(Texture texture)
  nameWithType: Sprite.setTexture(Texture texture)
- uid: graphics.Sprite.setTexture*
  name: setTexture
  href: api/graphics.Sprite.html#graphics_Sprite_setTexture_
  isSpec: "True"
  fullName: graphics.Sprite.setTexture
  nameWithType: Sprite.setTexture
  package: graphics
- uid: graphics.Sprite.Sprite(graphics.Texture)
  name: Sprite(Texture texture)
  href: api/graphics.Sprite.html#graphics_Sprite_Sprite_graphics_Texture_
  fullName: graphics.Sprite.Sprite(Texture texture)
  nameWithType: Sprite.Sprite(Texture texture)
- uid: graphics.Sprite.Sprite(graphics.Texture,org.joml.Vector2f[])
  name: Sprite(Texture texture, Vector2f[] uv)
  href: api/graphics.Sprite.html#graphics_Sprite_Sprite_graphics_Texture_org_joml_Vector2f___
  fullName: graphics.Sprite.Sprite(Texture texture, Vector2f[] uv)
  nameWithType: Sprite.Sprite(Texture texture, Vector2f[] uv)
- uid: graphics.Sprite.Sprite*
  name: Sprite
  href: api/graphics.Sprite.html#graphics_Sprite_Sprite_
  isSpec: "True"
  fullName: graphics.Sprite.Sprite
  nameWithType: Sprite.Sprite
  package: graphics
- uid: graphics.Sprite.texture
  name: texture
  href: api/graphics.Sprite.html#graphics_Sprite_texture
  fullName: graphics.Sprite.texture
  nameWithType: Sprite.texture
- uid: graphics.Texture
  name: Texture
  href: api/graphics.Texture.html
  fullName: graphics.Texture
  nameWithType: Texture
- uid: graphics.Texture.bind()
  name: bind()
  href: api/graphics.Texture.html#graphics_Texture_bind__
  fullName: graphics.Texture.bind()
  nameWithType: Texture.bind()
- uid: graphics.Texture.bind*
  name: bind
  href: api/graphics.Texture.html#graphics_Texture_bind_
  isSpec: "True"
  fullName: graphics.Texture.bind
  nameWithType: Texture.bind
  package: graphics
- uid: graphics.Texture.bindToSlot(int)
  name: bindToSlot(int unit)
  href: api/graphics.Texture.html#graphics_Texture_bindToSlot_int_
  fullName: graphics.Texture.bindToSlot(int unit)
  nameWithType: Texture.bindToSlot(int unit)
- uid: graphics.Texture.bindToSlot*
  name: bindToSlot
  href: api/graphics.Texture.html#graphics_Texture_bindToSlot_
  isSpec: "True"
  fullName: graphics.Texture.bindToSlot
  nameWithType: Texture.bindToSlot
  package: graphics
- uid: graphics.Texture.createTexture(int,int,java.nio.ByteBuffer)
  name: createTexture(int width, int height, ByteBuffer data)
  href: api/graphics.Texture.html#graphics_Texture_createTexture_int_int_java_nio_ByteBuffer_
  fullName: graphics.Texture.createTexture(int width, int height, ByteBuffer data)
  nameWithType: Texture.createTexture(int width, int height, ByteBuffer data)
- uid: graphics.Texture.createTexture*
  name: createTexture
  href: api/graphics.Texture.html#graphics_Texture_createTexture_
  isSpec: "True"
  fullName: graphics.Texture.createTexture
  nameWithType: Texture.createTexture
  package: graphics
- uid: graphics.Texture.delete()
  name: delete()
  href: api/graphics.Texture.html#graphics_Texture_delete__
  fullName: graphics.Texture.delete()
  nameWithType: Texture.delete()
- uid: graphics.Texture.delete*
  name: delete
  href: api/graphics.Texture.html#graphics_Texture_delete_
  isSpec: "True"
  fullName: graphics.Texture.delete
  nameWithType: Texture.delete
  package: graphics
- uid: graphics.Texture.getFilePath()
  name: getFilePath()
  href: api/graphics.Texture.html#graphics_Texture_getFilePath__
  fullName: graphics.Texture.getFilePath()
  nameWithType: Texture.getFilePath()
- uid: graphics.Texture.getFilePath*
  name: getFilePath
  href: api/graphics.Texture.html#graphics_Texture_getFilePath_
  isSpec: "True"
  fullName: graphics.Texture.getFilePath
  nameWithType: Texture.getFilePath
  package: graphics
- uid: graphics.Texture.getHeight()
  name: getHeight()
  href: api/graphics.Texture.html#graphics_Texture_getHeight__
  fullName: graphics.Texture.getHeight()
  nameWithType: Texture.getHeight()
- uid: graphics.Texture.getHeight*
  name: getHeight
  href: api/graphics.Texture.html#graphics_Texture_getHeight_
  isSpec: "True"
  fullName: graphics.Texture.getHeight
  nameWithType: Texture.getHeight
  package: graphics
- uid: graphics.Texture.getTextureID()
  name: getTextureID()
  href: api/graphics.Texture.html#graphics_Texture_getTextureID__
  fullName: graphics.Texture.getTextureID()
  nameWithType: Texture.getTextureID()
- uid: graphics.Texture.getTextureID*
  name: getTextureID
  href: api/graphics.Texture.html#graphics_Texture_getTextureID_
  isSpec: "True"
  fullName: graphics.Texture.getTextureID
  nameWithType: Texture.getTextureID
  package: graphics
- uid: graphics.Texture.getWidth()
  name: getWidth()
  href: api/graphics.Texture.html#graphics_Texture_getWidth__
  fullName: graphics.Texture.getWidth()
  nameWithType: Texture.getWidth()
- uid: graphics.Texture.getWidth*
  name: getWidth
  href: api/graphics.Texture.html#graphics_Texture_getWidth_
  isSpec: "True"
  fullName: graphics.Texture.getWidth
  nameWithType: Texture.getWidth
  package: graphics
- uid: graphics.Texture.setHeight(int)
  name: setHeight(int height)
  href: api/graphics.Texture.html#graphics_Texture_setHeight_int_
  fullName: graphics.Texture.setHeight(int height)
  nameWithType: Texture.setHeight(int height)
- uid: graphics.Texture.setHeight*
  name: setHeight
  href: api/graphics.Texture.html#graphics_Texture_setHeight_
  isSpec: "True"
  fullName: graphics.Texture.setHeight
  nameWithType: Texture.setHeight
  package: graphics
- uid: graphics.Texture.setId(int)
  name: setId(int id)
  href: api/graphics.Texture.html#graphics_Texture_setId_int_
  fullName: graphics.Texture.setId(int id)
  nameWithType: Texture.setId(int id)
- uid: graphics.Texture.setId*
  name: setId
  href: api/graphics.Texture.html#graphics_Texture_setId_
  isSpec: "True"
  fullName: graphics.Texture.setId
  nameWithType: Texture.setId
  package: graphics
- uid: graphics.Texture.setParameter(int,int)
  name: setParameter(int name, int value)
  href: api/graphics.Texture.html#graphics_Texture_setParameter_int_int_
  fullName: graphics.Texture.setParameter(int name, int value)
  nameWithType: Texture.setParameter(int name, int value)
- uid: graphics.Texture.setParameter*
  name: setParameter
  href: api/graphics.Texture.html#graphics_Texture_setParameter_
  isSpec: "True"
  fullName: graphics.Texture.setParameter
  nameWithType: Texture.setParameter
  package: graphics
- uid: graphics.Texture.setWidth(int)
  name: setWidth(int width)
  href: api/graphics.Texture.html#graphics_Texture_setWidth_int_
  fullName: graphics.Texture.setWidth(int width)
  nameWithType: Texture.setWidth(int width)
- uid: graphics.Texture.setWidth*
  name: setWidth
  href: api/graphics.Texture.html#graphics_Texture_setWidth_
  isSpec: "True"
  fullName: graphics.Texture.setWidth
  nameWithType: Texture.setWidth
  package: graphics
- uid: graphics.Texture.Texture()
  name: Texture()
  href: api/graphics.Texture.html#graphics_Texture_Texture__
  fullName: graphics.Texture.Texture()
  nameWithType: Texture.Texture()
- uid: graphics.Texture.Texture(int)
  name: Texture(int id)
  href: api/graphics.Texture.html
  fullName: graphics.Texture.Texture(int id)
  nameWithType: Texture.Texture(int id)
- uid: graphics.Texture.Texture(int,int,util.specs.TextureSpec)
  name: Texture(int width, int height, TextureSpec spec)
  href: api/graphics.Texture.html#graphics_Texture_Texture_int_int_util_specs_TextureSpec_
  fullName: graphics.Texture.Texture(int width, int height, TextureSpec spec)
  nameWithType: Texture.Texture(int width, int height, TextureSpec spec)
- uid: graphics.Texture.Texture(java.lang.String)
  name: Texture(String filepath)
  href: api/graphics.Texture.html#graphics_Texture_Texture_java_lang_String_
  fullName: graphics.Texture.Texture(String filepath)
  nameWithType: Texture.Texture(String filepath)
- uid: graphics.Texture.Texture*
  name: Texture
  href: api/graphics.Texture.html#graphics_Texture_Texture_
  isSpec: "True"
  fullName: graphics.Texture.Texture
  nameWithType: Texture.Texture
  package: graphics
- uid: graphics.Texture.toFile(java.lang.String,int,int,int)
  name: toFile(String file, int id, int width, int height)
  href: api/graphics.Texture.html#graphics_Texture_toFile_java_lang_String_int_int_int_
  fullName: graphics.Texture.toFile(String file, int id, int width, int height)
  nameWithType: Texture.toFile(String file, int id, int width, int height)
- uid: graphics.Texture.toFile*
  name: toFile
  href: api/graphics.Texture.html#graphics_Texture_toFile_
  isSpec: "True"
  fullName: graphics.Texture.toFile
  nameWithType: Texture.toFile
  package: graphics
- uid: graphics.Texture.unbind()
  name: unbind()
  href: api/graphics.Texture.html#graphics_Texture_unbind__
  fullName: graphics.Texture.unbind()
  nameWithType: Texture.unbind()
- uid: graphics.Texture.unbind*
  name: unbind
  href: api/graphics.Texture.html#graphics_Texture_unbind_
  isSpec: "True"
  fullName: graphics.Texture.unbind
  nameWithType: Texture.unbind
  package: graphics
- uid: graphics.Texture.uploadData(int,int,int,int,java.nio.ByteBuffer)
  name: uploadData(int internalFormat, int width, int height, int format, ByteBuffer data)
  href: api/graphics.Texture.html#graphics_Texture_uploadData_int_int_int_int_java_nio_ByteBuffer_
  fullName: graphics.Texture.uploadData(int internalFormat, int width, int height, int format, ByteBuffer data)
  nameWithType: Texture.uploadData(int internalFormat, int width, int height, int format, ByteBuffer data)
- uid: graphics.Texture.uploadData(int,int,java.nio.ByteBuffer)
  name: uploadData(int width, int height, ByteBuffer data)
  href: api/graphics.Texture.html#graphics_Texture_uploadData_int_int_java_nio_ByteBuffer_
  fullName: graphics.Texture.uploadData(int width, int height, ByteBuffer data)
  nameWithType: Texture.uploadData(int width, int height, ByteBuffer data)
- uid: graphics.Texture.uploadData*
  name: uploadData
  href: api/graphics.Texture.html#graphics_Texture_uploadData_
  isSpec: "True"
  fullName: graphics.Texture.uploadData
  nameWithType: Texture.uploadData
  package: graphics
- uid: graphics.Texture.wrap(int)
  name: wrap(int id)
  href: api/graphics.Texture.html#graphics_Texture_wrap_int_
  fullName: graphics.Texture.wrap(int id)
  nameWithType: Texture.wrap(int id)
- uid: graphics.Texture.wrap*
  name: wrap
  href: api/graphics.Texture.html#graphics_Texture_wrap_
  isSpec: "True"
  fullName: graphics.Texture.wrap
  nameWithType: Texture.wrap
  package: graphics
- uid: graphics.Window
  name: Window
  href: api/graphics.Window.html
  fullName: graphics.Window
  nameWithType: Window
- uid: graphics.Window.currentScene()
  name: currentScene()
  href: api/graphics.Window.html#graphics_Window_currentScene__
  fullName: graphics.Window.currentScene()
  nameWithType: Window.currentScene()
- uid: graphics.Window.currentScene*
  name: currentScene
  href: api/graphics.Window.html#graphics_Window_currentScene_
  isSpec: "True"
  fullName: graphics.Window.currentScene
  nameWithType: Window.currentScene
  package: graphics
- uid: graphics.Window.getFPS()
  name: getFPS()
  href: api/graphics.Window.html#graphics_Window_getFPS__
  fullName: graphics.Window.getFPS()
  nameWithType: Window.getFPS()
- uid: graphics.Window.getFPS*
  name: getFPS
  href: api/graphics.Window.html#graphics_Window_getFPS_
  isSpec: "True"
  fullName: graphics.Window.getFPS
  nameWithType: Window.getFPS
  package: graphics
- uid: graphics.Window.getHeight()
  name: getHeight()
  href: api/graphics.Window.html#graphics_Window_getHeight__
  fullName: graphics.Window.getHeight()
  nameWithType: Window.getHeight()
- uid: graphics.Window.getHeight*
  name: getHeight
  href: api/graphics.Window.html#graphics_Window_getHeight_
  isSpec: "True"
  fullName: graphics.Window.getHeight
  nameWithType: Window.getHeight
  package: graphics
- uid: graphics.Window.getSceneManager()
  name: getSceneManager()
  href: api/graphics.Window.html#graphics_Window_getSceneManager__
  fullName: graphics.Window.getSceneManager()
  nameWithType: Window.getSceneManager()
- uid: graphics.Window.getSceneManager*
  name: getSceneManager
  href: api/graphics.Window.html#graphics_Window_getSceneManager_
  isSpec: "True"
  fullName: graphics.Window.getSceneManager
  nameWithType: Window.getSceneManager
  package: graphics
- uid: graphics.Window.getTitle()
  name: getTitle()
  href: api/graphics.Window.html#graphics_Window_getTitle__
  fullName: graphics.Window.getTitle()
  nameWithType: Window.getTitle()
- uid: graphics.Window.getTitle*
  name: getTitle
  href: api/graphics.Window.html#graphics_Window_getTitle_
  isSpec: "True"
  fullName: graphics.Window.getTitle
  nameWithType: Window.getTitle
  package: graphics
- uid: graphics.Window.getWidth()
  name: getWidth()
  href: api/graphics.Window.html#graphics_Window_getWidth__
  fullName: graphics.Window.getWidth()
  nameWithType: Window.getWidth()
- uid: graphics.Window.getWidth*
  name: getWidth
  href: api/graphics.Window.html#graphics_Window_getWidth_
  isSpec: "True"
  fullName: graphics.Window.getWidth
  nameWithType: Window.getWidth
  package: graphics
- uid: graphics.Window.glfwWindow()
  name: glfwWindow()
  href: api/graphics.Window.html#graphics_Window_glfwWindow__
  fullName: graphics.Window.glfwWindow()
  nameWithType: Window.glfwWindow()
- uid: graphics.Window.glfwWindow*
  name: glfwWindow
  href: api/graphics.Window.html#graphics_Window_glfwWindow_
  isSpec: "True"
  fullName: graphics.Window.glfwWindow
  nameWithType: Window.glfwWindow
  package: graphics
- uid: graphics.Window.setTitle(java.lang.String)
  name: setTitle(String title)
  href: api/graphics.Window.html#graphics_Window_setTitle_java_lang_String_
  fullName: graphics.Window.setTitle(String title)
  nameWithType: Window.setTitle(String title)
- uid: graphics.Window.setTitle*
  name: setTitle
  href: api/graphics.Window.html#graphics_Window_setTitle_
  isSpec: "True"
  fullName: graphics.Window.setTitle
  nameWithType: Window.setTitle
  package: graphics
- uid: graphics.Window.showWindow()
  name: showWindow()
  href: api/graphics.Window.html#graphics_Window_showWindow__
  fullName: graphics.Window.showWindow()
  nameWithType: Window.showWindow()
- uid: graphics.Window.showWindow*
  name: showWindow
  href: api/graphics.Window.html#graphics_Window_showWindow_
  isSpec: "True"
  fullName: graphics.Window.showWindow
  nameWithType: Window.showWindow
  package: graphics
- uid: graphics.Window.Window(int,int,java.lang.String,boolean)
  name: Window(int pwidth, int pheight, String ptitle, boolean recalculateProjectionOnResize)
  href: api/graphics.Window.html#graphics_Window_Window_int_int_java_lang_String_boolean_
  fullName: graphics.Window.Window(int pwidth, int pheight, String ptitle, boolean recalculateProjectionOnResize)
  nameWithType: Window.Window(int pwidth, int pheight, String ptitle, boolean recalculateProjectionOnResize)
- uid: graphics.Window.Window(int,int,java.lang.String,boolean,float,boolean)
  name: Window(int pwidth, int pheight, String ptitle, boolean fullscreen, float minSceneLighting, boolean recalculateProjectionOnResize)
  href: api/graphics.Window.html#graphics_Window_Window_int_int_java_lang_String_boolean_float_boolean_
  fullName: graphics.Window.Window(int pwidth, int pheight, String ptitle, boolean fullscreen, float minSceneLighting, boolean recalculateProjectionOnResize)
  nameWithType: Window.Window(int pwidth, int pheight, String ptitle, boolean fullscreen, float minSceneLighting, boolean recalculateProjectionOnResize)
- uid: graphics.Window.Window(int,int,java.lang.String,float,boolean)
  name: Window(int pwidth, int pheight, String ptitle, float minSceneLighting, boolean recalculateProjectionOnResize)
  href: api/graphics.Window.html#graphics_Window_Window_int_int_java_lang_String_float_boolean_
  fullName: graphics.Window.Window(int pwidth, int pheight, String ptitle, float minSceneLighting, boolean recalculateProjectionOnResize)
  nameWithType: Window.Window(int pwidth, int pheight, String ptitle, float minSceneLighting, boolean recalculateProjectionOnResize)
- uid: graphics.Window.Window(java.lang.String)
  name: Window(String ptitle)
  href: api/graphics.Window.html#graphics_Window_Window_java_lang_String_
  fullName: graphics.Window.Window(String ptitle)
  nameWithType: Window.Window(String ptitle)
- uid: graphics.Window.Window(java.lang.String,boolean)
  name: Window(String ptitle, boolean recalculateProjectionOnResize)
  href: api/graphics.Window.html#graphics_Window_Window_java_lang_String_boolean_
  fullName: graphics.Window.Window(String ptitle, boolean recalculateProjectionOnResize)
  nameWithType: Window.Window(String ptitle, boolean recalculateProjectionOnResize)
- uid: graphics.Window.Window(java.lang.String,float,boolean)
  name: Window(String ptitle, float minSceneLighting, boolean recalculateProjectionOnResize)
  href: api/graphics.Window.html#graphics_Window_Window_java_lang_String_float_boolean_
  fullName: graphics.Window.Window(String ptitle, float minSceneLighting, boolean recalculateProjectionOnResize)
  nameWithType: Window.Window(String ptitle, float minSceneLighting, boolean recalculateProjectionOnResize)
- uid: graphics.Window.Window*
  name: Window
  href: api/graphics.Window.html#graphics_Window_Window_
  isSpec: "True"
  fullName: graphics.Window.Window
  nameWithType: Window.Window
  package: graphics
- uid: input
  name: input
  href: api/input.html
  fullName: input
  nameWithType: input
- uid: input.Buttons
  name: Buttons
  href: api/input.Buttons.html
  fullName: input.Buttons
  nameWithType: Buttons
- uid: input.Buttons.AZ_BUTTON_1
  name: AZ_BUTTON_1
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_1
  fullName: input.Buttons.AZ_BUTTON_1
  nameWithType: Buttons.AZ_BUTTON_1
- uid: input.Buttons.AZ_BUTTON_2
  name: AZ_BUTTON_2
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_2
  fullName: input.Buttons.AZ_BUTTON_2
  nameWithType: Buttons.AZ_BUTTON_2
- uid: input.Buttons.AZ_BUTTON_3
  name: AZ_BUTTON_3
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_3
  fullName: input.Buttons.AZ_BUTTON_3
  nameWithType: Buttons.AZ_BUTTON_3
- uid: input.Buttons.AZ_BUTTON_4
  name: AZ_BUTTON_4
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_4
  fullName: input.Buttons.AZ_BUTTON_4
  nameWithType: Buttons.AZ_BUTTON_4
- uid: input.Buttons.AZ_BUTTON_5
  name: AZ_BUTTON_5
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_5
  fullName: input.Buttons.AZ_BUTTON_5
  nameWithType: Buttons.AZ_BUTTON_5
- uid: input.Buttons.AZ_BUTTON_6
  name: AZ_BUTTON_6
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_6
  fullName: input.Buttons.AZ_BUTTON_6
  nameWithType: Buttons.AZ_BUTTON_6
- uid: input.Buttons.AZ_BUTTON_7
  name: AZ_BUTTON_7
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_7
  fullName: input.Buttons.AZ_BUTTON_7
  nameWithType: Buttons.AZ_BUTTON_7
- uid: input.Buttons.AZ_BUTTON_8
  name: AZ_BUTTON_8
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_8
  fullName: input.Buttons.AZ_BUTTON_8
  nameWithType: Buttons.AZ_BUTTON_8
- uid: input.Buttons.AZ_BUTTON_LAST
  name: AZ_BUTTON_LAST
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_LAST
  fullName: input.Buttons.AZ_BUTTON_LAST
  nameWithType: Buttons.AZ_BUTTON_LAST
- uid: input.Buttons.AZ_BUTTON_LEFT
  name: AZ_BUTTON_LEFT
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_LEFT
  fullName: input.Buttons.AZ_BUTTON_LEFT
  nameWithType: Buttons.AZ_BUTTON_LEFT
- uid: input.Buttons.AZ_BUTTON_MIDDLE
  name: AZ_BUTTON_MIDDLE
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_MIDDLE
  fullName: input.Buttons.AZ_BUTTON_MIDDLE
  nameWithType: Buttons.AZ_BUTTON_MIDDLE
- uid: input.Buttons.AZ_BUTTON_RIGHT
  name: AZ_BUTTON_RIGHT
  href: api/input.Buttons.html#input_Buttons_AZ_BUTTON_RIGHT
  fullName: input.Buttons.AZ_BUTTON_RIGHT
  nameWithType: Buttons.AZ_BUTTON_RIGHT
- uid: input.Buttons.Buttons()
  name: Buttons()
  href: api/input.Buttons.html#input_Buttons_Buttons__
  fullName: input.Buttons.Buttons()
  nameWithType: Buttons.Buttons()
- uid: input.Buttons.Buttons*
  name: Buttons
  href: api/input.Buttons.html#input_Buttons_Buttons_
  isSpec: "True"
  fullName: input.Buttons.Buttons
  nameWithType: Buttons.Buttons
  package: input
- uid: input.Gamepad
  name: Gamepad
  href: api/input.Gamepad.html
  fullName: input.Gamepad
  nameWithType: Gamepad
- uid: input.Gamepad.A
  name: A
  href: api/input.Gamepad.html#input_Gamepad_A
  fullName: input.Gamepad.A
  nameWithType: Gamepad.A
- uid: input.Gamepad.axis(int,int)
  name: axis(int controllerId, int axis)
  href: api/input.Gamepad.html#input_Gamepad_axis_int_int_
  fullName: input.Gamepad.axis(int controllerId, int axis)
  nameWithType: Gamepad.axis(int controllerId, int axis)
- uid: input.Gamepad.axis*
  name: axis
  href: api/input.Gamepad.html#input_Gamepad_axis_
  isSpec: "True"
  fullName: input.Gamepad.axis
  nameWithType: Gamepad.axis
  package: input
- uid: input.Gamepad.B
  name: B
  href: api/input.Gamepad.html#input_Gamepad_B
  fullName: input.Gamepad.B
  nameWithType: Gamepad.B
- uid: input.Gamepad.BACK
  name: BACK
  href: api/input.Gamepad.html#input_Gamepad_BACK
  fullName: input.Gamepad.BACK
  nameWithType: Gamepad.BACK
- uid: input.Gamepad.buttonPressed(int,int)
  name: buttonPressed(int controllerId, int button)
  href: api/input.Gamepad.html#input_Gamepad_buttonPressed_int_int_
  fullName: input.Gamepad.buttonPressed(int controllerId, int button)
  nameWithType: Gamepad.buttonPressed(int controllerId, int button)
- uid: input.Gamepad.buttonPressed*
  name: buttonPressed
  href: api/input.Gamepad.html#input_Gamepad_buttonPressed_
  isSpec: "True"
  fullName: input.Gamepad.buttonPressed
  nameWithType: Gamepad.buttonPressed
  package: input
- uid: input.Gamepad.controllersAvailable()
  name: controllersAvailable()
  href: api/input.Gamepad.html#input_Gamepad_controllersAvailable__
  fullName: input.Gamepad.controllersAvailable()
  nameWithType: Gamepad.controllersAvailable()
- uid: input.Gamepad.controllersAvailable*
  name: controllersAvailable
  href: api/input.Gamepad.html#input_Gamepad_controllersAvailable_
  isSpec: "True"
  fullName: input.Gamepad.controllersAvailable
  nameWithType: Gamepad.controllersAvailable
  package: input
- uid: input.Gamepad.D_DOWN
  name: D_DOWN
  href: api/input.Gamepad.html#input_Gamepad_D_DOWN
  fullName: input.Gamepad.D_DOWN
  nameWithType: Gamepad.D_DOWN
- uid: input.Gamepad.D_LEFT
  name: D_LEFT
  href: api/input.Gamepad.html#input_Gamepad_D_LEFT
  fullName: input.Gamepad.D_LEFT
  nameWithType: Gamepad.D_LEFT
- uid: input.Gamepad.D_RIGHT
  name: D_RIGHT
  href: api/input.Gamepad.html#input_Gamepad_D_RIGHT
  fullName: input.Gamepad.D_RIGHT
  nameWithType: Gamepad.D_RIGHT
- uid: input.Gamepad.D_UP
  name: D_UP
  href: api/input.Gamepad.html#input_Gamepad_D_UP
  fullName: input.Gamepad.D_UP
  nameWithType: Gamepad.D_UP
- uid: input.Gamepad.Gamepad()
  name: Gamepad()
  href: api/input.Gamepad.html#input_Gamepad_Gamepad__
  fullName: input.Gamepad.Gamepad()
  nameWithType: Gamepad.Gamepad()
- uid: input.Gamepad.Gamepad*
  name: Gamepad
  href: api/input.Gamepad.html#input_Gamepad_Gamepad_
  isSpec: "True"
  fullName: input.Gamepad.Gamepad
  nameWithType: Gamepad.Gamepad
  package: input
- uid: input.Gamepad.LEFT_SHOULDER
  name: LEFT_SHOULDER
  href: api/input.Gamepad.html#input_Gamepad_LEFT_SHOULDER
  fullName: input.Gamepad.LEFT_SHOULDER
  nameWithType: Gamepad.LEFT_SHOULDER
- uid: input.Gamepad.LEFT_STICK
  name: LEFT_STICK
  href: api/input.Gamepad.html#input_Gamepad_LEFT_STICK
  fullName: input.Gamepad.LEFT_STICK
  nameWithType: Gamepad.LEFT_STICK
- uid: input.Gamepad.LEFT_STICK_HORIZONTAL
  name: LEFT_STICK_HORIZONTAL
  href: api/input.Gamepad.html#input_Gamepad_LEFT_STICK_HORIZONTAL
  fullName: input.Gamepad.LEFT_STICK_HORIZONTAL
  nameWithType: Gamepad.LEFT_STICK_HORIZONTAL
- uid: input.Gamepad.LEFT_STICK_VERTICAL
  name: LEFT_STICK_VERTICAL
  href: api/input.Gamepad.html#input_Gamepad_LEFT_STICK_VERTICAL
  fullName: input.Gamepad.LEFT_STICK_VERTICAL
  nameWithType: Gamepad.LEFT_STICK_VERTICAL
- uid: input.Gamepad.LEFT_TRIGGER
  name: LEFT_TRIGGER
  href: api/input.Gamepad.html#input_Gamepad_LEFT_TRIGGER
  fullName: input.Gamepad.LEFT_TRIGGER
  nameWithType: Gamepad.LEFT_TRIGGER
- uid: input.Gamepad.RIGHT_SHOULDER
  name: RIGHT_SHOULDER
  href: api/input.Gamepad.html#input_Gamepad_RIGHT_SHOULDER
  fullName: input.Gamepad.RIGHT_SHOULDER
  nameWithType: Gamepad.RIGHT_SHOULDER
- uid: input.Gamepad.RIGHT_STICK
  name: RIGHT_STICK
  href: api/input.Gamepad.html#input_Gamepad_RIGHT_STICK
  fullName: input.Gamepad.RIGHT_STICK
  nameWithType: Gamepad.RIGHT_STICK
- uid: input.Gamepad.RIGHT_STICK_HORIZONTAL
  name: RIGHT_STICK_HORIZONTAL
  href: api/input.Gamepad.html#input_Gamepad_RIGHT_STICK_HORIZONTAL
  fullName: input.Gamepad.RIGHT_STICK_HORIZONTAL
  nameWithType: Gamepad.RIGHT_STICK_HORIZONTAL
- uid: input.Gamepad.RIGHT_STICK_VERITCAL
  name: RIGHT_STICK_VERITCAL
  href: api/input.Gamepad.html#input_Gamepad_RIGHT_STICK_VERITCAL
  fullName: input.Gamepad.RIGHT_STICK_VERITCAL
  nameWithType: Gamepad.RIGHT_STICK_VERITCAL
- uid: input.Gamepad.RIGHT_TRIGGER
  name: RIGHT_TRIGGER
  href: api/input.Gamepad.html#input_Gamepad_RIGHT_TRIGGER
  fullName: input.Gamepad.RIGHT_TRIGGER
  nameWithType: Gamepad.RIGHT_TRIGGER
- uid: input.Gamepad.START
  name: START
  href: api/input.Gamepad.html#input_Gamepad_START
  fullName: input.Gamepad.START
  nameWithType: Gamepad.START
- uid: input.Gamepad.X
  name: X
  href: api/input.Gamepad.html#input_Gamepad_X
  fullName: input.Gamepad.X
  nameWithType: Gamepad.X
- uid: input.Gamepad.XBOX
  name: XBOX
  href: api/input.Gamepad.html#input_Gamepad_XBOX
  fullName: input.Gamepad.XBOX
  nameWithType: Gamepad.XBOX
- uid: input.Gamepad.Y
  name: Y
  href: api/input.Gamepad.html#input_Gamepad_Y
  fullName: input.Gamepad.Y
  nameWithType: Gamepad.Y
- uid: input.GamepadButtons
  name: GamepadButtons
  href: api/input.GamepadButtons.html
  fullName: input.GamepadButtons
  nameWithType: GamepadButtons
- uid: input.GamepadButtons.AZ_BUTTON_A
  name: AZ_BUTTON_A
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_A
  fullName: input.GamepadButtons.AZ_BUTTON_A
  nameWithType: GamepadButtons.AZ_BUTTON_A
- uid: input.GamepadButtons.AZ_BUTTON_B
  name: AZ_BUTTON_B
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_B
  fullName: input.GamepadButtons.AZ_BUTTON_B
  nameWithType: GamepadButtons.AZ_BUTTON_B
- uid: input.GamepadButtons.AZ_BUTTON_BACK
  name: AZ_BUTTON_BACK
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_BACK
  fullName: input.GamepadButtons.AZ_BUTTON_BACK
  nameWithType: GamepadButtons.AZ_BUTTON_BACK
- uid: input.GamepadButtons.AZ_BUTTON_CIRCLE
  name: AZ_BUTTON_CIRCLE
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_CIRCLE
  fullName: input.GamepadButtons.AZ_BUTTON_CIRCLE
  nameWithType: GamepadButtons.AZ_BUTTON_CIRCLE
- uid: input.GamepadButtons.AZ_BUTTON_CROSS
  name: AZ_BUTTON_CROSS
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_CROSS
  fullName: input.GamepadButtons.AZ_BUTTON_CROSS
  nameWithType: GamepadButtons.AZ_BUTTON_CROSS
- uid: input.GamepadButtons.AZ_BUTTON_DPAD_DOWN
  name: AZ_BUTTON_DPAD_DOWN
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_DPAD_DOWN
  fullName: input.GamepadButtons.AZ_BUTTON_DPAD_DOWN
  nameWithType: GamepadButtons.AZ_BUTTON_DPAD_DOWN
- uid: input.GamepadButtons.AZ_BUTTON_DPAD_LEFT
  name: AZ_BUTTON_DPAD_LEFT
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_DPAD_LEFT
  fullName: input.GamepadButtons.AZ_BUTTON_DPAD_LEFT
  nameWithType: GamepadButtons.AZ_BUTTON_DPAD_LEFT
- uid: input.GamepadButtons.AZ_BUTTON_DPAD_RIGHT
  name: AZ_BUTTON_DPAD_RIGHT
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_DPAD_RIGHT
  fullName: input.GamepadButtons.AZ_BUTTON_DPAD_RIGHT
  nameWithType: GamepadButtons.AZ_BUTTON_DPAD_RIGHT
- uid: input.GamepadButtons.AZ_BUTTON_DPAD_UP
  name: AZ_BUTTON_DPAD_UP
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_DPAD_UP
  fullName: input.GamepadButtons.AZ_BUTTON_DPAD_UP
  nameWithType: GamepadButtons.AZ_BUTTON_DPAD_UP
- uid: input.GamepadButtons.AZ_BUTTON_GUIDE
  name: AZ_BUTTON_GUIDE
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_GUIDE
  fullName: input.GamepadButtons.AZ_BUTTON_GUIDE
  nameWithType: GamepadButtons.AZ_BUTTON_GUIDE
- uid: input.GamepadButtons.AZ_BUTTON_LAST
  name: AZ_BUTTON_LAST
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_LAST
  fullName: input.GamepadButtons.AZ_BUTTON_LAST
  nameWithType: GamepadButtons.AZ_BUTTON_LAST
- uid: input.GamepadButtons.AZ_BUTTON_LEFT_BUMPER
  name: AZ_BUTTON_LEFT_BUMPER
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_LEFT_BUMPER
  fullName: input.GamepadButtons.AZ_BUTTON_LEFT_BUMPER
  nameWithType: GamepadButtons.AZ_BUTTON_LEFT_BUMPER
- uid: input.GamepadButtons.AZ_BUTTON_LEFT_THUMB
  name: AZ_BUTTON_LEFT_THUMB
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_LEFT_THUMB
  fullName: input.GamepadButtons.AZ_BUTTON_LEFT_THUMB
  nameWithType: GamepadButtons.AZ_BUTTON_LEFT_THUMB
- uid: input.GamepadButtons.AZ_BUTTON_RIGHT_BUMPER
  name: AZ_BUTTON_RIGHT_BUMPER
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_RIGHT_BUMPER
  fullName: input.GamepadButtons.AZ_BUTTON_RIGHT_BUMPER
  nameWithType: GamepadButtons.AZ_BUTTON_RIGHT_BUMPER
- uid: input.GamepadButtons.AZ_BUTTON_RIGHT_THUMB
  name: AZ_BUTTON_RIGHT_THUMB
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_RIGHT_THUMB
  fullName: input.GamepadButtons.AZ_BUTTON_RIGHT_THUMB
  nameWithType: GamepadButtons.AZ_BUTTON_RIGHT_THUMB
- uid: input.GamepadButtons.AZ_BUTTON_SQUARE
  name: AZ_BUTTON_SQUARE
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_SQUARE
  fullName: input.GamepadButtons.AZ_BUTTON_SQUARE
  nameWithType: GamepadButtons.AZ_BUTTON_SQUARE
- uid: input.GamepadButtons.AZ_BUTTON_START
  name: AZ_BUTTON_START
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_START
  fullName: input.GamepadButtons.AZ_BUTTON_START
  nameWithType: GamepadButtons.AZ_BUTTON_START
- uid: input.GamepadButtons.AZ_BUTTON_TRIANGLE
  name: AZ_BUTTON_TRIANGLE
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_TRIANGLE
  fullName: input.GamepadButtons.AZ_BUTTON_TRIANGLE
  nameWithType: GamepadButtons.AZ_BUTTON_TRIANGLE
- uid: input.GamepadButtons.AZ_BUTTON_X
  name: AZ_BUTTON_X
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_X
  fullName: input.GamepadButtons.AZ_BUTTON_X
  nameWithType: GamepadButtons.AZ_BUTTON_X
- uid: input.GamepadButtons.AZ_BUTTON_Y
  name: AZ_BUTTON_Y
  href: api/input.GamepadButtons.html#input_GamepadButtons_AZ_BUTTON_Y
  fullName: input.GamepadButtons.AZ_BUTTON_Y
  nameWithType: GamepadButtons.AZ_BUTTON_Y
- uid: input.GamepadButtons.GamepadButtons()
  name: GamepadButtons()
  href: api/input.GamepadButtons.html#input_GamepadButtons_GamepadButtons__
  fullName: input.GamepadButtons.GamepadButtons()
  nameWithType: GamepadButtons.GamepadButtons()
- uid: input.GamepadButtons.GamepadButtons*
  name: GamepadButtons
  href: api/input.GamepadButtons.html#input_GamepadButtons_GamepadButtons_
  isSpec: "True"
  fullName: input.GamepadButtons.GamepadButtons
  nameWithType: GamepadButtons.GamepadButtons
  package: input
- uid: input.Keyboard
  name: Keyboard
  href: api/input.Keyboard.html
  fullName: input.Keyboard
  nameWithType: Keyboard
- uid: input.Keyboard.A_KEY
  name: A_KEY
  href: api/input.Keyboard.html#input_Keyboard_A_KEY
  fullName: input.Keyboard.A_KEY
  nameWithType: Keyboard.A_KEY
- uid: input.Keyboard.D_KEY
  name: D_KEY
  href: api/input.Keyboard.html#input_Keyboard_D_KEY
  fullName: input.Keyboard.D_KEY
  nameWithType: Keyboard.D_KEY
- uid: input.Keyboard.DOWN_ARROW
  name: DOWN_ARROW
  href: api/input.Keyboard.html#input_Keyboard_DOWN_ARROW
  fullName: input.Keyboard.DOWN_ARROW
  nameWithType: Keyboard.DOWN_ARROW
- uid: input.Keyboard.getKey(int)
  name: getKey(int keycode)
  href: api/input.Keyboard.html#input_Keyboard_getKey_int_
  fullName: input.Keyboard.getKey(int keycode)
  nameWithType: Keyboard.getKey(int keycode)
- uid: input.Keyboard.getKey*
  name: getKey
  href: api/input.Keyboard.html#input_Keyboard_getKey_
  isSpec: "True"
  fullName: input.Keyboard.getKey
  nameWithType: Keyboard.getKey
  package: input
- uid: input.Keyboard.getKeyDown(int)
  name: getKeyDown(int keycode)
  href: api/input.Keyboard.html#input_Keyboard_getKeyDown_int_
  fullName: input.Keyboard.getKeyDown(int keycode)
  nameWithType: Keyboard.getKeyDown(int keycode)
- uid: input.Keyboard.getKeyDown*
  name: getKeyDown
  href: api/input.Keyboard.html#input_Keyboard_getKeyDown_
  isSpec: "True"
  fullName: input.Keyboard.getKeyDown
  nameWithType: Keyboard.getKeyDown
  package: input
- uid: input.Keyboard.getKeyHeld(int)
  name: getKeyHeld(int keycode)
  href: api/input.Keyboard.html#input_Keyboard_getKeyHeld_int_
  fullName: input.Keyboard.getKeyHeld(int keycode)
  nameWithType: Keyboard.getKeyHeld(int keycode)
- uid: input.Keyboard.getKeyHeld*
  name: getKeyHeld
  href: api/input.Keyboard.html#input_Keyboard_getKeyHeld_
  isSpec: "True"
  fullName: input.Keyboard.getKeyHeld
  nameWithType: Keyboard.getKeyHeld
  package: input
- uid: input.Keyboard.getKeyUp(int)
  name: getKeyUp(int keycode)
  href: api/input.Keyboard.html#input_Keyboard_getKeyUp_int_
  fullName: input.Keyboard.getKeyUp(int keycode)
  nameWithType: Keyboard.getKeyUp(int keycode)
- uid: input.Keyboard.getKeyUp*
  name: getKeyUp
  href: api/input.Keyboard.html#input_Keyboard_getKeyUp_
  isSpec: "True"
  fullName: input.Keyboard.getKeyUp
  nameWithType: Keyboard.getKeyUp
  package: input
- uid: input.Keyboard.Keyboard()
  name: Keyboard()
  href: api/input.Keyboard.html#input_Keyboard_Keyboard__
  fullName: input.Keyboard.Keyboard()
  nameWithType: Keyboard.Keyboard()
- uid: input.Keyboard.Keyboard*
  name: Keyboard
  href: api/input.Keyboard.html#input_Keyboard_Keyboard_
  isSpec: "True"
  fullName: input.Keyboard.Keyboard
  nameWithType: Keyboard.Keyboard
  package: input
- uid: input.Keyboard.keyDownOrHold(int)
  name: keyDownOrHold(int keycode)
  href: api/input.Keyboard.html#input_Keyboard_keyDownOrHold_int_
  fullName: input.Keyboard.keyDownOrHold(int keycode)
  nameWithType: Keyboard.keyDownOrHold(int keycode)
- uid: input.Keyboard.keyDownOrHold*
  name: keyDownOrHold
  href: api/input.Keyboard.html#input_Keyboard_keyDownOrHold_
  isSpec: "True"
  fullName: input.Keyboard.keyDownOrHold
  nameWithType: Keyboard.keyDownOrHold
  package: input
- uid: input.Keyboard.keystateBitfields
  name: keystateBitfields
  href: api/input.Keyboard.html#input_Keyboard_keystateBitfields
  fullName: input.Keyboard.keystateBitfields
  nameWithType: Keyboard.keystateBitfields
- uid: input.Keyboard.LEFT_ARROW
  name: LEFT_ARROW
  href: api/input.Keyboard.html#input_Keyboard_LEFT_ARROW
  fullName: input.Keyboard.LEFT_ARROW
  nameWithType: Keyboard.LEFT_ARROW
- uid: input.Keyboard.RIGHT_ARROW
  name: RIGHT_ARROW
  href: api/input.Keyboard.html#input_Keyboard_RIGHT_ARROW
  fullName: input.Keyboard.RIGHT_ARROW
  nameWithType: Keyboard.RIGHT_ARROW
- uid: input.Keyboard.S_KEY
  name: S_KEY
  href: api/input.Keyboard.html#input_Keyboard_S_KEY
  fullName: input.Keyboard.S_KEY
  nameWithType: Keyboard.S_KEY
- uid: input.Keyboard.setupCallbacks()
  name: setupCallbacks()
  href: api/input.Keyboard.html#input_Keyboard_setupCallbacks__
  fullName: input.Keyboard.setupCallbacks()
  nameWithType: Keyboard.setupCallbacks()
- uid: input.Keyboard.setupCallbacks*
  name: setupCallbacks
  href: api/input.Keyboard.html#input_Keyboard_setupCallbacks_
  isSpec: "True"
  fullName: input.Keyboard.setupCallbacks
  nameWithType: Keyboard.setupCallbacks
  package: input
- uid: input.Keyboard.SPACE
  name: SPACE
  href: api/input.Keyboard.html#input_Keyboard_SPACE
  fullName: input.Keyboard.SPACE
  nameWithType: Keyboard.SPACE
- uid: input.Keyboard.UP_ARROW
  name: UP_ARROW
  href: api/input.Keyboard.html#input_Keyboard_UP_ARROW
  fullName: input.Keyboard.UP_ARROW
  nameWithType: Keyboard.UP_ARROW
- uid: input.Keyboard.W_KEY
  name: W_KEY
  href: api/input.Keyboard.html#input_Keyboard_W_KEY
  fullName: input.Keyboard.W_KEY
  nameWithType: Keyboard.W_KEY
- uid: input.Keys
  name: Keys
  href: api/input.Keys.html
  fullName: input.Keys
  nameWithType: Keys
- uid: input.Keys.AZ_KEY_0
  name: AZ_KEY_0
  href: api/input.Keys.html#input_Keys_AZ_KEY_0
  fullName: input.Keys.AZ_KEY_0
  nameWithType: Keys.AZ_KEY_0
- uid: input.Keys.AZ_KEY_1
  name: AZ_KEY_1
  href: api/input.Keys.html#input_Keys_AZ_KEY_1
  fullName: input.Keys.AZ_KEY_1
  nameWithType: Keys.AZ_KEY_1
- uid: input.Keys.AZ_KEY_2
  name: AZ_KEY_2
  href: api/input.Keys.html#input_Keys_AZ_KEY_2
  fullName: input.Keys.AZ_KEY_2
  nameWithType: Keys.AZ_KEY_2
- uid: input.Keys.AZ_KEY_3
  name: AZ_KEY_3
  href: api/input.Keys.html#input_Keys_AZ_KEY_3
  fullName: input.Keys.AZ_KEY_3
  nameWithType: Keys.AZ_KEY_3
- uid: input.Keys.AZ_KEY_4
  name: AZ_KEY_4
  href: api/input.Keys.html#input_Keys_AZ_KEY_4
  fullName: input.Keys.AZ_KEY_4
  nameWithType: Keys.AZ_KEY_4
- uid: input.Keys.AZ_KEY_5
  name: AZ_KEY_5
  href: api/input.Keys.html#input_Keys_AZ_KEY_5
  fullName: input.Keys.AZ_KEY_5
  nameWithType: Keys.AZ_KEY_5
- uid: input.Keys.AZ_KEY_6
  name: AZ_KEY_6
  href: api/input.Keys.html#input_Keys_AZ_KEY_6
  fullName: input.Keys.AZ_KEY_6
  nameWithType: Keys.AZ_KEY_6
- uid: input.Keys.AZ_KEY_7
  name: AZ_KEY_7
  href: api/input.Keys.html#input_Keys_AZ_KEY_7
  fullName: input.Keys.AZ_KEY_7
  nameWithType: Keys.AZ_KEY_7
- uid: input.Keys.AZ_KEY_8
  name: AZ_KEY_8
  href: api/input.Keys.html#input_Keys_AZ_KEY_8
  fullName: input.Keys.AZ_KEY_8
  nameWithType: Keys.AZ_KEY_8
- uid: input.Keys.AZ_KEY_9
  name: AZ_KEY_9
  href: api/input.Keys.html#input_Keys_AZ_KEY_9
  fullName: input.Keys.AZ_KEY_9
  nameWithType: Keys.AZ_KEY_9
- uid: input.Keys.AZ_KEY_A
  name: AZ_KEY_A
  href: api/input.Keys.html#input_Keys_AZ_KEY_A
  fullName: input.Keys.AZ_KEY_A
  nameWithType: Keys.AZ_KEY_A
- uid: input.Keys.AZ_KEY_APOSTROPHE
  name: AZ_KEY_APOSTROPHE
  href: api/input.Keys.html#input_Keys_AZ_KEY_APOSTROPHE
  fullName: input.Keys.AZ_KEY_APOSTROPHE
  nameWithType: Keys.AZ_KEY_APOSTROPHE
- uid: input.Keys.AZ_KEY_B
  name: AZ_KEY_B
  href: api/input.Keys.html#input_Keys_AZ_KEY_B
  fullName: input.Keys.AZ_KEY_B
  nameWithType: Keys.AZ_KEY_B
- uid: input.Keys.AZ_KEY_BACKSLASH
  name: AZ_KEY_BACKSLASH
  href: api/input.Keys.html#input_Keys_AZ_KEY_BACKSLASH
  fullName: input.Keys.AZ_KEY_BACKSLASH
  nameWithType: Keys.AZ_KEY_BACKSLASH
- uid: input.Keys.AZ_KEY_BACKSPACE
  name: AZ_KEY_BACKSPACE
  href: api/input.Keys.html#input_Keys_AZ_KEY_BACKSPACE
  fullName: input.Keys.AZ_KEY_BACKSPACE
  nameWithType: Keys.AZ_KEY_BACKSPACE
- uid: input.Keys.AZ_KEY_C
  name: AZ_KEY_C
  href: api/input.Keys.html#input_Keys_AZ_KEY_C
  fullName: input.Keys.AZ_KEY_C
  nameWithType: Keys.AZ_KEY_C
- uid: input.Keys.AZ_KEY_CAPS_LOCK
  name: AZ_KEY_CAPS_LOCK
  href: api/input.Keys.html#input_Keys_AZ_KEY_CAPS_LOCK
  fullName: input.Keys.AZ_KEY_CAPS_LOCK
  nameWithType: Keys.AZ_KEY_CAPS_LOCK
- uid: input.Keys.AZ_KEY_COMMA
  name: AZ_KEY_COMMA
  href: api/input.Keys.html#input_Keys_AZ_KEY_COMMA
  fullName: input.Keys.AZ_KEY_COMMA
  nameWithType: Keys.AZ_KEY_COMMA
- uid: input.Keys.AZ_KEY_D
  name: AZ_KEY_D
  href: api/input.Keys.html#input_Keys_AZ_KEY_D
  fullName: input.Keys.AZ_KEY_D
  nameWithType: Keys.AZ_KEY_D
- uid: input.Keys.AZ_KEY_DELETE
  name: AZ_KEY_DELETE
  href: api/input.Keys.html#input_Keys_AZ_KEY_DELETE
  fullName: input.Keys.AZ_KEY_DELETE
  nameWithType: Keys.AZ_KEY_DELETE
- uid: input.Keys.AZ_KEY_DOWN
  name: AZ_KEY_DOWN
  href: api/input.Keys.html#input_Keys_AZ_KEY_DOWN
  fullName: input.Keys.AZ_KEY_DOWN
  nameWithType: Keys.AZ_KEY_DOWN
- uid: input.Keys.AZ_KEY_E
  name: AZ_KEY_E
  href: api/input.Keys.html#input_Keys_AZ_KEY_E
  fullName: input.Keys.AZ_KEY_E
  nameWithType: Keys.AZ_KEY_E
- uid: input.Keys.AZ_KEY_END
  name: AZ_KEY_END
  href: api/input.Keys.html#input_Keys_AZ_KEY_END
  fullName: input.Keys.AZ_KEY_END
  nameWithType: Keys.AZ_KEY_END
- uid: input.Keys.AZ_KEY_ENTER
  name: AZ_KEY_ENTER
  href: api/input.Keys.html#input_Keys_AZ_KEY_ENTER
  fullName: input.Keys.AZ_KEY_ENTER
  nameWithType: Keys.AZ_KEY_ENTER
- uid: input.Keys.AZ_KEY_EQUAL
  name: AZ_KEY_EQUAL
  href: api/input.Keys.html#input_Keys_AZ_KEY_EQUAL
  fullName: input.Keys.AZ_KEY_EQUAL
  nameWithType: Keys.AZ_KEY_EQUAL
- uid: input.Keys.AZ_KEY_ESCAPE
  name: AZ_KEY_ESCAPE
  href: api/input.Keys.html#input_Keys_AZ_KEY_ESCAPE
  fullName: input.Keys.AZ_KEY_ESCAPE
  nameWithType: Keys.AZ_KEY_ESCAPE
- uid: input.Keys.AZ_KEY_F
  name: AZ_KEY_F
  href: api/input.Keys.html#input_Keys_AZ_KEY_F
  fullName: input.Keys.AZ_KEY_F
  nameWithType: Keys.AZ_KEY_F
- uid: input.Keys.AZ_KEY_F1
  name: AZ_KEY_F1
  href: api/input.Keys.html#input_Keys_AZ_KEY_F1
  fullName: input.Keys.AZ_KEY_F1
  nameWithType: Keys.AZ_KEY_F1
- uid: input.Keys.AZ_KEY_F10
  name: AZ_KEY_F10
  href: api/input.Keys.html#input_Keys_AZ_KEY_F10
  fullName: input.Keys.AZ_KEY_F10
  nameWithType: Keys.AZ_KEY_F10
- uid: input.Keys.AZ_KEY_F11
  name: AZ_KEY_F11
  href: api/input.Keys.html#input_Keys_AZ_KEY_F11
  fullName: input.Keys.AZ_KEY_F11
  nameWithType: Keys.AZ_KEY_F11
- uid: input.Keys.AZ_KEY_F12
  name: AZ_KEY_F12
  href: api/input.Keys.html#input_Keys_AZ_KEY_F12
  fullName: input.Keys.AZ_KEY_F12
  nameWithType: Keys.AZ_KEY_F12
- uid: input.Keys.AZ_KEY_F13
  name: AZ_KEY_F13
  href: api/input.Keys.html#input_Keys_AZ_KEY_F13
  fullName: input.Keys.AZ_KEY_F13
  nameWithType: Keys.AZ_KEY_F13
- uid: input.Keys.AZ_KEY_F14
  name: AZ_KEY_F14
  href: api/input.Keys.html#input_Keys_AZ_KEY_F14
  fullName: input.Keys.AZ_KEY_F14
  nameWithType: Keys.AZ_KEY_F14
- uid: input.Keys.AZ_KEY_F15
  name: AZ_KEY_F15
  href: api/input.Keys.html#input_Keys_AZ_KEY_F15
  fullName: input.Keys.AZ_KEY_F15
  nameWithType: Keys.AZ_KEY_F15
- uid: input.Keys.AZ_KEY_F16
  name: AZ_KEY_F16
  href: api/input.Keys.html#input_Keys_AZ_KEY_F16
  fullName: input.Keys.AZ_KEY_F16
  nameWithType: Keys.AZ_KEY_F16
- uid: input.Keys.AZ_KEY_F17
  name: AZ_KEY_F17
  href: api/input.Keys.html#input_Keys_AZ_KEY_F17
  fullName: input.Keys.AZ_KEY_F17
  nameWithType: Keys.AZ_KEY_F17
- uid: input.Keys.AZ_KEY_F18
  name: AZ_KEY_F18
  href: api/input.Keys.html#input_Keys_AZ_KEY_F18
  fullName: input.Keys.AZ_KEY_F18
  nameWithType: Keys.AZ_KEY_F18
- uid: input.Keys.AZ_KEY_F19
  name: AZ_KEY_F19
  href: api/input.Keys.html#input_Keys_AZ_KEY_F19
  fullName: input.Keys.AZ_KEY_F19
  nameWithType: Keys.AZ_KEY_F19
- uid: input.Keys.AZ_KEY_F2
  name: AZ_KEY_F2
  href: api/input.Keys.html#input_Keys_AZ_KEY_F2
  fullName: input.Keys.AZ_KEY_F2
  nameWithType: Keys.AZ_KEY_F2
- uid: input.Keys.AZ_KEY_F20
  name: AZ_KEY_F20
  href: api/input.Keys.html#input_Keys_AZ_KEY_F20
  fullName: input.Keys.AZ_KEY_F20
  nameWithType: Keys.AZ_KEY_F20
- uid: input.Keys.AZ_KEY_F21
  name: AZ_KEY_F21
  href: api/input.Keys.html#input_Keys_AZ_KEY_F21
  fullName: input.Keys.AZ_KEY_F21
  nameWithType: Keys.AZ_KEY_F21
- uid: input.Keys.AZ_KEY_F22
  name: AZ_KEY_F22
  href: api/input.Keys.html#input_Keys_AZ_KEY_F22
  fullName: input.Keys.AZ_KEY_F22
  nameWithType: Keys.AZ_KEY_F22
- uid: input.Keys.AZ_KEY_F23
  name: AZ_KEY_F23
  href: api/input.Keys.html#input_Keys_AZ_KEY_F23
  fullName: input.Keys.AZ_KEY_F23
  nameWithType: Keys.AZ_KEY_F23
- uid: input.Keys.AZ_KEY_F24
  name: AZ_KEY_F24
  href: api/input.Keys.html#input_Keys_AZ_KEY_F24
  fullName: input.Keys.AZ_KEY_F24
  nameWithType: Keys.AZ_KEY_F24
- uid: input.Keys.AZ_KEY_F25
  name: AZ_KEY_F25
  href: api/input.Keys.html#input_Keys_AZ_KEY_F25
  fullName: input.Keys.AZ_KEY_F25
  nameWithType: Keys.AZ_KEY_F25
- uid: input.Keys.AZ_KEY_F3
  name: AZ_KEY_F3
  href: api/input.Keys.html#input_Keys_AZ_KEY_F3
  fullName: input.Keys.AZ_KEY_F3
  nameWithType: Keys.AZ_KEY_F3
- uid: input.Keys.AZ_KEY_F4
  name: AZ_KEY_F4
  href: api/input.Keys.html#input_Keys_AZ_KEY_F4
  fullName: input.Keys.AZ_KEY_F4
  nameWithType: Keys.AZ_KEY_F4
- uid: input.Keys.AZ_KEY_F5
  name: AZ_KEY_F5
  href: api/input.Keys.html#input_Keys_AZ_KEY_F5
  fullName: input.Keys.AZ_KEY_F5
  nameWithType: Keys.AZ_KEY_F5
- uid: input.Keys.AZ_KEY_F6
  name: AZ_KEY_F6
  href: api/input.Keys.html#input_Keys_AZ_KEY_F6
  fullName: input.Keys.AZ_KEY_F6
  nameWithType: Keys.AZ_KEY_F6
- uid: input.Keys.AZ_KEY_F7
  name: AZ_KEY_F7
  href: api/input.Keys.html#input_Keys_AZ_KEY_F7
  fullName: input.Keys.AZ_KEY_F7
  nameWithType: Keys.AZ_KEY_F7
- uid: input.Keys.AZ_KEY_F8
  name: AZ_KEY_F8
  href: api/input.Keys.html#input_Keys_AZ_KEY_F8
  fullName: input.Keys.AZ_KEY_F8
  nameWithType: Keys.AZ_KEY_F8
- uid: input.Keys.AZ_KEY_F9
  name: AZ_KEY_F9
  href: api/input.Keys.html#input_Keys_AZ_KEY_F9
  fullName: input.Keys.AZ_KEY_F9
  nameWithType: Keys.AZ_KEY_F9
- uid: input.Keys.AZ_KEY_G
  name: AZ_KEY_G
  href: api/input.Keys.html#input_Keys_AZ_KEY_G
  fullName: input.Keys.AZ_KEY_G
  nameWithType: Keys.AZ_KEY_G
- uid: input.Keys.AZ_KEY_GRAVE_ACCENT
  name: AZ_KEY_GRAVE_ACCENT
  href: api/input.Keys.html#input_Keys_AZ_KEY_GRAVE_ACCENT
  fullName: input.Keys.AZ_KEY_GRAVE_ACCENT
  nameWithType: Keys.AZ_KEY_GRAVE_ACCENT
- uid: input.Keys.AZ_KEY_H
  name: AZ_KEY_H
  href: api/input.Keys.html#input_Keys_AZ_KEY_H
  fullName: input.Keys.AZ_KEY_H
  nameWithType: Keys.AZ_KEY_H
- uid: input.Keys.AZ_KEY_HOME
  name: AZ_KEY_HOME
  href: api/input.Keys.html#input_Keys_AZ_KEY_HOME
  fullName: input.Keys.AZ_KEY_HOME
  nameWithType: Keys.AZ_KEY_HOME
- uid: input.Keys.AZ_KEY_I
  name: AZ_KEY_I
  href: api/input.Keys.html#input_Keys_AZ_KEY_I
  fullName: input.Keys.AZ_KEY_I
  nameWithType: Keys.AZ_KEY_I
- uid: input.Keys.AZ_KEY_INSERT
  name: AZ_KEY_INSERT
  href: api/input.Keys.html#input_Keys_AZ_KEY_INSERT
  fullName: input.Keys.AZ_KEY_INSERT
  nameWithType: Keys.AZ_KEY_INSERT
- uid: input.Keys.AZ_KEY_J
  name: AZ_KEY_J
  href: api/input.Keys.html#input_Keys_AZ_KEY_J
  fullName: input.Keys.AZ_KEY_J
  nameWithType: Keys.AZ_KEY_J
- uid: input.Keys.AZ_KEY_K
  name: AZ_KEY_K
  href: api/input.Keys.html#input_Keys_AZ_KEY_K
  fullName: input.Keys.AZ_KEY_K
  nameWithType: Keys.AZ_KEY_K
- uid: input.Keys.AZ_KEY_KP_0
  name: AZ_KEY_KP_0
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_0
  fullName: input.Keys.AZ_KEY_KP_0
  nameWithType: Keys.AZ_KEY_KP_0
- uid: input.Keys.AZ_KEY_KP_1
  name: AZ_KEY_KP_1
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_1
  fullName: input.Keys.AZ_KEY_KP_1
  nameWithType: Keys.AZ_KEY_KP_1
- uid: input.Keys.AZ_KEY_KP_2
  name: AZ_KEY_KP_2
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_2
  fullName: input.Keys.AZ_KEY_KP_2
  nameWithType: Keys.AZ_KEY_KP_2
- uid: input.Keys.AZ_KEY_KP_3
  name: AZ_KEY_KP_3
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_3
  fullName: input.Keys.AZ_KEY_KP_3
  nameWithType: Keys.AZ_KEY_KP_3
- uid: input.Keys.AZ_KEY_KP_4
  name: AZ_KEY_KP_4
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_4
  fullName: input.Keys.AZ_KEY_KP_4
  nameWithType: Keys.AZ_KEY_KP_4
- uid: input.Keys.AZ_KEY_KP_5
  name: AZ_KEY_KP_5
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_5
  fullName: input.Keys.AZ_KEY_KP_5
  nameWithType: Keys.AZ_KEY_KP_5
- uid: input.Keys.AZ_KEY_KP_6
  name: AZ_KEY_KP_6
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_6
  fullName: input.Keys.AZ_KEY_KP_6
  nameWithType: Keys.AZ_KEY_KP_6
- uid: input.Keys.AZ_KEY_KP_7
  name: AZ_KEY_KP_7
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_7
  fullName: input.Keys.AZ_KEY_KP_7
  nameWithType: Keys.AZ_KEY_KP_7
- uid: input.Keys.AZ_KEY_KP_8
  name: AZ_KEY_KP_8
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_8
  fullName: input.Keys.AZ_KEY_KP_8
  nameWithType: Keys.AZ_KEY_KP_8
- uid: input.Keys.AZ_KEY_KP_9
  name: AZ_KEY_KP_9
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_9
  fullName: input.Keys.AZ_KEY_KP_9
  nameWithType: Keys.AZ_KEY_KP_9
- uid: input.Keys.AZ_KEY_KP_ADD
  name: AZ_KEY_KP_ADD
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_ADD
  fullName: input.Keys.AZ_KEY_KP_ADD
  nameWithType: Keys.AZ_KEY_KP_ADD
- uid: input.Keys.AZ_KEY_KP_DECIMAL
  name: AZ_KEY_KP_DECIMAL
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_DECIMAL
  fullName: input.Keys.AZ_KEY_KP_DECIMAL
  nameWithType: Keys.AZ_KEY_KP_DECIMAL
- uid: input.Keys.AZ_KEY_KP_DIVIDE
  name: AZ_KEY_KP_DIVIDE
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_DIVIDE
  fullName: input.Keys.AZ_KEY_KP_DIVIDE
  nameWithType: Keys.AZ_KEY_KP_DIVIDE
- uid: input.Keys.AZ_KEY_KP_ENTER
  name: AZ_KEY_KP_ENTER
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_ENTER
  fullName: input.Keys.AZ_KEY_KP_ENTER
  nameWithType: Keys.AZ_KEY_KP_ENTER
- uid: input.Keys.AZ_KEY_KP_EQUAL
  name: AZ_KEY_KP_EQUAL
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_EQUAL
  fullName: input.Keys.AZ_KEY_KP_EQUAL
  nameWithType: Keys.AZ_KEY_KP_EQUAL
- uid: input.Keys.AZ_KEY_KP_MULTIPLY
  name: AZ_KEY_KP_MULTIPLY
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_MULTIPLY
  fullName: input.Keys.AZ_KEY_KP_MULTIPLY
  nameWithType: Keys.AZ_KEY_KP_MULTIPLY
- uid: input.Keys.AZ_KEY_KP_SUBTRACT
  name: AZ_KEY_KP_SUBTRACT
  href: api/input.Keys.html#input_Keys_AZ_KEY_KP_SUBTRACT
  fullName: input.Keys.AZ_KEY_KP_SUBTRACT
  nameWithType: Keys.AZ_KEY_KP_SUBTRACT
- uid: input.Keys.AZ_KEY_L
  name: AZ_KEY_L
  href: api/input.Keys.html#input_Keys_AZ_KEY_L
  fullName: input.Keys.AZ_KEY_L
  nameWithType: Keys.AZ_KEY_L
- uid: input.Keys.AZ_KEY_LAST
  name: AZ_KEY_LAST
  href: api/input.Keys.html#input_Keys_AZ_KEY_LAST
  fullName: input.Keys.AZ_KEY_LAST
  nameWithType: Keys.AZ_KEY_LAST
- uid: input.Keys.AZ_KEY_LEFT
  name: AZ_KEY_LEFT
  href: api/input.Keys.html#input_Keys_AZ_KEY_LEFT
  fullName: input.Keys.AZ_KEY_LEFT
  nameWithType: Keys.AZ_KEY_LEFT
- uid: input.Keys.AZ_KEY_LEFT_ALT
  name: AZ_KEY_LEFT_ALT
  href: api/input.Keys.html#input_Keys_AZ_KEY_LEFT_ALT
  fullName: input.Keys.AZ_KEY_LEFT_ALT
  nameWithType: Keys.AZ_KEY_LEFT_ALT
- uid: input.Keys.AZ_KEY_LEFT_BRACKET
  name: AZ_KEY_LEFT_BRACKET
  href: api/input.Keys.html#input_Keys_AZ_KEY_LEFT_BRACKET
  fullName: input.Keys.AZ_KEY_LEFT_BRACKET
  nameWithType: Keys.AZ_KEY_LEFT_BRACKET
- uid: input.Keys.AZ_KEY_LEFT_CONTROL
  name: AZ_KEY_LEFT_CONTROL
  href: api/input.Keys.html#input_Keys_AZ_KEY_LEFT_CONTROL
  fullName: input.Keys.AZ_KEY_LEFT_CONTROL
  nameWithType: Keys.AZ_KEY_LEFT_CONTROL
- uid: input.Keys.AZ_KEY_LEFT_SHIFT
  name: AZ_KEY_LEFT_SHIFT
  href: api/input.Keys.html#input_Keys_AZ_KEY_LEFT_SHIFT
  fullName: input.Keys.AZ_KEY_LEFT_SHIFT
  nameWithType: Keys.AZ_KEY_LEFT_SHIFT
- uid: input.Keys.AZ_KEY_LEFT_SUPER
  name: AZ_KEY_LEFT_SUPER
  href: api/input.Keys.html#input_Keys_AZ_KEY_LEFT_SUPER
  fullName: input.Keys.AZ_KEY_LEFT_SUPER
  nameWithType: Keys.AZ_KEY_LEFT_SUPER
- uid: input.Keys.AZ_KEY_M
  name: AZ_KEY_M
  href: api/input.Keys.html#input_Keys_AZ_KEY_M
  fullName: input.Keys.AZ_KEY_M
  nameWithType: Keys.AZ_KEY_M
- uid: input.Keys.AZ_KEY_MENU
  name: AZ_KEY_MENU
  href: api/input.Keys.html#input_Keys_AZ_KEY_MENU
  fullName: input.Keys.AZ_KEY_MENU
  nameWithType: Keys.AZ_KEY_MENU
- uid: input.Keys.AZ_KEY_MINUS
  name: AZ_KEY_MINUS
  href: api/input.Keys.html#input_Keys_AZ_KEY_MINUS
  fullName: input.Keys.AZ_KEY_MINUS
  nameWithType: Keys.AZ_KEY_MINUS
- uid: input.Keys.AZ_KEY_N
  name: AZ_KEY_N
  href: api/input.Keys.html#input_Keys_AZ_KEY_N
  fullName: input.Keys.AZ_KEY_N
  nameWithType: Keys.AZ_KEY_N
- uid: input.Keys.AZ_KEY_NUM_LOCK
  name: AZ_KEY_NUM_LOCK
  href: api/input.Keys.html#input_Keys_AZ_KEY_NUM_LOCK
  fullName: input.Keys.AZ_KEY_NUM_LOCK
  nameWithType: Keys.AZ_KEY_NUM_LOCK
- uid: input.Keys.AZ_KEY_O
  name: AZ_KEY_O
  href: api/input.Keys.html#input_Keys_AZ_KEY_O
  fullName: input.Keys.AZ_KEY_O
  nameWithType: Keys.AZ_KEY_O
- uid: input.Keys.AZ_KEY_P
  name: AZ_KEY_P
  href: api/input.Keys.html#input_Keys_AZ_KEY_P
  fullName: input.Keys.AZ_KEY_P
  nameWithType: Keys.AZ_KEY_P
- uid: input.Keys.AZ_KEY_PAGE_DOWN
  name: AZ_KEY_PAGE_DOWN
  href: api/input.Keys.html#input_Keys_AZ_KEY_PAGE_DOWN
  fullName: input.Keys.AZ_KEY_PAGE_DOWN
  nameWithType: Keys.AZ_KEY_PAGE_DOWN
- uid: input.Keys.AZ_KEY_PAGE_UP
  name: AZ_KEY_PAGE_UP
  href: api/input.Keys.html#input_Keys_AZ_KEY_PAGE_UP
  fullName: input.Keys.AZ_KEY_PAGE_UP
  nameWithType: Keys.AZ_KEY_PAGE_UP
- uid: input.Keys.AZ_KEY_PAUSE
  name: AZ_KEY_PAUSE
  href: api/input.Keys.html#input_Keys_AZ_KEY_PAUSE
  fullName: input.Keys.AZ_KEY_PAUSE
  nameWithType: Keys.AZ_KEY_PAUSE
- uid: input.Keys.AZ_KEY_PERIOD
  name: AZ_KEY_PERIOD
  href: api/input.Keys.html#input_Keys_AZ_KEY_PERIOD
  fullName: input.Keys.AZ_KEY_PERIOD
  nameWithType: Keys.AZ_KEY_PERIOD
- uid: input.Keys.AZ_KEY_PRINT_SCREEN
  name: AZ_KEY_PRINT_SCREEN
  href: api/input.Keys.html#input_Keys_AZ_KEY_PRINT_SCREEN
  fullName: input.Keys.AZ_KEY_PRINT_SCREEN
  nameWithType: Keys.AZ_KEY_PRINT_SCREEN
- uid: input.Keys.AZ_KEY_Q
  name: AZ_KEY_Q
  href: api/input.Keys.html#input_Keys_AZ_KEY_Q
  fullName: input.Keys.AZ_KEY_Q
  nameWithType: Keys.AZ_KEY_Q
- uid: input.Keys.AZ_KEY_R
  name: AZ_KEY_R
  href: api/input.Keys.html#input_Keys_AZ_KEY_R
  fullName: input.Keys.AZ_KEY_R
  nameWithType: Keys.AZ_KEY_R
- uid: input.Keys.AZ_KEY_RIGHT
  name: AZ_KEY_RIGHT
  href: api/input.Keys.html#input_Keys_AZ_KEY_RIGHT
  fullName: input.Keys.AZ_KEY_RIGHT
  nameWithType: Keys.AZ_KEY_RIGHT
- uid: input.Keys.AZ_KEY_RIGHT_ALT
  name: AZ_KEY_RIGHT_ALT
  href: api/input.Keys.html#input_Keys_AZ_KEY_RIGHT_ALT
  fullName: input.Keys.AZ_KEY_RIGHT_ALT
  nameWithType: Keys.AZ_KEY_RIGHT_ALT
- uid: input.Keys.AZ_KEY_RIGHT_BRACKET
  name: AZ_KEY_RIGHT_BRACKET
  href: api/input.Keys.html#input_Keys_AZ_KEY_RIGHT_BRACKET
  fullName: input.Keys.AZ_KEY_RIGHT_BRACKET
  nameWithType: Keys.AZ_KEY_RIGHT_BRACKET
- uid: input.Keys.AZ_KEY_RIGHT_CONTROL
  name: AZ_KEY_RIGHT_CONTROL
  href: api/input.Keys.html#input_Keys_AZ_KEY_RIGHT_CONTROL
  fullName: input.Keys.AZ_KEY_RIGHT_CONTROL
  nameWithType: Keys.AZ_KEY_RIGHT_CONTROL
- uid: input.Keys.AZ_KEY_RIGHT_SHIFT
  name: AZ_KEY_RIGHT_SHIFT
  href: api/input.Keys.html#input_Keys_AZ_KEY_RIGHT_SHIFT
  fullName: input.Keys.AZ_KEY_RIGHT_SHIFT
  nameWithType: Keys.AZ_KEY_RIGHT_SHIFT
- uid: input.Keys.AZ_KEY_RIGHT_SUPER
  name: AZ_KEY_RIGHT_SUPER
  href: api/input.Keys.html#input_Keys_AZ_KEY_RIGHT_SUPER
  fullName: input.Keys.AZ_KEY_RIGHT_SUPER
  nameWithType: Keys.AZ_KEY_RIGHT_SUPER
- uid: input.Keys.AZ_KEY_S
  name: AZ_KEY_S
  href: api/input.Keys.html#input_Keys_AZ_KEY_S
  fullName: input.Keys.AZ_KEY_S
  nameWithType: Keys.AZ_KEY_S
- uid: input.Keys.AZ_KEY_SCROLL_LOCK
  name: AZ_KEY_SCROLL_LOCK
  href: api/input.Keys.html#input_Keys_AZ_KEY_SCROLL_LOCK
  fullName: input.Keys.AZ_KEY_SCROLL_LOCK
  nameWithType: Keys.AZ_KEY_SCROLL_LOCK
- uid: input.Keys.AZ_KEY_SEMICOLON
  name: AZ_KEY_SEMICOLON
  href: api/input.Keys.html#input_Keys_AZ_KEY_SEMICOLON
  fullName: input.Keys.AZ_KEY_SEMICOLON
  nameWithType: Keys.AZ_KEY_SEMICOLON
- uid: input.Keys.AZ_KEY_SLASH
  name: AZ_KEY_SLASH
  href: api/input.Keys.html#input_Keys_AZ_KEY_SLASH
  fullName: input.Keys.AZ_KEY_SLASH
  nameWithType: Keys.AZ_KEY_SLASH
- uid: input.Keys.AZ_KEY_SPACE
  name: AZ_KEY_SPACE
  href: api/input.Keys.html#input_Keys_AZ_KEY_SPACE
  fullName: input.Keys.AZ_KEY_SPACE
  nameWithType: Keys.AZ_KEY_SPACE
- uid: input.Keys.AZ_KEY_T
  name: AZ_KEY_T
  href: api/input.Keys.html#input_Keys_AZ_KEY_T
  fullName: input.Keys.AZ_KEY_T
  nameWithType: Keys.AZ_KEY_T
- uid: input.Keys.AZ_KEY_TAB
  name: AZ_KEY_TAB
  href: api/input.Keys.html#input_Keys_AZ_KEY_TAB
  fullName: input.Keys.AZ_KEY_TAB
  nameWithType: Keys.AZ_KEY_TAB
- uid: input.Keys.AZ_KEY_U
  name: AZ_KEY_U
  href: api/input.Keys.html#input_Keys_AZ_KEY_U
  fullName: input.Keys.AZ_KEY_U
  nameWithType: Keys.AZ_KEY_U
- uid: input.Keys.AZ_KEY_UP
  name: AZ_KEY_UP
  href: api/input.Keys.html#input_Keys_AZ_KEY_UP
  fullName: input.Keys.AZ_KEY_UP
  nameWithType: Keys.AZ_KEY_UP
- uid: input.Keys.AZ_KEY_V
  name: AZ_KEY_V
  href: api/input.Keys.html#input_Keys_AZ_KEY_V
  fullName: input.Keys.AZ_KEY_V
  nameWithType: Keys.AZ_KEY_V
- uid: input.Keys.AZ_KEY_W
  name: AZ_KEY_W
  href: api/input.Keys.html#input_Keys_AZ_KEY_W
  fullName: input.Keys.AZ_KEY_W
  nameWithType: Keys.AZ_KEY_W
- uid: input.Keys.AZ_KEY_WORLD_1
  name: AZ_KEY_WORLD_1
  href: api/input.Keys.html#input_Keys_AZ_KEY_WORLD_1
  fullName: input.Keys.AZ_KEY_WORLD_1
  nameWithType: Keys.AZ_KEY_WORLD_1
- uid: input.Keys.AZ_KEY_WORLD_2
  name: AZ_KEY_WORLD_2
  href: api/input.Keys.html#input_Keys_AZ_KEY_WORLD_2
  fullName: input.Keys.AZ_KEY_WORLD_2
  nameWithType: Keys.AZ_KEY_WORLD_2
- uid: input.Keys.AZ_KEY_X
  name: AZ_KEY_X
  href: api/input.Keys.html#input_Keys_AZ_KEY_X
  fullName: input.Keys.AZ_KEY_X
  nameWithType: Keys.AZ_KEY_X
- uid: input.Keys.AZ_KEY_Y
  name: AZ_KEY_Y
  href: api/input.Keys.html#input_Keys_AZ_KEY_Y
  fullName: input.Keys.AZ_KEY_Y
  nameWithType: Keys.AZ_KEY_Y
- uid: input.Keys.AZ_KEY_Z
  name: AZ_KEY_Z
  href: api/input.Keys.html#input_Keys_AZ_KEY_Z
  fullName: input.Keys.AZ_KEY_Z
  nameWithType: Keys.AZ_KEY_Z
- uid: input.Keys.AZ_MOD_ALT
  name: AZ_MOD_ALT
  href: api/input.Keys.html#input_Keys_AZ_MOD_ALT
  fullName: input.Keys.AZ_MOD_ALT
  nameWithType: Keys.AZ_MOD_ALT
- uid: input.Keys.AZ_MOD_CAPS_LOCK
  name: AZ_MOD_CAPS_LOCK
  href: api/input.Keys.html#input_Keys_AZ_MOD_CAPS_LOCK
  fullName: input.Keys.AZ_MOD_CAPS_LOCK
  nameWithType: Keys.AZ_MOD_CAPS_LOCK
- uid: input.Keys.AZ_MOD_CONTROL
  name: AZ_MOD_CONTROL
  href: api/input.Keys.html#input_Keys_AZ_MOD_CONTROL
  fullName: input.Keys.AZ_MOD_CONTROL
  nameWithType: Keys.AZ_MOD_CONTROL
- uid: input.Keys.AZ_MOD_NUM_LOCK
  name: AZ_MOD_NUM_LOCK
  href: api/input.Keys.html#input_Keys_AZ_MOD_NUM_LOCK
  fullName: input.Keys.AZ_MOD_NUM_LOCK
  nameWithType: Keys.AZ_MOD_NUM_LOCK
- uid: input.Keys.AZ_MOD_SHIFT
  name: AZ_MOD_SHIFT
  href: api/input.Keys.html#input_Keys_AZ_MOD_SHIFT
  fullName: input.Keys.AZ_MOD_SHIFT
  nameWithType: Keys.AZ_MOD_SHIFT
- uid: input.Keys.AZ_MOD_SUPER
  name: AZ_MOD_SUPER
  href: api/input.Keys.html#input_Keys_AZ_MOD_SUPER
  fullName: input.Keys.AZ_MOD_SUPER
  nameWithType: Keys.AZ_MOD_SUPER
- uid: input.Keys.Keys()
  name: Keys()
  href: api/input.Keys.html#input_Keys_Keys__
  fullName: input.Keys.Keys()
  nameWithType: Keys.Keys()
- uid: input.Keys.Keys*
  name: Keys
  href: api/input.Keys.html#input_Keys_Keys_
  isSpec: "True"
  fullName: input.Keys.Keys
  nameWithType: Keys.Keys
  package: input
- uid: input.Mouse
  name: Mouse
  href: api/input.Mouse.html
  fullName: input.Mouse
  nameWithType: Mouse
- uid: input.Mouse.clearMouseInput()
  name: clearMouseInput()
  href: api/input.Mouse.html#input_Mouse_clearMouseInput__
  fullName: input.Mouse.clearMouseInput()
  nameWithType: Mouse.clearMouseInput()
- uid: input.Mouse.clearMouseInput*
  name: clearMouseInput
  href: api/input.Mouse.html#input_Mouse_clearMouseInput_
  isSpec: "True"
  fullName: input.Mouse.clearMouseInput
  nameWithType: Mouse.clearMouseInput
  package: input
- uid: input.Mouse.mouse
  name: mouse
  href: api/input.Mouse.html#input_Mouse_mouse
  fullName: input.Mouse.mouse
  nameWithType: Mouse.mouse
- uid: input.Mouse.Mouse()
  name: Mouse()
  href: api/input.Mouse.html#input_Mouse_Mouse__
  fullName: input.Mouse.Mouse()
  nameWithType: Mouse.Mouse()
- uid: input.Mouse.Mouse*
  name: Mouse
  href: api/input.Mouse.html#input_Mouse_Mouse_
  isSpec: "True"
  fullName: input.Mouse.Mouse
  nameWithType: Mouse.Mouse
  package: input
- uid: input.Mouse.mouseButton
  name: mouseButton
  href: api/input.Mouse.html#input_Mouse_mouseButton
  fullName: input.Mouse.mouseButton
  nameWithType: Mouse.mouseButton
- uid: input.Mouse.mouseButtonDown(int)
  name: mouseButtonDown(int button)
  href: api/input.Mouse.html#input_Mouse_mouseButtonDown_int_
  fullName: input.Mouse.mouseButtonDown(int button)
  nameWithType: Mouse.mouseButtonDown(int button)
- uid: input.Mouse.mouseButtonDown*
  name: mouseButtonDown
  href: api/input.Mouse.html#input_Mouse_mouseButtonDown_
  isSpec: "True"
  fullName: input.Mouse.mouseButtonDown
  nameWithType: Mouse.mouseButtonDown
  package: input
- uid: input.Mouse.mouseDragged
  name: mouseDragged
  href: api/input.Mouse.html#input_Mouse_mouseDragged
  fullName: input.Mouse.mouseDragged
  nameWithType: Mouse.mouseDragged
- uid: input.Mouse.mouseScroll
  name: mouseScroll
  href: api/input.Mouse.html#input_Mouse_mouseScroll
  fullName: input.Mouse.mouseScroll
  nameWithType: Mouse.mouseScroll
- uid: input.Mouse.mouseX
  name: mouseX
  href: api/input.Mouse.html#input_Mouse_mouseX
  fullName: input.Mouse.mouseX
  nameWithType: Mouse.mouseX
- uid: input.Mouse.mouseY
  name: mouseY
  href: api/input.Mouse.html#input_Mouse_mouseY
  fullName: input.Mouse.mouseY
  nameWithType: Mouse.mouseY
- uid: input.Mouse.pmouse
  name: pmouse
  href: api/input.Mouse.html#input_Mouse_pmouse
  fullName: input.Mouse.pmouse
  nameWithType: Mouse.pmouse
- uid: input.Mouse.pmouseX
  name: pmouseX
  href: api/input.Mouse.html#input_Mouse_pmouseX
  fullName: input.Mouse.pmouseX
  nameWithType: Mouse.pmouseX
- uid: input.Mouse.pmouseY
  name: pmouseY
  href: api/input.Mouse.html#input_Mouse_pmouseY
  fullName: input.Mouse.pmouseY
  nameWithType: Mouse.pmouseY
- uid: input.Mouse.pollMouseButtons()
  name: pollMouseButtons()
  href: api/input.Mouse.html#input_Mouse_pollMouseButtons__
  fullName: input.Mouse.pollMouseButtons()
  nameWithType: Mouse.pollMouseButtons()
- uid: input.Mouse.pollMouseButtons*
  name: pollMouseButtons
  href: api/input.Mouse.html#input_Mouse_pollMouseButtons_
  isSpec: "True"
  fullName: input.Mouse.pollMouseButtons
  nameWithType: Mouse.pollMouseButtons
  package: input
- uid: input.Mouse.scrollX
  name: scrollX
  href: api/input.Mouse.html#input_Mouse_scrollX
  fullName: input.Mouse.scrollX
  nameWithType: Mouse.scrollX
- uid: input.Mouse.scrollY
  name: scrollY
  href: api/input.Mouse.html#input_Mouse_scrollY
  fullName: input.Mouse.scrollY
  nameWithType: Mouse.scrollY
- uid: input.Mouse.setupCallbacks()
  name: setupCallbacks()
  href: api/input.Mouse.html#input_Mouse_setupCallbacks__
  fullName: input.Mouse.setupCallbacks()
  nameWithType: Mouse.setupCallbacks()
- uid: input.Mouse.setupCallbacks*
  name: setupCallbacks
  href: api/input.Mouse.html#input_Mouse_setupCallbacks_
  isSpec: "True"
  fullName: input.Mouse.setupCallbacks
  nameWithType: Mouse.setupCallbacks
  package: input
- uid: input.Mouse.update()
  name: update()
  href: api/input.Mouse.html#input_Mouse_update__
  fullName: input.Mouse.update()
  nameWithType: Mouse.update()
- uid: input.Mouse.update*
  name: update
  href: api/input.Mouse.html#input_Mouse_update_
  isSpec: "True"
  fullName: input.Mouse.update
  nameWithType: Mouse.update
  package: input
- uid: io
  name: io
  href: api/io.html
  fullName: io
  nameWithType: io
- uid: io.bin
  name: io.bin
  href: api/io.bin.html
  fullName: io.bin
  nameWithType: io.bin
- uid: io.bin.BinaryIO
  name: BinaryIO
  href: api/io.bin.BinaryIO.html
  fullName: io.bin.BinaryIO
  nameWithType: BinaryIO
- uid: io.bin.BinaryIO.BinaryIO()
  name: BinaryIO()
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_BinaryIO__
  fullName: io.bin.BinaryIO.BinaryIO()
  nameWithType: BinaryIO.BinaryIO()
- uid: io.bin.BinaryIO.BinaryIO*
  name: BinaryIO
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_BinaryIO_
  isSpec: "True"
  fullName: io.bin.BinaryIO.BinaryIO
  nameWithType: BinaryIO.BinaryIO
  package: io.bin
- uid: io.bin.BinaryIO.readData(java.io.File)
  name: readData(File file)
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_readData_java_io_File_
  fullName: io.bin.BinaryIO.readData(File file)
  nameWithType: BinaryIO.readData(File file)
- uid: io.bin.BinaryIO.readData(java.net.URL,int)
  name: readData(URL url, int blockSize)
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_readData_java_net_URL_int_
  fullName: io.bin.BinaryIO.readData(URL url, int blockSize)
  nameWithType: BinaryIO.readData(URL url, int blockSize)
- uid: io.bin.BinaryIO.readData*
  name: readData
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_readData_
  isSpec: "True"
  fullName: io.bin.BinaryIO.readData
  nameWithType: BinaryIO.readData
  package: io.bin
- uid: io.bin.BinaryIO.writeData(java.io.File,byte[])
  name: writeData(File file, byte[] data)
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_writeData_java_io_File_byte___
  fullName: io.bin.BinaryIO.writeData(File file, byte[] data)
  nameWithType: BinaryIO.writeData(File file, byte[] data)
- uid: io.bin.BinaryIO.writeData*
  name: writeData
  href: api/io.bin.BinaryIO.html#io_bin_BinaryIO_writeData_
  isSpec: "True"
  fullName: io.bin.BinaryIO.writeData
  nameWithType: BinaryIO.writeData
  package: io.bin
- uid: io.FileFormat
  name: FileFormat<T>
  href: api/io.FileFormat.html
  fullName: io.FileFormat<T>
  nameWithType: FileFormat<T>
- uid: io.FileFormat.parse(byte[])
  name: parse(byte[] input)
  href: api/io.FileFormat.html#io_FileFormat_parse_byte___
  fullName: io.FileFormat<T>.parse(byte[] input)
  nameWithType: FileFormat<T>.parse(byte[] input)
- uid: io.FileFormat.parse(byte[],java.nio.charset.Charset)
  name: parse(byte[] input, Charset charset)
  href: api/io.FileFormat.html#io_FileFormat_parse_byte___java_nio_charset_Charset_
  fullName: io.FileFormat<T>.parse(byte[] input, Charset charset)
  nameWithType: FileFormat<T>.parse(byte[] input, Charset charset)
- uid: io.FileFormat.parse(java.lang.String)
  name: parse(String input)
  href: api/io.FileFormat.html#io_FileFormat_parse_java_lang_String_
  fullName: io.FileFormat<T>.parse(String input)
  nameWithType: FileFormat<T>.parse(String input)
- uid: io.FileFormat.parse*
  name: parse
  href: api/io.FileFormat.html#io_FileFormat_parse_
  isSpec: "True"
  fullName: io.FileFormat<T>.parse
  nameWithType: FileFormat<T>.parse
  package: io
- uid: io.FileFormats
  name: FileFormats
  href: api/io.FileFormats.html
  fullName: io.FileFormats
  nameWithType: FileFormats
- uid: io.FileFormats.FileFormats()
  name: FileFormats()
  href: api/io.FileFormats.html#io_FileFormats_FileFormats__
  fullName: io.FileFormats.FileFormats()
  nameWithType: FileFormats.FileFormats()
- uid: io.FileFormats.FileFormats*
  name: FileFormats
  href: api/io.FileFormats.html#io_FileFormats_FileFormats_
  isSpec: "True"
  fullName: io.FileFormats.FileFormats
  nameWithType: FileFormats.FileFormats
  package: io
- uid: io.FileFormats.XML
  name: XML
  href: api/io.FileFormats.html#io_FileFormats_XML
  fullName: io.FileFormats.XML
  nameWithType: FileFormats.XML
- uid: io.json
  name: io.json
  href: api/io.json.html
  fullName: io.json
  nameWithType: io.json
- uid: io.json.JSONConstructor
  name: JSONConstructor
  href: api/io.json.JSONConstructor.html
  fullName: io.json.JSONConstructor
  nameWithType: JSONConstructor
- uid: io.json.JSONConstructor.JSONConstructor()
  name: JSONConstructor()
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_JSONConstructor__
  fullName: io.json.JSONConstructor.JSONConstructor()
  nameWithType: JSONConstructor.JSONConstructor()
- uid: io.json.JSONConstructor.JSONConstructor(io.json.JSONObject)
  name: JSONConstructor(JSONObject jsonObject)
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_JSONConstructor_io_json_JSONObject_
  fullName: io.json.JSONConstructor.JSONConstructor(JSONObject jsonObject)
  nameWithType: JSONConstructor.JSONConstructor(JSONObject jsonObject)
- uid: io.json.JSONConstructor.JSONConstructor*
  name: JSONConstructor
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_JSONConstructor_
  isSpec: "True"
  fullName: io.json.JSONConstructor.JSONConstructor
  nameWithType: JSONConstructor.JSONConstructor
  package: io.json
- uid: io.json.JSONConstructor.print()
  name: print()
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_print__
  fullName: io.json.JSONConstructor.print()
  nameWithType: JSONConstructor.print()
- uid: io.json.JSONConstructor.print*
  name: print
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_print_
  isSpec: "True"
  fullName: io.json.JSONConstructor.print
  nameWithType: JSONConstructor.print
  package: io.json
- uid: io.json.JSONConstructor.saveToFile(java.lang.String)
  name: saveToFile(String filePath)
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_saveToFile_java_lang_String_
  fullName: io.json.JSONConstructor.saveToFile(String filePath)
  nameWithType: JSONConstructor.saveToFile(String filePath)
- uid: io.json.JSONConstructor.saveToFile*
  name: saveToFile
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_saveToFile_
  isSpec: "True"
  fullName: io.json.JSONConstructor.saveToFile
  nameWithType: JSONConstructor.saveToFile
  package: io.json
- uid: io.json.JSONConstructor.toJSON(java.lang.Object)
  name: toJSON(Object obj)
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_toJSON_java_lang_Object_
  fullName: io.json.JSONConstructor.toJSON(Object obj)
  nameWithType: JSONConstructor.toJSON(Object obj)
- uid: io.json.JSONConstructor.toJSON*
  name: toJSON
  href: api/io.json.JSONConstructor.html#io_json_JSONConstructor_toJSON_
  isSpec: "True"
  fullName: io.json.JSONConstructor.toJSON
  nameWithType: JSONConstructor.toJSON
  package: io.json
- uid: io.json.JSONObject
  name: JSONObject
  href: api/io.json.JSONObject.html
  fullName: io.json.JSONObject
  nameWithType: JSONObject
- uid: io.json.JSONObject.<T>addList(java.lang.String,java.util.List<T>,int,boolean,boolean)
  name: <T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject__T_addList_java_lang_String_java_util_List_T__int_boolean_boolean_
  fullName: io.json.JSONObject.<T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.<T>addList(String propertyName, List<T> list, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,boolean[],int,boolean,boolean)
  name: addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_boolean___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, boolean[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,char[],int,boolean,boolean)
  name: addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_char___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, char[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,double[],int,boolean,boolean)
  name: addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_double___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, double[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,float[],int,boolean,boolean)
  name: addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_float___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, float[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,int[],int,boolean,boolean)
  name: addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_int___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, int[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,java.lang.Object[],int,boolean,boolean)
  name: addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_java_lang_Object___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, Object[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray(java.lang.String,java.lang.String[],int,boolean,boolean)
  name: addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_java_lang_String_java_lang_String___int_boolean_boolean_
  fullName: io.json.JSONObject.addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addArray(String propertyName, String[] array, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addArray*
  name: addArray
  href: api/io.json.JSONObject.html#io_json_JSONObject_addArray_
  isSpec: "True"
  fullName: io.json.JSONObject.addArray
  nameWithType: JSONObject.addArray
  package: io.json
- uid: io.json.JSONObject.addList*
  name: <T>addList
  href: api/io.json.JSONObject.html#io_json_JSONObject_addList_
  isSpec: "True"
  fullName: io.json.JSONObject.<T>addList
  nameWithType: JSONObject.<T>addList
  package: io.json
- uid: io.json.JSONObject.addObject(java.lang.String,java.lang.Object,int,boolean,boolean)
  name: addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addObject_java_lang_String_java_lang_Object_int_boolean_boolean_
  fullName: io.json.JSONObject.addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addObject(String propertyName, Object obj, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addObject*
  name: addObject
  href: api/io.json.JSONObject.html#io_json_JSONObject_addObject_
  isSpec: "True"
  fullName: io.json.JSONObject.addObject
  nameWithType: JSONObject.addObject
  package: io.json
- uid: io.json.JSONObject.addVar(java.lang.String,boolean,int,boolean,boolean)
  name: addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_java_lang_String_boolean_int_boolean_boolean_
  fullName: io.json.JSONObject.addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addVar(String propertyName, boolean value, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addVar(java.lang.String,char,int,boolean,boolean)
  name: addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_java_lang_String_char_int_boolean_boolean_
  fullName: io.json.JSONObject.addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addVar(String propertyName, char value, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addVar(java.lang.String,double,int,boolean,boolean)
  name: addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_java_lang_String_double_int_boolean_boolean_
  fullName: io.json.JSONObject.addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addVar(String propertyName, double value, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addVar(java.lang.String,float,int,boolean,boolean)
  name: addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_java_lang_String_float_int_boolean_boolean_
  fullName: io.json.JSONObject.addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addVar(String propertyName, float value, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addVar(java.lang.String,int,int,boolean,boolean)
  name: addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_java_lang_String_int_int_boolean_boolean_
  fullName: io.json.JSONObject.addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addVar(String propertyName, int value, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addVar(java.lang.String,java.lang.String,int,boolean,boolean)
  name: addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_java_lang_String_java_lang_String_int_boolean_boolean_
  fullName: io.json.JSONObject.addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)
  nameWithType: JSONObject.addVar(String propertyName, String value, int numTabs, boolean newLine, boolean comma)
- uid: io.json.JSONObject.addVar*
  name: addVar
  href: api/io.json.JSONObject.html#io_json_JSONObject_addVar_
  isSpec: "True"
  fullName: io.json.JSONObject.addVar
  nameWithType: JSONObject.addVar
  package: io.json
- uid: io.json.JSONObject.endJSON()
  name: endJSON()
  href: api/io.json.JSONObject.html#io_json_JSONObject_endJSON__
  fullName: io.json.JSONObject.endJSON()
  nameWithType: JSONObject.endJSON()
- uid: io.json.JSONObject.endJSON*
  name: endJSON
  href: api/io.json.JSONObject.html#io_json_JSONObject_endJSON_
  isSpec: "True"
  fullName: io.json.JSONObject.endJSON
  nameWithType: JSONObject.endJSON
  package: io.json
- uid: io.json.JSONObject.getJSON()
  name: getJSON()
  href: api/io.json.JSONObject.html#io_json_JSONObject_getJSON__
  fullName: io.json.JSONObject.getJSON()
  nameWithType: JSONObject.getJSON()
- uid: io.json.JSONObject.getJSON*
  name: getJSON
  href: api/io.json.JSONObject.html#io_json_JSONObject_getJSON_
  isSpec: "True"
  fullName: io.json.JSONObject.getJSON
  nameWithType: JSONObject.getJSON
  package: io.json
- uid: io.json.JSONObject.JSONObject()
  name: JSONObject()
  href: api/io.json.JSONObject.html#io_json_JSONObject_JSONObject__
  fullName: io.json.JSONObject.JSONObject()
  nameWithType: JSONObject.JSONObject()
- uid: io.json.JSONObject.JSONObject*
  name: JSONObject
  href: api/io.json.JSONObject.html#io_json_JSONObject_JSONObject_
  isSpec: "True"
  fullName: io.json.JSONObject.JSONObject
  nameWithType: JSONObject.JSONObject
  package: io.json
- uid: io.json.JSONObject.startJSON()
  name: startJSON()
  href: api/io.json.JSONObject.html#io_json_JSONObject_startJSON__
  fullName: io.json.JSONObject.startJSON()
  nameWithType: JSONObject.startJSON()
- uid: io.json.JSONObject.startJSON*
  name: startJSON
  href: api/io.json.JSONObject.html#io_json_JSONObject_startJSON_
  isSpec: "True"
  fullName: io.json.JSONObject.startJSON
  nameWithType: JSONObject.startJSON
  package: io.json
- uid: io.Parser
  name: Parser<T>
  href: api/io.Parser.html
  fullName: io.Parser<T>
  nameWithType: Parser<T>
- uid: io.Parser.check(java.util.List<io.token.Token>,int,io.token.TokenReader...)
  name: check(List<Token> tokens, int pos, TokenReader[] readers)
  href: api/io.Parser.html#io_Parser_check_java_util_List_io_token_Token__int_io_token_TokenReader____
  fullName: io.Parser<T>.check(List<Token> tokens, int pos, TokenReader[] readers)
  nameWithType: Parser<T>.check(List<Token> tokens, int pos, TokenReader[] readers)
- uid: io.Parser.check*
  name: check
  href: api/io.Parser.html#io_Parser_check_
  isSpec: "True"
  fullName: io.Parser<T>.check
  nameWithType: Parser<T>.check
  package: io
- uid: io.Parser.get(java.util.List<io.token.Token>,int)
  name: get(List<Token> tokens, int pos)
  href: api/io.Parser.html#io_Parser_get_java_util_List_io_token_Token__int_
  fullName: io.Parser<T>.get(List<Token> tokens, int pos)
  nameWithType: Parser<T>.get(List<Token> tokens, int pos)
- uid: io.Parser.get*
  name: get
  href: api/io.Parser.html#io_Parser_get_
  isSpec: "True"
  fullName: io.Parser<T>.get
  nameWithType: Parser<T>.get
  package: io
- uid: io.Parser.is(java.util.List<io.token.Token>,int,io.token.TokenReader)
  name: is(List<Token> tokens, int pos, TokenReader reader)
  href: api/io.Parser.html#io_Parser_is_java_util_List_io_token_Token__int_io_token_TokenReader_
  fullName: io.Parser<T>.is(List<Token> tokens, int pos, TokenReader reader)
  nameWithType: Parser<T>.is(List<Token> tokens, int pos, TokenReader reader)
- uid: io.Parser.is*
  name: is
  href: api/io.Parser.html#io_Parser_is_
  isSpec: "True"
  fullName: io.Parser<T>.is
  nameWithType: Parser<T>.is
  package: io
- uid: io.Parser.parse(java.util.List<io.token.Token>)
  name: parse(List<Token> tokens)
  href: api/io.Parser.html#io_Parser_parse_java_util_List_io_token_Token__
  fullName: io.Parser<T>.parse(List<Token> tokens)
  nameWithType: Parser<T>.parse(List<Token> tokens)
- uid: io.Parser.parse*
  name: parse
  href: api/io.Parser.html#io_Parser_parse_
  isSpec: "True"
  fullName: io.Parser<T>.parse
  nameWithType: Parser<T>.parse
  package: io
- uid: io.Parser.Parser()
  name: Parser()
  href: api/io.Parser.html#io_Parser_Parser__
  fullName: io.Parser<T>.Parser()
  nameWithType: Parser<T>.Parser()
- uid: io.Parser.Parser*
  name: Parser
  href: api/io.Parser.html#io_Parser_Parser_
  isSpec: "True"
  fullName: io.Parser<T>.Parser
  nameWithType: Parser<T>.Parser
  package: io
- uid: io.token
  name: io.token
  href: api/io.token.html
  fullName: io.token
  nameWithType: io.token
- uid: io.token.RepetitiveTokenReader
  name: RepetitiveTokenReader
  href: api/io.token.RepetitiveTokenReader.html
  fullName: io.token.RepetitiveTokenReader
  nameWithType: RepetitiveTokenReader
- uid: io.token.RepetitiveTokenReader.limit
  name: limit
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_limit
  fullName: io.token.RepetitiveTokenReader.limit
  nameWithType: RepetitiveTokenReader.limit
- uid: io.token.RepetitiveTokenReader.NO_LIMIT
  name: NO_LIMIT
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_NO_LIMIT
  fullName: io.token.RepetitiveTokenReader.NO_LIMIT
  nameWithType: RepetitiveTokenReader.NO_LIMIT
- uid: io.token.RepetitiveTokenReader.read(java.util.Scanner)
  name: read(Scanner scanner)
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_read_java_util_Scanner_
  fullName: io.token.RepetitiveTokenReader.read(Scanner scanner)
  nameWithType: RepetitiveTokenReader.read(Scanner scanner)
- uid: io.token.RepetitiveTokenReader.read*
  name: read
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_read_
  isSpec: "True"
  fullName: io.token.RepetitiveTokenReader.read
  nameWithType: RepetitiveTokenReader.read
  package: io.token
- uid: io.token.RepetitiveTokenReader.RepetitiveTokenReader(java.lang.String,java.lang.String,int)
  name: RepetitiveTokenReader(String targetType, String target, int limit)
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_RepetitiveTokenReader_java_lang_String_java_lang_String_int_
  fullName: io.token.RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String target, int limit)
  nameWithType: RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String target, int limit)
- uid: io.token.RepetitiveTokenReader.RepetitiveTokenReader(java.lang.String,java.lang.String,int,int)
  name: RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_RepetitiveTokenReader_java_lang_String_java_lang_String_int_int_
  fullName: io.token.RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)
  nameWithType: RepetitiveTokenReader.RepetitiveTokenReader(String targetType, String pattern, int optionalPrio, int limit)
- uid: io.token.RepetitiveTokenReader.RepetitiveTokenReader*
  name: RepetitiveTokenReader
  href: api/io.token.RepetitiveTokenReader.html#io_token_RepetitiveTokenReader_RepetitiveTokenReader_
  isSpec: "True"
  fullName: io.token.RepetitiveTokenReader.RepetitiveTokenReader
  nameWithType: RepetitiveTokenReader.RepetitiveTokenReader
  package: io.token
- uid: io.token.Token
  name: Token
  href: api/io.token.Token.html
  fullName: io.token.Token
  nameWithType: Token
- uid: io.token.Token.getType()
  name: getType()
  href: api/io.token.Token.html#io_token_Token_getType__
  fullName: io.token.Token.getType()
  nameWithType: Token.getType()
- uid: io.token.Token.getType*
  name: getType
  href: api/io.token.Token.html#io_token_Token_getType_
  isSpec: "True"
  fullName: io.token.Token.getType
  nameWithType: Token.getType
  package: io.token
- uid: io.token.Token.getValue()
  name: getValue()
  href: api/io.token.Token.html#io_token_Token_getValue__
  fullName: io.token.Token.getValue()
  nameWithType: Token.getValue()
- uid: io.token.Token.getValue*
  name: getValue
  href: api/io.token.Token.html#io_token_Token_getValue_
  isSpec: "True"
  fullName: io.token.Token.getValue
  nameWithType: Token.getValue
  package: io.token
- uid: io.token.Token.Token(java.lang.String,java.lang.String)
  name: Token(String type, String value)
  href: api/io.token.Token.html#io_token_Token_Token_java_lang_String_java_lang_String_
  fullName: io.token.Token.Token(String type, String value)
  nameWithType: Token.Token(String type, String value)
- uid: io.token.Token.Token*
  name: Token
  href: api/io.token.Token.html#io_token_Token_Token_
  isSpec: "True"
  fullName: io.token.Token.Token
  nameWithType: Token.Token
  package: io.token
- uid: io.token.Token.toString()
  name: toString()
  href: api/io.token.Token.html#io_token_Token_toString__
  fullName: io.token.Token.toString()
  nameWithType: Token.toString()
- uid: io.token.Token.toString*
  name: toString
  href: api/io.token.Token.html#io_token_Token_toString_
  isSpec: "True"
  fullName: io.token.Token.toString
  nameWithType: Token.toString
  package: io.token
- uid: io.token.TokenReader
  name: TokenReader
  href: api/io.token.TokenReader.html
  fullName: io.token.TokenReader
  nameWithType: TokenReader
- uid: io.token.TokenReader.canRead(java.util.Scanner)
  name: canRead(Scanner scanner)
  href: api/io.token.TokenReader.html#io_token_TokenReader_canRead_java_util_Scanner_
  fullName: io.token.TokenReader.canRead(Scanner scanner)
  nameWithType: TokenReader.canRead(Scanner scanner)
- uid: io.token.TokenReader.canRead*
  name: canRead
  href: api/io.token.TokenReader.html#io_token_TokenReader_canRead_
  isSpec: "True"
  fullName: io.token.TokenReader.canRead
  nameWithType: TokenReader.canRead
  package: io.token
- uid: io.token.TokenReader.compareTo(io.token.TokenReader)
  name: compareTo(TokenReader o)
  href: api/io.token.TokenReader.html#io_token_TokenReader_compareTo_io_token_TokenReader_
  fullName: io.token.TokenReader.compareTo(TokenReader o)
  nameWithType: TokenReader.compareTo(TokenReader o)
- uid: io.token.TokenReader.compareTo*
  name: compareTo
  href: api/io.token.TokenReader.html#io_token_TokenReader_compareTo_
  isSpec: "True"
  fullName: io.token.TokenReader.compareTo
  nameWithType: TokenReader.compareTo
  package: io.token
- uid: io.token.TokenReader.optionalPrio
  name: optionalPrio
  href: api/io.token.TokenReader.html#io_token_TokenReader_optionalPrio
  fullName: io.token.TokenReader.optionalPrio
  nameWithType: TokenReader.optionalPrio
- uid: io.token.TokenReader.read(java.util.Scanner)
  name: read(Scanner scanner)
  href: api/io.token.TokenReader.html#io_token_TokenReader_read_java_util_Scanner_
  fullName: io.token.TokenReader.read(Scanner scanner)
  nameWithType: TokenReader.read(Scanner scanner)
- uid: io.token.TokenReader.read*
  name: read
  href: api/io.token.TokenReader.html#io_token_TokenReader_read_
  isSpec: "True"
  fullName: io.token.TokenReader.read
  nameWithType: TokenReader.read
  package: io.token
- uid: io.token.TokenReader.target
  name: target
  href: api/io.token.TokenReader.html#io_token_TokenReader_target
  fullName: io.token.TokenReader.target
  nameWithType: TokenReader.target
- uid: io.token.TokenReader.targetType
  name: targetType
  href: api/io.token.TokenReader.html#io_token_TokenReader_targetType
  fullName: io.token.TokenReader.targetType
  nameWithType: TokenReader.targetType
- uid: io.token.TokenReader.TokenReader(java.lang.String,java.lang.String)
  name: TokenReader(String targetType, String target)
  href: api/io.token.TokenReader.html#io_token_TokenReader_TokenReader_java_lang_String_java_lang_String_
  fullName: io.token.TokenReader.TokenReader(String targetType, String target)
  nameWithType: TokenReader.TokenReader(String targetType, String target)
- uid: io.token.TokenReader.TokenReader(java.lang.String,java.lang.String,int)
  name: TokenReader(String targetType, String pattern, int optionalPrio)
  href: api/io.token.TokenReader.html#io_token_TokenReader_TokenReader_java_lang_String_java_lang_String_int_
  fullName: io.token.TokenReader.TokenReader(String targetType, String pattern, int optionalPrio)
  nameWithType: TokenReader.TokenReader(String targetType, String pattern, int optionalPrio)
- uid: io.token.TokenReader.TokenReader*
  name: TokenReader
  href: api/io.token.TokenReader.html#io_token_TokenReader_TokenReader_
  isSpec: "True"
  fullName: io.token.TokenReader.TokenReader
  nameWithType: TokenReader.TokenReader
  package: io.token
- uid: io.token.TokenReader.toString()
  name: toString()
  href: api/io.token.TokenReader.html#io_token_TokenReader_toString__
  fullName: io.token.TokenReader.toString()
  nameWithType: TokenReader.toString()
- uid: io.token.TokenReader.toString*
  name: toString
  href: api/io.token.TokenReader.html#io_token_TokenReader_toString_
  isSpec: "True"
  fullName: io.token.TokenReader.toString
  nameWithType: TokenReader.toString
  package: io.token
- uid: io.token.TokenReader.type()
  name: type()
  href: api/io.token.TokenReader.html#io_token_TokenReader_type__
  fullName: io.token.TokenReader.type()
  nameWithType: TokenReader.type()
- uid: io.token.TokenReader.type*
  name: type
  href: api/io.token.TokenReader.html#io_token_TokenReader_type_
  isSpec: "True"
  fullName: io.token.TokenReader.type
  nameWithType: TokenReader.type
  package: io.token
- uid: io.token.TokenStream
  name: TokenStream
  href: api/io.token.TokenStream.html
  fullName: io.token.TokenStream
  nameWithType: TokenStream
- uid: io.token.TokenStream.e(io.token.TokenReader)
  name: e(TokenReader reader)
  href: api/io.token.TokenStream.html#io_token_TokenStream_e_io_token_TokenReader_
  fullName: io.token.TokenStream.e(TokenReader reader)
  nameWithType: TokenStream.e(TokenReader reader)
- uid: io.token.TokenStream.e*
  name: e
  href: api/io.token.TokenStream.html#io_token_TokenStream_e_
  isSpec: "True"
  fullName: io.token.TokenStream.e
  nameWithType: TokenStream.e
  package: io.token
- uid: io.token.TokenStream.eat(io.token.TokenReader)
  name: eat(TokenReader reader)
  href: api/io.token.TokenStream.html#io_token_TokenStream_eat_io_token_TokenReader_
  fullName: io.token.TokenStream.eat(TokenReader reader)
  nameWithType: TokenStream.eat(TokenReader reader)
- uid: io.token.TokenStream.eat*
  name: eat
  href: api/io.token.TokenStream.html#io_token_TokenStream_eat_
  isSpec: "True"
  fullName: io.token.TokenStream.eat
  nameWithType: TokenStream.eat
  package: io.token
- uid: io.token.TokenStream.eatConditionally(io.token.TokenReader,java.util.function.Predicate<io.token.Token>)
  name: eatConditionally(TokenReader reader, Predicate<Token> previousToken)
  href: api/io.token.TokenStream.html#io_token_TokenStream_eatConditionally_io_token_TokenReader_java_util_function_Predicate_io_token_Token__
  fullName: io.token.TokenStream.eatConditionally(TokenReader reader, Predicate<Token> previousToken)
  nameWithType: TokenStream.eatConditionally(TokenReader reader, Predicate<Token> previousToken)
- uid: io.token.TokenStream.eatConditionally*
  name: eatConditionally
  href: api/io.token.TokenStream.html#io_token_TokenStream_eatConditionally_
  isSpec: "True"
  fullName: io.token.TokenStream.eatConditionally
  nameWithType: TokenStream.eatConditionally
  package: io.token
- uid: io.token.TokenStream.eatHistorically(io.token.TokenReader,java.util.function.Predicate<java.util.LinkedList<io.token.Token>>)
  name: eatHistorically(TokenReader reader, Predicate<LinkedList<Token>> previousToken)
  href: api/io.token.TokenStream.html#io_token_TokenStream_eatHistorically_io_token_TokenReader_java_util_function_Predicate_java_util_LinkedList_io_token_Token___
  fullName: io.token.TokenStream.eatHistorically(TokenReader reader, Predicate<LinkedList<Token>> previousToken)
  nameWithType: TokenStream.eatHistorically(TokenReader reader, Predicate<LinkedList<Token>> previousToken)
- uid: io.token.TokenStream.eatHistorically*
  name: eatHistorically
  href: api/io.token.TokenStream.html#io_token_TokenStream_eatHistorically_
  isSpec: "True"
  fullName: io.token.TokenStream.eatHistorically
  nameWithType: TokenStream.eatHistorically
  package: io.token
- uid: io.token.TokenStream.eh(io.token.TokenReader...)
  name: eh(TokenReader[] readers)
  href: api/io.token.TokenStream.html#io_token_TokenStream_eh_io_token_TokenReader____
  fullName: io.token.TokenStream.eh(TokenReader[] readers)
  nameWithType: TokenStream.eh(TokenReader[] readers)
- uid: io.token.TokenStream.eh*
  name: eh
  href: api/io.token.TokenStream.html#io_token_TokenStream_eh_
  isSpec: "True"
  fullName: io.token.TokenStream.eh
  nameWithType: TokenStream.eh
  package: io.token
- uid: io.token.TokenStream.getHistory()
  name: getHistory()
  href: api/io.token.TokenStream.html#io_token_TokenStream_getHistory__
  fullName: io.token.TokenStream.getHistory()
  nameWithType: TokenStream.getHistory()
- uid: io.token.TokenStream.getHistory*
  name: getHistory
  href: api/io.token.TokenStream.html#io_token_TokenStream_getHistory_
  isSpec: "True"
  fullName: io.token.TokenStream.getHistory
  nameWithType: TokenStream.getHistory
  package: io.token
- uid: io.token.TokenStream.isOffering()
  name: isOffering()
  href: api/io.token.TokenStream.html#io_token_TokenStream_isOffering__
  fullName: io.token.TokenStream.isOffering()
  nameWithType: TokenStream.isOffering()
- uid: io.token.TokenStream.isOffering*
  name: isOffering
  href: api/io.token.TokenStream.html#io_token_TokenStream_isOffering_
  isSpec: "True"
  fullName: io.token.TokenStream.isOffering
  nameWithType: TokenStream.isOffering
  package: io.token
- uid: io.token.TokenStream.ne(io.token.TokenReader)
  name: ne(TokenReader reader)
  href: api/io.token.TokenStream.html#io_token_TokenStream_ne_io_token_TokenReader_
  fullName: io.token.TokenStream.ne(TokenReader reader)
  nameWithType: TokenStream.ne(TokenReader reader)
- uid: io.token.TokenStream.ne*
  name: ne
  href: api/io.token.TokenStream.html#io_token_TokenStream_ne_
  isSpec: "True"
  fullName: io.token.TokenStream.ne
  nameWithType: TokenStream.ne
  package: io.token
- uid: io.token.TokenStream.TokenStream(java.lang.String)
  name: TokenStream(String input)
  href: api/io.token.TokenStream.html#io_token_TokenStream_TokenStream_java_lang_String_
  fullName: io.token.TokenStream.TokenStream(String input)
  nameWithType: TokenStream.TokenStream(String input)
- uid: io.token.TokenStream.TokenStream*
  name: TokenStream
  href: api/io.token.TokenStream.html#io_token_TokenStream_TokenStream_
  isSpec: "True"
  fullName: io.token.TokenStream.TokenStream
  nameWithType: TokenStream.TokenStream
  package: io.token
- uid: io.Tokenizer
  name: Tokenizer
  href: api/io.Tokenizer.html
  fullName: io.Tokenizer
  nameWithType: Tokenizer
- uid: io.Tokenizer.detectCharset(byte[])
  name: detectCharset(byte[] input)
  href: api/io.Tokenizer.html#io_Tokenizer_detectCharset_byte___
  fullName: io.Tokenizer.detectCharset(byte[] input)
  nameWithType: Tokenizer.detectCharset(byte[] input)
- uid: io.Tokenizer.detectCharset*
  name: detectCharset
  href: api/io.Tokenizer.html#io_Tokenizer_detectCharset_
  isSpec: "True"
  fullName: io.Tokenizer.detectCharset
  nameWithType: Tokenizer.detectCharset
  package: io
- uid: io.Tokenizer.tokenize(byte[])
  name: tokenize(byte[] input)
  href: api/io.Tokenizer.html#io_Tokenizer_tokenize_byte___
  fullName: io.Tokenizer.tokenize(byte[] input)
  nameWithType: Tokenizer.tokenize(byte[] input)
- uid: io.Tokenizer.tokenize(byte[],java.nio.charset.Charset)
  name: tokenize(byte[] input, Charset charset)
  href: api/io.Tokenizer.html#io_Tokenizer_tokenize_byte___java_nio_charset_Charset_
  fullName: io.Tokenizer.tokenize(byte[] input, Charset charset)
  nameWithType: Tokenizer.tokenize(byte[] input, Charset charset)
- uid: io.Tokenizer.tokenize(java.lang.String)
  name: tokenize(String input)
  href: api/io.Tokenizer.html#io_Tokenizer_tokenize_java_lang_String_
  fullName: io.Tokenizer.tokenize(String input)
  nameWithType: Tokenizer.tokenize(String input)
- uid: io.Tokenizer.tokenize*
  name: tokenize
  href: api/io.Tokenizer.html#io_Tokenizer_tokenize_
  isSpec: "True"
  fullName: io.Tokenizer.tokenize
  nameWithType: Tokenizer.tokenize
  package: io
- uid: io.Tokenizer.Tokenizer()
  name: Tokenizer()
  href: api/io.Tokenizer.html#io_Tokenizer_Tokenizer__
  fullName: io.Tokenizer.Tokenizer()
  nameWithType: Tokenizer.Tokenizer()
- uid: io.Tokenizer.Tokenizer*
  name: Tokenizer
  href: api/io.Tokenizer.html#io_Tokenizer_Tokenizer_
  isSpec: "True"
  fullName: io.Tokenizer.Tokenizer
  nameWithType: Tokenizer.Tokenizer
  package: io
- uid: io.xml
  name: io.xml
  href: api/io.xml.html
  fullName: io.xml
  nameWithType: io.xml
- uid: io.xml.XMLElement
  name: XMLElement
  href: api/io.xml.XMLElement.html
  fullName: io.xml.XMLElement
  nameWithType: XMLElement
- uid: io.xml.XMLElement.addAttribute(java.lang.String,java.lang.String)
  name: addAttribute(String name, String value)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_addAttribute_java_lang_String_java_lang_String_
  fullName: io.xml.XMLElement.addAttribute(String name, String value)
  nameWithType: XMLElement.addAttribute(String name, String value)
- uid: io.xml.XMLElement.addAttribute*
  name: addAttribute
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_addAttribute_
  isSpec: "True"
  fullName: io.xml.XMLElement.addAttribute
  nameWithType: XMLElement.addAttribute
  package: io.xml
- uid: io.xml.XMLElement.addSubElement(io.xml.XMLElement)
  name: addSubElement(XMLElement element)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_addSubElement_io_xml_XMLElement_
  fullName: io.xml.XMLElement.addSubElement(XMLElement element)
  nameWithType: XMLElement.addSubElement(XMLElement element)
- uid: io.xml.XMLElement.addSubElement*
  name: addSubElement
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_addSubElement_
  isSpec: "True"
  fullName: io.xml.XMLElement.addSubElement
  nameWithType: XMLElement.addSubElement
  package: io.xml
- uid: io.xml.XMLElement.getAttributes()
  name: getAttributes()
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getAttributes__
  fullName: io.xml.XMLElement.getAttributes()
  nameWithType: XMLElement.getAttributes()
- uid: io.xml.XMLElement.getAttributes*
  name: getAttributes
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getAttributes_
  isSpec: "True"
  fullName: io.xml.XMLElement.getAttributes
  nameWithType: XMLElement.getAttributes
  package: io.xml
- uid: io.xml.XMLElement.getChildren()
  name: getChildren()
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getChildren__
  fullName: io.xml.XMLElement.getChildren()
  nameWithType: XMLElement.getChildren()
- uid: io.xml.XMLElement.getChildren*
  name: getChildren
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getChildren_
  isSpec: "True"
  fullName: io.xml.XMLElement.getChildren
  nameWithType: XMLElement.getChildren
  package: io.xml
- uid: io.xml.XMLElement.getTag()
  name: getTag()
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getTag__
  fullName: io.xml.XMLElement.getTag()
  nameWithType: XMLElement.getTag()
- uid: io.xml.XMLElement.getTag*
  name: getTag
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getTag_
  isSpec: "True"
  fullName: io.xml.XMLElement.getTag
  nameWithType: XMLElement.getTag
  package: io.xml
- uid: io.xml.XMLElement.getValue()
  name: getValue()
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getValue__
  fullName: io.xml.XMLElement.getValue()
  nameWithType: XMLElement.getValue()
- uid: io.xml.XMLElement.getValue*
  name: getValue
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_getValue_
  isSpec: "True"
  fullName: io.xml.XMLElement.getValue
  nameWithType: XMLElement.getValue
  package: io.xml
- uid: io.xml.XMLElement.setValue(java.lang.String)
  name: setValue(String value)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_setValue_java_lang_String_
  fullName: io.xml.XMLElement.setValue(String value)
  nameWithType: XMLElement.setValue(String value)
- uid: io.xml.XMLElement.setValue*
  name: setValue
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_setValue_
  isSpec: "True"
  fullName: io.xml.XMLElement.setValue
  nameWithType: XMLElement.setValue
  package: io.xml
- uid: io.xml.XMLElement.toString()
  name: toString()
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_toString__
  fullName: io.xml.XMLElement.toString()
  nameWithType: XMLElement.toString()
- uid: io.xml.XMLElement.toString(boolean)
  name: toString(boolean fancy)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_toString_boolean_
  fullName: io.xml.XMLElement.toString(boolean fancy)
  nameWithType: XMLElement.toString(boolean fancy)
- uid: io.xml.XMLElement.toString*
  name: toString
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_toString_
  isSpec: "True"
  fullName: io.xml.XMLElement.toString
  nameWithType: XMLElement.toString
  package: io.xml
- uid: io.xml.XMLElement.XMLElement(java.lang.String)
  name: XMLElement(String comment)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_XMLElement_java_lang_String_
  fullName: io.xml.XMLElement.XMLElement(String comment)
  nameWithType: XMLElement.XMLElement(String comment)
- uid: io.xml.XMLElement.XMLElement(java.lang.String,java.lang.String)
  name: XMLElement(String tag, String value)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_XMLElement_java_lang_String_java_lang_String_
  fullName: io.xml.XMLElement.XMLElement(String tag, String value)
  nameWithType: XMLElement.XMLElement(String tag, String value)
- uid: io.xml.XMLElement.XMLElement(java.lang.String,java.util.List<io.xml.XMLElement>)
  name: XMLElement(String tag, List<XMLElement> subElements)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_XMLElement_java_lang_String_java_util_List_io_xml_XMLElement__
  fullName: io.xml.XMLElement.XMLElement(String tag, List<XMLElement> subElements)
  nameWithType: XMLElement.XMLElement(String tag, List<XMLElement> subElements)
- uid: io.xml.XMLElement.XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String)
  name: XMLElement(String tag, Map<String,String> attributes, String value)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_XMLElement_java_lang_String_java_util_Map_java_lang_String_java_lang_String__java_lang_String_
  fullName: io.xml.XMLElement.XMLElement(String tag, Map<String,String> attributes, String value)
  nameWithType: XMLElement.XMLElement(String tag, Map<String,String> attributes, String value)
- uid: io.xml.XMLElement.XMLElement(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.util.List<io.xml.XMLElement>)
  name: XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_XMLElement_java_lang_String_java_util_Map_java_lang_String_java_lang_String__java_util_List_io_xml_XMLElement__
  fullName: io.xml.XMLElement.XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)
  nameWithType: XMLElement.XMLElement(String tag, Map<String,String> attributes, List<XMLElement> subElements)
- uid: io.xml.XMLElement.XMLElement*
  name: XMLElement
  href: api/io.xml.XMLElement.html#io_xml_XMLElement_XMLElement_
  isSpec: "True"
  fullName: io.xml.XMLElement.XMLElement
  nameWithType: XMLElement.XMLElement
  package: io.xml
- uid: io.xml.XMLParser
  name: XMLParser
  href: api/io.xml.XMLParser.html
  fullName: io.xml.XMLParser
  nameWithType: XMLParser
- uid: io.xml.XMLParser.parse(java.util.List<io.token.Token>)
  name: parse(List<Token> tokens)
  href: api/io.xml.XMLParser.html#io_xml_XMLParser_parse_java_util_List_io_token_Token__
  fullName: io.xml.XMLParser.parse(List<Token> tokens)
  nameWithType: XMLParser.parse(List<Token> tokens)
- uid: io.xml.XMLParser.parse*
  name: parse
  href: api/io.xml.XMLParser.html#io_xml_XMLParser_parse_
  isSpec: "True"
  fullName: io.xml.XMLParser.parse
  nameWithType: XMLParser.parse
  package: io.xml
- uid: io.xml.XMLParser.transformValue(java.lang.String,boolean)
  name: transformValue(String value, boolean isRaw)
  href: api/io.xml.XMLParser.html#io_xml_XMLParser_transformValue_java_lang_String_boolean_
  fullName: io.xml.XMLParser.transformValue(String value, boolean isRaw)
  nameWithType: XMLParser.transformValue(String value, boolean isRaw)
- uid: io.xml.XMLParser.transformValue*
  name: transformValue
  href: api/io.xml.XMLParser.html#io_xml_XMLParser_transformValue_
  isSpec: "True"
  fullName: io.xml.XMLParser.transformValue
  nameWithType: XMLParser.transformValue
  package: io.xml
- uid: io.xml.XMLParser.XMLParser()
  name: XMLParser()
  href: api/io.xml.XMLParser.html#io_xml_XMLParser_XMLParser__
  fullName: io.xml.XMLParser.XMLParser()
  nameWithType: XMLParser.XMLParser()
- uid: io.xml.XMLParser.XMLParser*
  name: XMLParser
  href: api/io.xml.XMLParser.html#io_xml_XMLParser_XMLParser_
  isSpec: "True"
  fullName: io.xml.XMLParser.XMLParser
  nameWithType: XMLParser.XMLParser
  package: io.xml
- uid: io.xml.XMLSyntaxException
  name: XMLSyntaxException
  href: api/io.xml.XMLSyntaxException.html
  fullName: io.xml.XMLSyntaxException
  nameWithType: XMLSyntaxException
- uid: io.xml.XMLSyntaxException.XMLSyntaxException()
  name: XMLSyntaxException()
  href: api/io.xml.XMLSyntaxException.html#io_xml_XMLSyntaxException_XMLSyntaxException__
  fullName: io.xml.XMLSyntaxException.XMLSyntaxException()
  nameWithType: XMLSyntaxException.XMLSyntaxException()
- uid: io.xml.XMLSyntaxException.XMLSyntaxException(java.lang.String)
  name: XMLSyntaxException(String message)
  href: api/io.xml.XMLSyntaxException.html#io_xml_XMLSyntaxException_XMLSyntaxException_java_lang_String_
  fullName: io.xml.XMLSyntaxException.XMLSyntaxException(String message)
  nameWithType: XMLSyntaxException.XMLSyntaxException(String message)
- uid: io.xml.XMLSyntaxException.XMLSyntaxException(java.lang.String,java.lang.Throwable)
  name: XMLSyntaxException(String message, Throwable cause)
  href: api/io.xml.XMLSyntaxException.html#io_xml_XMLSyntaxException_XMLSyntaxException_java_lang_String_java_lang_Throwable_
  fullName: io.xml.XMLSyntaxException.XMLSyntaxException(String message, Throwable cause)
  nameWithType: XMLSyntaxException.XMLSyntaxException(String message, Throwable cause)
- uid: io.xml.XMLSyntaxException.XMLSyntaxException(java.lang.String,java.lang.Throwable,boolean,boolean)
  name: XMLSyntaxException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace)
  href: api/io.xml.XMLSyntaxException.html#io_xml_XMLSyntaxException_XMLSyntaxException_java_lang_String_java_lang_Throwable_boolean_boolean_
  fullName: io.xml.XMLSyntaxException.XMLSyntaxException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace)
  nameWithType: XMLSyntaxException.XMLSyntaxException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace)
- uid: io.xml.XMLSyntaxException.XMLSyntaxException(java.lang.Throwable)
  name: XMLSyntaxException(Throwable cause)
  href: api/io.xml.XMLSyntaxException.html#io_xml_XMLSyntaxException_XMLSyntaxException_java_lang_Throwable_
  fullName: io.xml.XMLSyntaxException.XMLSyntaxException(Throwable cause)
  nameWithType: XMLSyntaxException.XMLSyntaxException(Throwable cause)
- uid: io.xml.XMLSyntaxException.XMLSyntaxException*
  name: XMLSyntaxException
  href: api/io.xml.XMLSyntaxException.html#io_xml_XMLSyntaxException_XMLSyntaxException_
  isSpec: "True"
  fullName: io.xml.XMLSyntaxException.XMLSyntaxException
  nameWithType: XMLSyntaxException.XMLSyntaxException
  package: io.xml
- uid: io.xml.XMLTokenizer
  name: XMLTokenizer
  href: api/io.xml.XMLTokenizer.html
  fullName: io.xml.XMLTokenizer
  nameWithType: XMLTokenizer
- uid: io.xml.XMLTokenizer.ATTR_EQUALS
  name: ATTR_EQUALS
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_ATTR_EQUALS
  fullName: io.xml.XMLTokenizer.ATTR_EQUALS
  nameWithType: XMLTokenizer.ATTR_EQUALS
- uid: io.xml.XMLTokenizer.CLOSE_TAG
  name: CLOSE_TAG
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_CLOSE_TAG
  fullName: io.xml.XMLTokenizer.CLOSE_TAG
  nameWithType: XMLTokenizer.CLOSE_TAG
- uid: io.xml.XMLTokenizer.COMMENT_CONTENT
  name: COMMENT_CONTENT
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_COMMENT_CONTENT
  fullName: io.xml.XMLTokenizer.COMMENT_CONTENT
  nameWithType: XMLTokenizer.COMMENT_CONTENT
- uid: io.xml.XMLTokenizer.COMMENT_DASHES
  name: COMMENT_DASHES
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_COMMENT_DASHES
  fullName: io.xml.XMLTokenizer.COMMENT_DASHES
  nameWithType: XMLTokenizer.COMMENT_DASHES
- uid: io.xml.XMLTokenizer.COMMENT_MARK
  name: COMMENT_MARK
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_COMMENT_MARK
  fullName: io.xml.XMLTokenizer.COMMENT_MARK
  nameWithType: XMLTokenizer.COMMENT_MARK
- uid: io.xml.XMLTokenizer.detectCharset(byte[])
  name: detectCharset(byte[] input)
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_detectCharset_byte___
  fullName: io.xml.XMLTokenizer.detectCharset(byte[] input)
  nameWithType: XMLTokenizer.detectCharset(byte[] input)
- uid: io.xml.XMLTokenizer.detectCharset*
  name: detectCharset
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_detectCharset_
  isSpec: "True"
  fullName: io.xml.XMLTokenizer.detectCharset
  nameWithType: XMLTokenizer.detectCharset
  package: io.xml
- uid: io.xml.XMLTokenizer.IDENTIFIER
  name: IDENTIFIER
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_IDENTIFIER
  fullName: io.xml.XMLTokenizer.IDENTIFIER
  nameWithType: XMLTokenizer.IDENTIFIER
- uid: io.xml.XMLTokenizer.OPEN_TAG
  name: OPEN_TAG
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_OPEN_TAG
  fullName: io.xml.XMLTokenizer.OPEN_TAG
  nameWithType: XMLTokenizer.OPEN_TAG
- uid: io.xml.XMLTokenizer.QUOTATION
  name: QUOTATION
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_QUOTATION
  fullName: io.xml.XMLTokenizer.QUOTATION
  nameWithType: XMLTokenizer.QUOTATION
- uid: io.xml.XMLTokenizer.SELF_CLOSE
  name: SELF_CLOSE
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_SELF_CLOSE
  fullName: io.xml.XMLTokenizer.SELF_CLOSE
  nameWithType: XMLTokenizer.SELF_CLOSE
- uid: io.xml.XMLTokenizer.SPACING
  name: SPACING
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_SPACING
  fullName: io.xml.XMLTokenizer.SPACING
  nameWithType: XMLTokenizer.SPACING
- uid: io.xml.XMLTokenizer.tokenize(java.lang.String)
  name: tokenize(String input)
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_tokenize_java_lang_String_
  fullName: io.xml.XMLTokenizer.tokenize(String input)
  nameWithType: XMLTokenizer.tokenize(String input)
- uid: io.xml.XMLTokenizer.tokenize*
  name: tokenize
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_tokenize_
  isSpec: "True"
  fullName: io.xml.XMLTokenizer.tokenize
  nameWithType: XMLTokenizer.tokenize
  package: io.xml
- uid: io.xml.XMLTokenizer.VALUE
  name: VALUE
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_VALUE
  fullName: io.xml.XMLTokenizer.VALUE
  nameWithType: XMLTokenizer.VALUE
- uid: io.xml.XMLTokenizer.XMLTokenizer()
  name: XMLTokenizer()
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_XMLTokenizer__
  fullName: io.xml.XMLTokenizer.XMLTokenizer()
  nameWithType: XMLTokenizer.XMLTokenizer()
- uid: io.xml.XMLTokenizer.XMLTokenizer*
  name: XMLTokenizer
  href: api/io.xml.XMLTokenizer.html#io_xml_XMLTokenizer_XMLTokenizer_
  isSpec: "True"
  fullName: io.xml.XMLTokenizer.XMLTokenizer
  nameWithType: XMLTokenizer.XMLTokenizer
  package: io.xml
- uid: physics.collision
  name: physics.collision
  href: api/physics.collision.html
  fullName: physics.collision
  nameWithType: physics.collision
- uid: physics.collision.Collider
  name: Collider
  href: api/physics.collision.Collider.html
  fullName: physics.collision.Collider
  nameWithType: Collider
- uid: physics.collision.Collider.canCollideWith(physics.collision.Collider)
  name: canCollideWith(Collider collider)
  href: api/physics.collision.Collider.html#physics_collision_Collider_canCollideWith_physics_collision_Collider_
  fullName: physics.collision.Collider.canCollideWith(Collider collider)
  nameWithType: Collider.canCollideWith(Collider collider)
- uid: physics.collision.Collider.canCollideWith*
  name: canCollideWith
  href: api/physics.collision.Collider.html#physics_collision_Collider_canCollideWith_
  isSpec: "True"
  fullName: physics.collision.Collider.canCollideWith
  nameWithType: Collider.canCollideWith
  package: physics.collision
- uid: physics.collision.Collider.detectCollision(physics.collision.Collider)
  name: detectCollision(Collider collider)
  href: api/physics.collision.Collider.html#physics_collision_Collider_detectCollision_physics_collision_Collider_
  fullName: physics.collision.Collider.detectCollision(Collider collider)
  nameWithType: Collider.detectCollision(Collider collider)
- uid: physics.collision.Collider.detectCollision*
  name: detectCollision
  href: api/physics.collision.Collider.html#physics_collision_Collider_detectCollision_
  isSpec: "True"
  fullName: physics.collision.Collider.detectCollision
  nameWithType: Collider.detectCollision
  package: physics.collision
- uid: physics.collision.Collider.getShape()
  name: getShape()
  href: api/physics.collision.Collider.html#physics_collision_Collider_getShape__
  fullName: physics.collision.Collider.getShape()
  nameWithType: Collider.getShape()
- uid: physics.collision.Collider.getShape*
  name: getShape
  href: api/physics.collision.Collider.html#physics_collision_Collider_getShape_
  isSpec: "True"
  fullName: physics.collision.Collider.getShape
  nameWithType: Collider.getShape
  package: physics.collision
- uid: physics.collision.Collider.hasMask(int)
  name: hasMask(int layer)
  href: api/physics.collision.Collider.html#physics_collision_Collider_hasMask_int_
  fullName: physics.collision.Collider.hasMask(int layer)
  nameWithType: Collider.hasMask(int layer)
- uid: physics.collision.Collider.hasMask*
  name: hasMask
  href: api/physics.collision.Collider.html#physics_collision_Collider_hasMask_
  isSpec: "True"
  fullName: physics.collision.Collider.hasMask
  nameWithType: Collider.hasMask
  package: physics.collision
- uid: physics.collision.Collider.isOnLayer(int)
  name: isOnLayer(int layer)
  href: api/physics.collision.Collider.html#physics_collision_Collider_isOnLayer_int_
  fullName: physics.collision.Collider.isOnLayer(int layer)
  nameWithType: Collider.isOnLayer(int layer)
- uid: physics.collision.Collider.isOnLayer*
  name: isOnLayer
  href: api/physics.collision.Collider.html#physics_collision_Collider_isOnLayer_
  isSpec: "True"
  fullName: physics.collision.Collider.isOnLayer
  nameWithType: Collider.isOnLayer
  package: physics.collision
- uid: physics.collision.Collider.layers()
  name: layers()
  href: api/physics.collision.Collider.html#physics_collision_Collider_layers__
  fullName: physics.collision.Collider.layers()
  nameWithType: Collider.layers()
- uid: physics.collision.Collider.layers*
  name: layers
  href: api/physics.collision.Collider.html#physics_collision_Collider_layers_
  isSpec: "True"
  fullName: physics.collision.Collider.layers
  nameWithType: Collider.layers
  package: physics.collision
- uid: physics.collision.Collider.mask()
  name: mask()
  href: api/physics.collision.Collider.html#physics_collision_Collider_mask__
  fullName: physics.collision.Collider.mask()
  nameWithType: Collider.mask()
- uid: physics.collision.Collider.mask*
  name: mask
  href: api/physics.collision.Collider.html#physics_collision_Collider_mask_
  isSpec: "True"
  fullName: physics.collision.Collider.mask
  nameWithType: Collider.mask
  package: physics.collision
- uid: physics.collision.Collider.passive()
  name: passive()
  href: api/physics.collision.Collider.html#physics_collision_Collider_passive__
  fullName: physics.collision.Collider.passive()
  nameWithType: Collider.passive()
- uid: physics.collision.Collider.passive*
  name: passive
  href: api/physics.collision.Collider.html#physics_collision_Collider_passive_
  isSpec: "True"
  fullName: physics.collision.Collider.passive
  nameWithType: Collider.passive
  package: physics.collision
- uid: physics.collision.Collider.setLayer(int,boolean)
  name: setLayer(int layer, boolean active)
  href: api/physics.collision.Collider.html#physics_collision_Collider_setLayer_int_boolean_
  fullName: physics.collision.Collider.setLayer(int layer, boolean active)
  nameWithType: Collider.setLayer(int layer, boolean active)
- uid: physics.collision.Collider.setLayer*
  name: setLayer
  href: api/physics.collision.Collider.html#physics_collision_Collider_setLayer_
  isSpec: "True"
  fullName: physics.collision.Collider.setLayer
  nameWithType: Collider.setLayer
  package: physics.collision
- uid: physics.collision.Collider.setMask(int,boolean)
  name: setMask(int layer, boolean active)
  href: api/physics.collision.Collider.html#physics_collision_Collider_setMask_int_boolean_
  fullName: physics.collision.Collider.setMask(int layer, boolean active)
  nameWithType: Collider.setMask(int layer, boolean active)
- uid: physics.collision.Collider.setMask*
  name: setMask
  href: api/physics.collision.Collider.html#physics_collision_Collider_setMask_
  isSpec: "True"
  fullName: physics.collision.Collider.setMask
  nameWithType: Collider.setMask
  package: physics.collision
- uid: physics.collision.CollisionInformation
  name: CollisionInformation
  href: api/physics.collision.CollisionInformation.html
  fullName: physics.collision.CollisionInformation
  nameWithType: CollisionInformation
- uid: physics.collision.CollisionInformation.collision()
  name: collision()
  href: api/physics.collision.CollisionInformation.html#physics_collision_CollisionInformation_collision__
  fullName: physics.collision.CollisionInformation.collision()
  nameWithType: CollisionInformation.collision()
- uid: physics.collision.CollisionInformation.collision*
  name: collision
  href: api/physics.collision.CollisionInformation.html#physics_collision_CollisionInformation_collision_
  isSpec: "True"
  fullName: physics.collision.CollisionInformation.collision
  nameWithType: CollisionInformation.collision
  package: physics.collision
- uid: physics.collision.CollisionInformation.CollisionInformation(java.lang.Object,boolean)
  name: CollisionInformation(Object data, boolean collision)
  href: api/physics.collision.CollisionInformation.html#physics_collision_CollisionInformation_CollisionInformation_java_lang_Object_boolean_
  fullName: physics.collision.CollisionInformation.CollisionInformation(Object data, boolean collision)
  nameWithType: CollisionInformation.CollisionInformation(Object data, boolean collision)
- uid: physics.collision.CollisionInformation.CollisionInformation*
  name: CollisionInformation
  href: api/physics.collision.CollisionInformation.html#physics_collision_CollisionInformation_CollisionInformation_
  isSpec: "True"
  fullName: physics.collision.CollisionInformation.CollisionInformation
  nameWithType: CollisionInformation.CollisionInformation
  package: physics.collision
- uid: physics.collision.CollisionInformation.get()
  name: get()
  href: api/physics.collision.CollisionInformation.html#physics_collision_CollisionInformation_get__
  fullName: physics.collision.CollisionInformation.get()
  nameWithType: CollisionInformation.get()
- uid: physics.collision.CollisionInformation.get*
  name: get
  href: api/physics.collision.CollisionInformation.html#physics_collision_CollisionInformation_get_
  isSpec: "True"
  fullName: physics.collision.CollisionInformation.get
  nameWithType: CollisionInformation.get
  package: physics.collision
- uid: physics.collision.RayCastResult
  name: RayCastResult
  href: api/physics.collision.RayCastResult.html
  fullName: physics.collision.RayCastResult
  nameWithType: RayCastResult
- uid: physics.collision.RayCastResult.didHit()
  name: didHit()
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_didHit__
  fullName: physics.collision.RayCastResult.didHit()
  nameWithType: RayCastResult.didHit()
- uid: physics.collision.RayCastResult.didHit*
  name: didHit
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_didHit_
  isSpec: "True"
  fullName: physics.collision.RayCastResult.didHit
  nameWithType: RayCastResult.didHit
  package: physics.collision
- uid: physics.collision.RayCastResult.getNormal()
  name: getNormal()
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getNormal__
  fullName: physics.collision.RayCastResult.getNormal()
  nameWithType: RayCastResult.getNormal()
- uid: physics.collision.RayCastResult.getNormal*
  name: getNormal
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getNormal_
  isSpec: "True"
  fullName: physics.collision.RayCastResult.getNormal
  nameWithType: RayCastResult.getNormal
  package: physics.collision
- uid: physics.collision.RayCastResult.getPoint()
  name: getPoint()
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getPoint__
  fullName: physics.collision.RayCastResult.getPoint()
  nameWithType: RayCastResult.getPoint()
- uid: physics.collision.RayCastResult.getPoint*
  name: getPoint
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getPoint_
  isSpec: "True"
  fullName: physics.collision.RayCastResult.getPoint
  nameWithType: RayCastResult.getPoint
  package: physics.collision
- uid: physics.collision.RayCastResult.getStrike()
  name: getStrike()
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getStrike__
  fullName: physics.collision.RayCastResult.getStrike()
  nameWithType: RayCastResult.getStrike()
- uid: physics.collision.RayCastResult.getStrike*
  name: getStrike
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getStrike_
  isSpec: "True"
  fullName: physics.collision.RayCastResult.getStrike
  nameWithType: RayCastResult.getStrike
  package: physics.collision
- uid: physics.collision.RayCastResult.getStrikeLength()
  name: getStrikeLength()
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getStrikeLength__
  fullName: physics.collision.RayCastResult.getStrikeLength()
  nameWithType: RayCastResult.getStrikeLength()
- uid: physics.collision.RayCastResult.getStrikeLength*
  name: getStrikeLength
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_getStrikeLength_
  isSpec: "True"
  fullName: physics.collision.RayCastResult.getStrikeLength
  nameWithType: RayCastResult.getStrikeLength
  package: physics.collision
- uid: physics.collision.RayCastResult.RayCastResult()
  name: RayCastResult()
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_RayCastResult__
  fullName: physics.collision.RayCastResult.RayCastResult()
  nameWithType: RayCastResult.RayCastResult()
- uid: physics.collision.RayCastResult.RayCastResult(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,float)
  name: RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_RayCastResult_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_float_
  fullName: physics.collision.RayCastResult.RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)
  nameWithType: RayCastResult.RayCastResult(Vector2f point, Vector2f normal, Vector2f strike, float strikeLength)
- uid: physics.collision.RayCastResult.RayCastResult*
  name: RayCastResult
  href: api/physics.collision.RayCastResult.html#physics_collision_RayCastResult_RayCastResult_
  isSpec: "True"
  fullName: physics.collision.RayCastResult.RayCastResult
  nameWithType: RayCastResult.RayCastResult
  package: physics.collision
- uid: physics.collision.shape
  name: physics.collision.shape
  href: api/physics.collision.shape.html
  fullName: physics.collision.shape
  nameWithType: physics.collision.shape
- uid: physics.collision.shape.Circle
  name: Circle
  href: api/physics.collision.shape.Circle.html
  fullName: physics.collision.shape.Circle
  nameWithType: Circle
- uid: physics.collision.shape.Circle.adjust()
  name: adjust()
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_adjust__
  fullName: physics.collision.shape.Circle.adjust()
  nameWithType: Circle.adjust()
- uid: physics.collision.shape.Circle.adjust*
  name: adjust
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_adjust_
  isSpec: "True"
  fullName: physics.collision.shape.Circle.adjust
  nameWithType: Circle.adjust
  package: physics.collision.shape
- uid: physics.collision.shape.Circle.Circle(org.joml.Vector2f,float)
  name: Circle(Vector2f relativeCenter, float radius)
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_Circle_org_joml_Vector2f_float_
  fullName: physics.collision.shape.Circle.Circle(Vector2f relativeCenter, float radius)
  nameWithType: Circle.Circle(Vector2f relativeCenter, float radius)
- uid: physics.collision.shape.Circle.Circle*
  name: Circle
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_Circle_
  isSpec: "True"
  fullName: physics.collision.shape.Circle.Circle
  nameWithType: Circle.Circle
  package: physics.collision.shape
- uid: physics.collision.shape.Circle.intersection(physics.collision.shape.Circle)
  name: intersection(Circle circle)
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_intersection_physics_collision_shape_Circle_
  fullName: physics.collision.shape.Circle.intersection(Circle circle)
  nameWithType: Circle.intersection(Circle circle)
- uid: physics.collision.shape.Circle.intersection*
  name: intersection
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_intersection_
  isSpec: "True"
  fullName: physics.collision.shape.Circle.intersection
  nameWithType: Circle.intersection
  package: physics.collision.shape
- uid: physics.collision.shape.Circle.rayCast(org.joml.Vector2f,org.joml.Vector2f,float)
  name: rayCast(Vector2f start, Vector2f rayDirection, float maxLength)
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_rayCast_org_joml_Vector2f_org_joml_Vector2f_float_
  fullName: physics.collision.shape.Circle.rayCast(Vector2f start, Vector2f rayDirection, float maxLength)
  nameWithType: Circle.rayCast(Vector2f start, Vector2f rayDirection, float maxLength)
- uid: physics.collision.shape.Circle.rayCast*
  name: rayCast
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_rayCast_
  isSpec: "True"
  fullName: physics.collision.shape.Circle.rayCast
  nameWithType: Circle.rayCast
  package: physics.collision.shape
- uid: physics.collision.shape.Circle.supportPoint(org.joml.Vector2f)
  name: supportPoint(Vector2f v)
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_supportPoint_org_joml_Vector2f_
  fullName: physics.collision.shape.Circle.supportPoint(Vector2f v)
  nameWithType: Circle.supportPoint(Vector2f v)
- uid: physics.collision.shape.Circle.supportPoint*
  name: supportPoint
  href: api/physics.collision.shape.Circle.html#physics_collision_shape_Circle_supportPoint_
  isSpec: "True"
  fullName: physics.collision.shape.Circle.supportPoint
  nameWithType: Circle.supportPoint
  package: physics.collision.shape
- uid: physics.collision.shape.ConvexPolygon
  name: ConvexPolygon
  href: api/physics.collision.shape.ConvexPolygon.html
  fullName: physics.collision.shape.ConvexPolygon
  nameWithType: ConvexPolygon
- uid: physics.collision.shape.ConvexPolygon.ConvexPolygon(org.joml.Vector2f...)
  name: ConvexPolygon(Vector2f[] relatives)
  href: api/physics.collision.shape.ConvexPolygon.html#physics_collision_shape_ConvexPolygon_ConvexPolygon_org_joml_Vector2f____
  fullName: physics.collision.shape.ConvexPolygon.ConvexPolygon(Vector2f[] relatives)
  nameWithType: ConvexPolygon.ConvexPolygon(Vector2f[] relatives)
- uid: physics.collision.shape.ConvexPolygon.ConvexPolygon*
  name: ConvexPolygon
  href: api/physics.collision.shape.ConvexPolygon.html#physics_collision_shape_ConvexPolygon_ConvexPolygon_
  isSpec: "True"
  fullName: physics.collision.shape.ConvexPolygon.ConvexPolygon
  nameWithType: ConvexPolygon.ConvexPolygon
  package: physics.collision.shape
- uid: physics.collision.shape.Face
  name: Face
  href: api/physics.collision.shape.Face.html
  fullName: physics.collision.shape.Face
  nameWithType: Face
- uid: physics.collision.shape.Face.Face(physics.collision.shape.PrimitiveShape,org.joml.Vector2f,org.joml.Vector2f)
  name: Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_Face_physics_collision_shape_PrimitiveShape_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.shape.Face.Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)
  nameWithType: Face.Face(PrimitiveShape parent, Vector2f relativePoint, Vector2f relativeFace)
- uid: physics.collision.shape.Face.Face*
  name: Face
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_Face_
  isSpec: "True"
  fullName: physics.collision.shape.Face.Face
  nameWithType: Face.Face
  package: physics.collision.shape
- uid: physics.collision.shape.Face.getAbsoluteFixPoint()
  name: getAbsoluteFixPoint()
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getAbsoluteFixPoint__
  fullName: physics.collision.shape.Face.getAbsoluteFixPoint()
  nameWithType: Face.getAbsoluteFixPoint()
- uid: physics.collision.shape.Face.getAbsoluteFixPoint*
  name: getAbsoluteFixPoint
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getAbsoluteFixPoint_
  isSpec: "True"
  fullName: physics.collision.shape.Face.getAbsoluteFixPoint
  nameWithType: Face.getAbsoluteFixPoint
  package: physics.collision.shape
- uid: physics.collision.shape.Face.getNormal()
  name: getNormal()
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getNormal__
  fullName: physics.collision.shape.Face.getNormal()
  nameWithType: Face.getNormal()
- uid: physics.collision.shape.Face.getNormal*
  name: getNormal
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getNormal_
  isSpec: "True"
  fullName: physics.collision.shape.Face.getNormal
  nameWithType: Face.getNormal
  package: physics.collision.shape
- uid: physics.collision.shape.Face.getRelativeFace()
  name: getRelativeFace()
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getRelativeFace__
  fullName: physics.collision.shape.Face.getRelativeFace()
  nameWithType: Face.getRelativeFace()
- uid: physics.collision.shape.Face.getRelativeFace*
  name: getRelativeFace
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getRelativeFace_
  isSpec: "True"
  fullName: physics.collision.shape.Face.getRelativeFace
  nameWithType: Face.getRelativeFace
  package: physics.collision.shape
- uid: physics.collision.shape.Face.getRelativeFixPoint()
  name: getRelativeFixPoint()
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getRelativeFixPoint__
  fullName: physics.collision.shape.Face.getRelativeFixPoint()
  nameWithType: Face.getRelativeFixPoint()
- uid: physics.collision.shape.Face.getRelativeFixPoint*
  name: getRelativeFixPoint
  href: api/physics.collision.shape.Face.html#physics_collision_shape_Face_getRelativeFixPoint_
  isSpec: "True"
  fullName: physics.collision.shape.Face.getRelativeFixPoint
  nameWithType: Face.getRelativeFixPoint
  package: physics.collision.shape
- uid: physics.collision.shape.Line
  name: Line
  href: api/physics.collision.shape.Line.html
  fullName: physics.collision.shape.Line
  nameWithType: Line
- uid: physics.collision.shape.Line.Line(org.joml.Vector2f,org.joml.Vector2f)
  name: Line(Vector2f relativeA, Vector2f relativeB)
  href: api/physics.collision.shape.Line.html#physics_collision_shape_Line_Line_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.shape.Line.Line(Vector2f relativeA, Vector2f relativeB)
  nameWithType: Line.Line(Vector2f relativeA, Vector2f relativeB)
- uid: physics.collision.shape.Line.Line*
  name: Line
  href: api/physics.collision.shape.Line.html#physics_collision_shape_Line_Line_
  isSpec: "True"
  fullName: physics.collision.shape.Line.Line
  nameWithType: Line.Line
  package: physics.collision.shape
- uid: physics.collision.shape.Line.supportPoint(org.joml.Vector2f)
  name: supportPoint(Vector2f v)
  href: api/physics.collision.shape.Line.html#physics_collision_shape_Line_supportPoint_org_joml_Vector2f_
  fullName: physics.collision.shape.Line.supportPoint(Vector2f v)
  nameWithType: Line.supportPoint(Vector2f v)
- uid: physics.collision.shape.Line.supportPoint*
  name: supportPoint
  href: api/physics.collision.shape.Line.html#physics_collision_shape_Line_supportPoint_
  isSpec: "True"
  fullName: physics.collision.shape.Line.supportPoint
  nameWithType: Line.supportPoint
  package: physics.collision.shape
- uid: physics.collision.shape.Point
  name: Point
  href: api/physics.collision.shape.Point.html
  fullName: physics.collision.shape.Point
  nameWithType: Point
- uid: physics.collision.shape.Point.Point(org.joml.Vector2f)
  name: Point(Vector2f relativePoint)
  href: api/physics.collision.shape.Point.html#physics_collision_shape_Point_Point_org_joml_Vector2f_
  fullName: physics.collision.shape.Point.Point(Vector2f relativePoint)
  nameWithType: Point.Point(Vector2f relativePoint)
- uid: physics.collision.shape.Point.Point*
  name: Point
  href: api/physics.collision.shape.Point.html#physics_collision_shape_Point_Point_
  isSpec: "True"
  fullName: physics.collision.shape.Point.Point
  nameWithType: Point.Point
  package: physics.collision.shape
- uid: physics.collision.shape.Point.supportPoint(org.joml.Vector2f)
  name: supportPoint(Vector2f v)
  href: api/physics.collision.shape.Point.html#physics_collision_shape_Point_supportPoint_org_joml_Vector2f_
  fullName: physics.collision.shape.Point.supportPoint(Vector2f v)
  nameWithType: Point.supportPoint(Vector2f v)
- uid: physics.collision.shape.Point.supportPoint*
  name: supportPoint
  href: api/physics.collision.shape.Point.html#physics_collision_shape_Point_supportPoint_
  isSpec: "True"
  fullName: physics.collision.shape.Point.supportPoint
  nameWithType: Point.supportPoint
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape
  name: PrimitiveShape
  href: api/physics.collision.shape.PrimitiveShape.html
  fullName: physics.collision.shape.PrimitiveShape
  nameWithType: PrimitiveShape
- uid: physics.collision.shape.PrimitiveShape.absoluteCentroid
  name: absoluteCentroid
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_absoluteCentroid
  fullName: physics.collision.shape.PrimitiveShape.absoluteCentroid
  nameWithType: PrimitiveShape.absoluteCentroid
- uid: physics.collision.shape.PrimitiveShape.absolutes
  name: absolutes
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_absolutes
  fullName: physics.collision.shape.PrimitiveShape.absolutes
  nameWithType: PrimitiveShape.absolutes
- uid: physics.collision.shape.PrimitiveShape.adjust()
  name: adjust()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_adjust__
  fullName: physics.collision.shape.PrimitiveShape.adjust()
  nameWithType: PrimitiveShape.adjust()
- uid: physics.collision.shape.PrimitiveShape.adjust*
  name: adjust
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_adjust_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.adjust
  nameWithType: PrimitiveShape.adjust
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.boundingSphere
  name: boundingSphere
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_boundingSphere
  fullName: physics.collision.shape.PrimitiveShape.boundingSphere
  nameWithType: PrimitiveShape.boundingSphere
- uid: physics.collision.shape.PrimitiveShape.boundingSphere()
  name: boundingSphere()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_boundingSphere__
  fullName: physics.collision.shape.PrimitiveShape.boundingSphere()
  nameWithType: PrimitiveShape.boundingSphere()
- uid: physics.collision.shape.PrimitiveShape.boundingSphere*
  name: boundingSphere
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_boundingSphere_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.boundingSphere
  nameWithType: PrimitiveShape.boundingSphere
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.centroid()
  name: centroid()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_centroid__
  fullName: physics.collision.shape.PrimitiveShape.centroid()
  nameWithType: PrimitiveShape.centroid()
- uid: physics.collision.shape.PrimitiveShape.centroid*
  name: centroid
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_centroid_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.centroid
  nameWithType: PrimitiveShape.centroid
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.faces
  name: faces
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_faces
  fullName: physics.collision.shape.PrimitiveShape.faces
  nameWithType: PrimitiveShape.faces
- uid: physics.collision.shape.PrimitiveShape.faces()
  name: faces()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_faces__
  fullName: physics.collision.shape.PrimitiveShape.faces()
  nameWithType: PrimitiveShape.faces()
- uid: physics.collision.shape.PrimitiveShape.faces*
  name: faces
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_faces_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.faces
  nameWithType: PrimitiveShape.faces
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.getAbsolutePoints()
  name: getAbsolutePoints()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_getAbsolutePoints__
  fullName: physics.collision.shape.PrimitiveShape.getAbsolutePoints()
  nameWithType: PrimitiveShape.getAbsolutePoints()
- uid: physics.collision.shape.PrimitiveShape.getAbsolutePoints*
  name: getAbsolutePoints
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_getAbsolutePoints_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.getAbsolutePoints
  nameWithType: PrimitiveShape.getAbsolutePoints
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.init()
  name: init()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_init__
  fullName: physics.collision.shape.PrimitiveShape.init()
  nameWithType: PrimitiveShape.init()
- uid: physics.collision.shape.PrimitiveShape.init*
  name: init
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_init_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.init
  nameWithType: PrimitiveShape.init
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.initSphere()
  name: initSphere()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_initSphere__
  fullName: physics.collision.shape.PrimitiveShape.initSphere()
  nameWithType: PrimitiveShape.initSphere()
- uid: physics.collision.shape.PrimitiveShape.initSphere*
  name: initSphere
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_initSphere_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.initSphere
  nameWithType: PrimitiveShape.initSphere
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.position()
  name: position()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_position__
  fullName: physics.collision.shape.PrimitiveShape.position()
  nameWithType: PrimitiveShape.position()
- uid: physics.collision.shape.PrimitiveShape.position*
  name: position
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_position_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.position
  nameWithType: PrimitiveShape.position
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.PrimitiveShape(org.joml.Vector2f...)
  name: PrimitiveShape(Vector2f[] relatives)
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_PrimitiveShape_org_joml_Vector2f____
  fullName: physics.collision.shape.PrimitiveShape.PrimitiveShape(Vector2f[] relatives)
  nameWithType: PrimitiveShape.PrimitiveShape(Vector2f[] relatives)
- uid: physics.collision.shape.PrimitiveShape.PrimitiveShape(physics.collision.shape.ShapeType,org.joml.Vector2f...)
  name: PrimitiveShape(ShapeType type, Vector2f[] relatives)
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_PrimitiveShape_physics_collision_shape_ShapeType_org_joml_Vector2f____
  fullName: physics.collision.shape.PrimitiveShape.PrimitiveShape(ShapeType type, Vector2f[] relatives)
  nameWithType: PrimitiveShape.PrimitiveShape(ShapeType type, Vector2f[] relatives)
- uid: physics.collision.shape.PrimitiveShape.PrimitiveShape*
  name: PrimitiveShape
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_PrimitiveShape_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.PrimitiveShape
  nameWithType: PrimitiveShape.PrimitiveShape
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.relativeCentroid
  name: relativeCentroid
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_relativeCentroid
  fullName: physics.collision.shape.PrimitiveShape.relativeCentroid
  nameWithType: PrimitiveShape.relativeCentroid
- uid: physics.collision.shape.PrimitiveShape.relatives
  name: relatives
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_relatives
  fullName: physics.collision.shape.PrimitiveShape.relatives
  nameWithType: PrimitiveShape.relatives
- uid: physics.collision.shape.PrimitiveShape.rotateShape(float,physics.collision.shape.RotationType,org.joml.Vector2f)
  name: rotateShape(float radianAngle, RotationType type, Vector2f point)
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_rotateShape_float_physics_collision_shape_RotationType_org_joml_Vector2f_
  fullName: physics.collision.shape.PrimitiveShape.rotateShape(float radianAngle, RotationType type, Vector2f point)
  nameWithType: PrimitiveShape.rotateShape(float radianAngle, RotationType type, Vector2f point)
- uid: physics.collision.shape.PrimitiveShape.rotateShape*
  name: rotateShape
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_rotateShape_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.rotateShape
  nameWithType: PrimitiveShape.rotateShape
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.setPosition(float,float)
  name: setPosition(float x, float y)
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_setPosition_float_float_
  fullName: physics.collision.shape.PrimitiveShape.setPosition(float x, float y)
  nameWithType: PrimitiveShape.setPosition(float x, float y)
- uid: physics.collision.shape.PrimitiveShape.setPosition(org.joml.Vector2f)
  name: setPosition(Vector2f position)
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_setPosition_org_joml_Vector2f_
  fullName: physics.collision.shape.PrimitiveShape.setPosition(Vector2f position)
  nameWithType: PrimitiveShape.setPosition(Vector2f position)
- uid: physics.collision.shape.PrimitiveShape.setPosition*
  name: setPosition
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_setPosition_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.setPosition
  nameWithType: PrimitiveShape.setPosition
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.supportPoint(org.joml.Vector2f)
  name: supportPoint(Vector2f v)
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_supportPoint_org_joml_Vector2f_
  fullName: physics.collision.shape.PrimitiveShape.supportPoint(Vector2f v)
  nameWithType: PrimitiveShape.supportPoint(Vector2f v)
- uid: physics.collision.shape.PrimitiveShape.supportPoint*
  name: supportPoint
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_supportPoint_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.supportPoint
  nameWithType: PrimitiveShape.supportPoint
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.type()
  name: type()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_type__
  fullName: physics.collision.shape.PrimitiveShape.type()
  nameWithType: PrimitiveShape.type()
- uid: physics.collision.shape.PrimitiveShape.type*
  name: type
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_type_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.type
  nameWithType: PrimitiveShape.type
  package: physics.collision.shape
- uid: physics.collision.shape.PrimitiveShape.vertices
  name: vertices
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_vertices
  fullName: physics.collision.shape.PrimitiveShape.vertices
  nameWithType: PrimitiveShape.vertices
- uid: physics.collision.shape.PrimitiveShape.vertices()
  name: vertices()
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_vertices__
  fullName: physics.collision.shape.PrimitiveShape.vertices()
  nameWithType: PrimitiveShape.vertices()
- uid: physics.collision.shape.PrimitiveShape.vertices*
  name: vertices
  href: api/physics.collision.shape.PrimitiveShape.html#physics_collision_shape_PrimitiveShape_vertices_
  isSpec: "True"
  fullName: physics.collision.shape.PrimitiveShape.vertices
  nameWithType: PrimitiveShape.vertices
  package: physics.collision.shape
- uid: physics.collision.shape.Quadrilateral
  name: Quadrilateral
  href: api/physics.collision.shape.Quadrilateral.html
  fullName: physics.collision.shape.Quadrilateral
  nameWithType: Quadrilateral
- uid: physics.collision.shape.Quadrilateral.Quadrilateral(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: Quadrilateral(Vector2f a, Vector2f b, Vector2f c, Vector2f d)
  href: api/physics.collision.shape.Quadrilateral.html#physics_collision_shape_Quadrilateral_Quadrilateral_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.shape.Quadrilateral.Quadrilateral(Vector2f a, Vector2f b, Vector2f c, Vector2f d)
  nameWithType: Quadrilateral.Quadrilateral(Vector2f a, Vector2f b, Vector2f c, Vector2f d)
- uid: physics.collision.shape.Quadrilateral.Quadrilateral*
  name: Quadrilateral
  href: api/physics.collision.shape.Quadrilateral.html#physics_collision_shape_Quadrilateral_Quadrilateral_
  isSpec: "True"
  fullName: physics.collision.shape.Quadrilateral.Quadrilateral
  nameWithType: Quadrilateral.Quadrilateral
  package: physics.collision.shape
- uid: physics.collision.shape.RotationType
  name: RotationType
  href: api/physics.collision.shape.RotationType.html
  fullName: physics.collision.shape.RotationType
  nameWithType: RotationType
- uid: physics.collision.shape.RotationType.AROUND_CENTER
  name: AROUND_CENTER
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_AROUND_CENTER
  fullName: physics.collision.shape.RotationType.AROUND_CENTER
  nameWithType: RotationType.AROUND_CENTER
- uid: physics.collision.shape.RotationType.AROUND_ORIGIN
  name: AROUND_ORIGIN
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_AROUND_ORIGIN
  fullName: physics.collision.shape.RotationType.AROUND_ORIGIN
  nameWithType: RotationType.AROUND_ORIGIN
- uid: physics.collision.shape.RotationType.AROUND_POINT
  name: AROUND_POINT
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_AROUND_POINT
  fullName: physics.collision.shape.RotationType.AROUND_POINT
  nameWithType: RotationType.AROUND_POINT
- uid: physics.collision.shape.RotationType.RotationType()
  name: RotationType()
  href: api/physics.collision.shape.RotationType.html
  fullName: physics.collision.shape.RotationType.RotationType()
  nameWithType: RotationType.RotationType()
- uid: physics.collision.shape.RotationType.RotationType*
  name: RotationType
  href: api/physics.collision.shape.RotationType.html
  isSpec: "True"
  fullName: physics.collision.shape.RotationType.RotationType
  nameWithType: RotationType.RotationType
  package: physics.collision.shape
- uid: physics.collision.shape.RotationType.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_valueOf_java_lang_String_
  fullName: physics.collision.shape.RotationType.valueOf(String name)
  nameWithType: RotationType.valueOf(String name)
- uid: physics.collision.shape.RotationType.valueOf*
  name: valueOf
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_valueOf_
  isSpec: "True"
  fullName: physics.collision.shape.RotationType.valueOf
  nameWithType: RotationType.valueOf
  package: physics.collision.shape
- uid: physics.collision.shape.RotationType.values()
  name: values()
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_values__
  fullName: physics.collision.shape.RotationType.values()
  nameWithType: RotationType.values()
- uid: physics.collision.shape.RotationType.values*
  name: values
  href: api/physics.collision.shape.RotationType.html#physics_collision_shape_RotationType_values_
  isSpec: "True"
  fullName: physics.collision.shape.RotationType.values
  nameWithType: RotationType.values
  package: physics.collision.shape
- uid: physics.collision.shape.ShapeType
  name: ShapeType
  href: api/physics.collision.shape.ShapeType.html
  fullName: physics.collision.shape.ShapeType
  nameWithType: ShapeType
- uid: physics.collision.shape.ShapeType.CIRCLE
  name: CIRCLE
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_CIRCLE
  fullName: physics.collision.shape.ShapeType.CIRCLE
  nameWithType: ShapeType.CIRCLE
- uid: physics.collision.shape.ShapeType.LINE
  name: LINE
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_LINE
  fullName: physics.collision.shape.ShapeType.LINE
  nameWithType: ShapeType.LINE
- uid: physics.collision.shape.ShapeType.POINT
  name: POINT
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_POINT
  fullName: physics.collision.shape.ShapeType.POINT
  nameWithType: ShapeType.POINT
- uid: physics.collision.shape.ShapeType.POLYGON
  name: POLYGON
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_POLYGON
  fullName: physics.collision.shape.ShapeType.POLYGON
  nameWithType: ShapeType.POLYGON
- uid: physics.collision.shape.ShapeType.QUADRILATERAL
  name: QUADRILATERAL
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_QUADRILATERAL
  fullName: physics.collision.shape.ShapeType.QUADRILATERAL
  nameWithType: ShapeType.QUADRILATERAL
- uid: physics.collision.shape.ShapeType.ShapeType()
  name: ShapeType()
  href: api/physics.collision.shape.ShapeType.html
  fullName: physics.collision.shape.ShapeType.ShapeType()
  nameWithType: ShapeType.ShapeType()
- uid: physics.collision.shape.ShapeType.ShapeType*
  name: ShapeType
  href: api/physics.collision.shape.ShapeType.html
  isSpec: "True"
  fullName: physics.collision.shape.ShapeType.ShapeType
  nameWithType: ShapeType.ShapeType
  package: physics.collision.shape
- uid: physics.collision.shape.ShapeType.TRIANGLE
  name: TRIANGLE
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_TRIANGLE
  fullName: physics.collision.shape.ShapeType.TRIANGLE
  nameWithType: ShapeType.TRIANGLE
- uid: physics.collision.shape.ShapeType.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_valueOf_java_lang_String_
  fullName: physics.collision.shape.ShapeType.valueOf(String name)
  nameWithType: ShapeType.valueOf(String name)
- uid: physics.collision.shape.ShapeType.valueOf*
  name: valueOf
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_valueOf_
  isSpec: "True"
  fullName: physics.collision.shape.ShapeType.valueOf
  nameWithType: ShapeType.valueOf
  package: physics.collision.shape
- uid: physics.collision.shape.ShapeType.values()
  name: values()
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_values__
  fullName: physics.collision.shape.ShapeType.values()
  nameWithType: ShapeType.values()
- uid: physics.collision.shape.ShapeType.values*
  name: values
  href: api/physics.collision.shape.ShapeType.html#physics_collision_shape_ShapeType_values_
  isSpec: "True"
  fullName: physics.collision.shape.ShapeType.values
  nameWithType: ShapeType.values
  package: physics.collision.shape
- uid: physics.collision.shape.Triangle
  name: Triangle
  href: api/physics.collision.shape.Triangle.html
  fullName: physics.collision.shape.Triangle
  nameWithType: Triangle
- uid: physics.collision.shape.Triangle.Triangle(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: Triangle(Vector2f relativeA, Vector2f relativeB, Vector2f relativeC)
  href: api/physics.collision.shape.Triangle.html#physics_collision_shape_Triangle_Triangle_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.shape.Triangle.Triangle(Vector2f relativeA, Vector2f relativeB, Vector2f relativeC)
  nameWithType: Triangle.Triangle(Vector2f relativeA, Vector2f relativeB, Vector2f relativeC)
- uid: physics.collision.shape.Triangle.Triangle*
  name: Triangle
  href: api/physics.collision.shape.Triangle.html#physics_collision_shape_Triangle_Triangle_
  isSpec: "True"
  fullName: physics.collision.shape.Triangle.Triangle
  nameWithType: Triangle.Triangle
  package: physics.collision.shape
- uid: physics.collision.Shapes
  name: Shapes
  href: api/physics.collision.Shapes.html
  fullName: physics.collision.Shapes
  nameWithType: Shapes
- uid: physics.collision.Shapes.axisAlignedRectangle(float,float,float,float)
  name: axisAlignedRectangle(float ax, float ay, float bx, float by)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_axisAlignedRectangle_float_float_float_float_
  fullName: physics.collision.Shapes.axisAlignedRectangle(float ax, float ay, float bx, float by)
  nameWithType: Shapes.axisAlignedRectangle(float ax, float ay, float bx, float by)
- uid: physics.collision.Shapes.axisAlignedRectangle(org.joml.Vector2f,org.joml.Vector2f)
  name: axisAlignedRectangle(Vector2f a, Vector2f b)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_axisAlignedRectangle_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.Shapes.axisAlignedRectangle(Vector2f a, Vector2f b)
  nameWithType: Shapes.axisAlignedRectangle(Vector2f a, Vector2f b)
- uid: physics.collision.Shapes.axisAlignedRectangle*
  name: axisAlignedRectangle
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_axisAlignedRectangle_
  isSpec: "True"
  fullName: physics.collision.Shapes.axisAlignedRectangle
  nameWithType: Shapes.axisAlignedRectangle
  package: physics.collision
- uid: physics.collision.Shapes.circle(float,float,float)
  name: circle(float x, float y, float r)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_circle_float_float_float_
  fullName: physics.collision.Shapes.circle(float x, float y, float r)
  nameWithType: Shapes.circle(float x, float y, float r)
- uid: physics.collision.Shapes.circle(org.joml.Vector2f,float)
  name: circle(Vector2f center, float radius)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_circle_org_joml_Vector2f_float_
  fullName: physics.collision.Shapes.circle(Vector2f center, float radius)
  nameWithType: Shapes.circle(Vector2f center, float radius)
- uid: physics.collision.Shapes.circle(org.joml.Vector2f,org.joml.Vector2f,float)
  name: circle(Vector2f center, Vector2f circlePosition, float radius)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_circle_org_joml_Vector2f_org_joml_Vector2f_float_
  fullName: physics.collision.Shapes.circle(Vector2f center, Vector2f circlePosition, float radius)
  nameWithType: Shapes.circle(Vector2f center, Vector2f circlePosition, float radius)
- uid: physics.collision.Shapes.circle*
  name: circle
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_circle_
  isSpec: "True"
  fullName: physics.collision.Shapes.circle
  nameWithType: Shapes.circle
  package: physics.collision
- uid: physics.collision.Shapes.convexPolygon(float...)
  name: convexPolygon(float[] coordPairs)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_convexPolygon_float____
  fullName: physics.collision.Shapes.convexPolygon(float[] coordPairs)
  nameWithType: Shapes.convexPolygon(float[] coordPairs)
- uid: physics.collision.Shapes.convexPolygon*
  name: convexPolygon
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_convexPolygon_
  isSpec: "True"
  fullName: physics.collision.Shapes.convexPolygon
  nameWithType: Shapes.convexPolygon
  package: physics.collision
- uid: physics.collision.Shapes.quadrilateral(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: quadrilateral(Vector2f a, Vector2f b, Vector2f c, Vector2f d)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_quadrilateral_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.Shapes.quadrilateral(Vector2f a, Vector2f b, Vector2f c, Vector2f d)
  nameWithType: Shapes.quadrilateral(Vector2f a, Vector2f b, Vector2f c, Vector2f d)
- uid: physics.collision.Shapes.quadrilateral*
  name: quadrilateral
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_quadrilateral_
  isSpec: "True"
  fullName: physics.collision.Shapes.quadrilateral
  nameWithType: Shapes.quadrilateral
  package: physics.collision
- uid: physics.collision.Shapes.Shapes()
  name: Shapes()
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_Shapes__
  fullName: physics.collision.Shapes.Shapes()
  nameWithType: Shapes.Shapes()
- uid: physics.collision.Shapes.Shapes*
  name: Shapes
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_Shapes_
  isSpec: "True"
  fullName: physics.collision.Shapes.Shapes
  nameWithType: Shapes.Shapes
  package: physics.collision
- uid: physics.collision.Shapes.triangle(float,float,float,float,float,float)
  name: triangle(float ax, float ay, float bx, float by, float cx, float cy)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_triangle_float_float_float_float_float_float_
  fullName: physics.collision.Shapes.triangle(float ax, float ay, float bx, float by, float cx, float cy)
  nameWithType: Shapes.triangle(float ax, float ay, float bx, float by, float cx, float cy)
- uid: physics.collision.Shapes.triangle(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: triangle(Vector2f a, Vector2f b, Vector2f c)
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_triangle_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: physics.collision.Shapes.triangle(Vector2f a, Vector2f b, Vector2f c)
  nameWithType: Shapes.triangle(Vector2f a, Vector2f b, Vector2f c)
- uid: physics.collision.Shapes.triangle*
  name: triangle
  href: api/physics.collision.Shapes.html#physics_collision_Shapes_triangle_
  isSpec: "True"
  fullName: physics.collision.Shapes.triangle
  nameWithType: Shapes.triangle
  package: physics.collision
- uid: physics.force
  name: physics.force
  href: api/physics.force.html
  fullName: physics.force
  nameWithType: physics.force
- uid: physics.force.ConstantForce
  name: ConstantForce
  href: api/physics.force.ConstantForce.html
  fullName: physics.force.ConstantForce
  nameWithType: ConstantForce
- uid: physics.force.ConstantForce.ConstantForce(java.lang.String,org.joml.Vector2f)
  name: ConstantForce(String identifier, Vector2f direction)
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_ConstantForce_java_lang_String_org_joml_Vector2f_
  fullName: physics.force.ConstantForce.ConstantForce(String identifier, Vector2f direction)
  nameWithType: ConstantForce.ConstantForce(String identifier, Vector2f direction)
- uid: physics.force.ConstantForce.ConstantForce*
  name: ConstantForce
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_ConstantForce_
  isSpec: "True"
  fullName: physics.force.ConstantForce.ConstantForce
  nameWithType: ConstantForce.ConstantForce
  package: physics.force
- uid: physics.force.ConstantForce.direction()
  name: direction()
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_direction__
  fullName: physics.force.ConstantForce.direction()
  nameWithType: ConstantForce.direction()
- uid: physics.force.ConstantForce.direction*
  name: direction
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_direction_
  isSpec: "True"
  fullName: physics.force.ConstantForce.direction
  nameWithType: ConstantForce.direction
  package: physics.force
- uid: physics.force.ConstantForce.identifier()
  name: identifier()
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_identifier__
  fullName: physics.force.ConstantForce.identifier()
  nameWithType: ConstantForce.identifier()
- uid: physics.force.ConstantForce.identifier*
  name: identifier
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_identifier_
  isSpec: "True"
  fullName: physics.force.ConstantForce.identifier
  nameWithType: ConstantForce.identifier
  package: physics.force
- uid: physics.force.ConstantForce.update(float)
  name: update(float dt)
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_update_float_
  fullName: physics.force.ConstantForce.update(float dt)
  nameWithType: ConstantForce.update(float dt)
- uid: physics.force.ConstantForce.update*
  name: update
  href: api/physics.force.ConstantForce.html#physics_force_ConstantForce_update_
  isSpec: "True"
  fullName: physics.force.ConstantForce.update
  nameWithType: ConstantForce.update
  package: physics.force
- uid: physics.force.Force
  name: Force
  href: api/physics.force.Force.html
  fullName: physics.force.Force
  nameWithType: Force
- uid: physics.force.Force.direction()
  name: direction()
  href: api/physics.force.Force.html#physics_force_Force_direction__
  fullName: physics.force.Force.direction()
  nameWithType: Force.direction()
- uid: physics.force.Force.direction*
  name: direction
  href: api/physics.force.Force.html#physics_force_Force_direction_
  isSpec: "True"
  fullName: physics.force.Force.direction
  nameWithType: Force.direction
  package: physics.force
- uid: physics.force.Force.identifier()
  name: identifier()
  href: api/physics.force.Force.html#physics_force_Force_identifier__
  fullName: physics.force.Force.identifier()
  nameWithType: Force.identifier()
- uid: physics.force.Force.identifier*
  name: identifier
  href: api/physics.force.Force.html#physics_force_Force_identifier_
  isSpec: "True"
  fullName: physics.force.Force.identifier
  nameWithType: Force.identifier
  package: physics.force
- uid: physics.force.Force.update(float)
  name: update(float dt)
  href: api/physics.force.Force.html#physics_force_Force_update_float_
  fullName: physics.force.Force.update(float dt)
  nameWithType: Force.update(float dt)
- uid: physics.force.Force.update*
  name: update
  href: api/physics.force.Force.html#physics_force_Force_update_
  isSpec: "True"
  fullName: physics.force.Force.update
  nameWithType: Force.update
  package: physics.force
- uid: physics.force.IncrementalForce
  name: IncrementalForce
  href: api/physics.force.IncrementalForce.html
  fullName: physics.force.IncrementalForce
  nameWithType: IncrementalForce
- uid: physics.force.IncrementalForce.direction()
  name: direction()
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_direction__
  fullName: physics.force.IncrementalForce.direction()
  nameWithType: IncrementalForce.direction()
- uid: physics.force.IncrementalForce.direction*
  name: direction
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_direction_
  isSpec: "True"
  fullName: physics.force.IncrementalForce.direction
  nameWithType: IncrementalForce.direction
  package: physics.force
- uid: physics.force.IncrementalForce.identifier()
  name: identifier()
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_identifier__
  fullName: physics.force.IncrementalForce.identifier()
  nameWithType: IncrementalForce.identifier()
- uid: physics.force.IncrementalForce.identifier*
  name: identifier
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_identifier_
  isSpec: "True"
  fullName: physics.force.IncrementalForce.identifier
  nameWithType: IncrementalForce.identifier
  package: physics.force
- uid: physics.force.IncrementalForce.IncrementalForce(java.lang.String,org.joml.Vector2f,float,float)
  name: IncrementalForce(String identifier, Vector2f direction, float increment, float limit)
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_IncrementalForce_java_lang_String_org_joml_Vector2f_float_float_
  fullName: physics.force.IncrementalForce.IncrementalForce(String identifier, Vector2f direction, float increment, float limit)
  nameWithType: IncrementalForce.IncrementalForce(String identifier, Vector2f direction, float increment, float limit)
- uid: physics.force.IncrementalForce.IncrementalForce*
  name: IncrementalForce
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_IncrementalForce_
  isSpec: "True"
  fullName: physics.force.IncrementalForce.IncrementalForce
  nameWithType: IncrementalForce.IncrementalForce
  package: physics.force
- uid: physics.force.IncrementalForce.reset()
  name: reset()
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_reset__
  fullName: physics.force.IncrementalForce.reset()
  nameWithType: IncrementalForce.reset()
- uid: physics.force.IncrementalForce.reset*
  name: reset
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_reset_
  isSpec: "True"
  fullName: physics.force.IncrementalForce.reset
  nameWithType: IncrementalForce.reset
  package: physics.force
- uid: physics.force.IncrementalForce.update(float)
  name: update(float dt)
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_update_float_
  fullName: physics.force.IncrementalForce.update(float dt)
  nameWithType: IncrementalForce.update(float dt)
- uid: physics.force.IncrementalForce.update*
  name: update
  href: api/physics.force.IncrementalForce.html#physics_force_IncrementalForce_update_
  isSpec: "True"
  fullName: physics.force.IncrementalForce.update
  nameWithType: IncrementalForce.update
  package: physics.force
- uid: postprocess
  name: postprocess
  href: api/postprocess.html
  fullName: postprocess
  nameWithType: postprocess
- uid: postprocess.BloomEffect
  name: BloomEffect
  href: api/postprocess.BloomEffect.html
  fullName: postprocess.BloomEffect
  nameWithType: BloomEffect
- uid: postprocess.BloomEffect.apply(graphics.Texture)
  name: apply(Texture input)
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_apply_graphics_Texture_
  fullName: postprocess.BloomEffect.apply(Texture input)
  nameWithType: BloomEffect.apply(Texture input)
- uid: postprocess.BloomEffect.apply*
  name: apply
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_apply_
  isSpec: "True"
  fullName: postprocess.BloomEffect.apply
  nameWithType: BloomEffect.apply
  package: postprocess
- uid: postprocess.BloomEffect.BloomEffect(postprocess.PostProcessStep.Target)
  name: BloomEffect(PostProcessStep.Target dest)
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_BloomEffect_postprocess_PostProcessStep_Target_
  fullName: postprocess.BloomEffect.BloomEffect(PostProcessStep.Target dest)
  nameWithType: BloomEffect.BloomEffect(PostProcessStep.Target dest)
- uid: postprocess.BloomEffect.BloomEffect(postprocess.PostProcessStep.Target,float)
  name: BloomEffect(PostProcessStep.Target dest, float bloomAmt)
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_BloomEffect_postprocess_PostProcessStep_Target_float_
  fullName: postprocess.BloomEffect.BloomEffect(PostProcessStep.Target dest, float bloomAmt)
  nameWithType: BloomEffect.BloomEffect(PostProcessStep.Target dest, float bloomAmt)
- uid: postprocess.BloomEffect.BloomEffect*
  name: BloomEffect
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_BloomEffect_
  isSpec: "True"
  fullName: postprocess.BloomEffect.BloomEffect
  nameWithType: BloomEffect.BloomEffect
  package: postprocess
- uid: postprocess.BloomEffect.init()
  name: init()
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_init__
  fullName: postprocess.BloomEffect.init()
  nameWithType: BloomEffect.init()
- uid: postprocess.BloomEffect.init*
  name: init
  href: api/postprocess.BloomEffect.html#postprocess_BloomEffect_init_
  isSpec: "True"
  fullName: postprocess.BloomEffect.init
  nameWithType: BloomEffect.init
  package: postprocess
- uid: postprocess.BrightFilter
  name: BrightFilter
  href: api/postprocess.BrightFilter.html
  fullName: postprocess.BrightFilter
  nameWithType: BrightFilter
- uid: postprocess.BrightFilter.BrightFilter(postprocess.PostProcessStep.Target)
  name: BrightFilter(PostProcessStep.Target target)
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_BrightFilter_postprocess_PostProcessStep_Target_
  fullName: postprocess.BrightFilter.BrightFilter(PostProcessStep.Target target)
  nameWithType: BrightFilter.BrightFilter(PostProcessStep.Target target)
- uid: postprocess.BrightFilter.BrightFilter*
  name: BrightFilter
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_BrightFilter_
  isSpec: "True"
  fullName: postprocess.BrightFilter.BrightFilter
  nameWithType: BrightFilter.BrightFilter
  package: postprocess
- uid: postprocess.BrightFilter.createShader()
  name: createShader()
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_createShader__
  fullName: postprocess.BrightFilter.createShader()
  nameWithType: BrightFilter.createShader()
- uid: postprocess.BrightFilter.createShader*
  name: createShader
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_createShader_
  isSpec: "True"
  fullName: postprocess.BrightFilter.createShader
  nameWithType: BrightFilter.createShader
  package: postprocess
- uid: postprocess.BrightFilter.prepare()
  name: prepare()
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_prepare__
  fullName: postprocess.BrightFilter.prepare()
  nameWithType: BrightFilter.prepare()
- uid: postprocess.BrightFilter.prepare*
  name: prepare
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_prepare_
  isSpec: "True"
  fullName: postprocess.BrightFilter.prepare
  nameWithType: BrightFilter.prepare
  package: postprocess
- uid: postprocess.BrightFilter.setTexture(graphics.Texture)
  name: setTexture(Texture texture)
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_setTexture_graphics_Texture_
  fullName: postprocess.BrightFilter.setTexture(Texture texture)
  nameWithType: BrightFilter.setTexture(Texture texture)
- uid: postprocess.BrightFilter.setTexture*
  name: setTexture
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_setTexture_
  isSpec: "True"
  fullName: postprocess.BrightFilter.setTexture
  nameWithType: BrightFilter.setTexture
  package: postprocess
- uid: postprocess.BrightFilter.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_uploadUniforms_graphics_Shader_
  fullName: postprocess.BrightFilter.uploadUniforms(Shader shader)
  nameWithType: BrightFilter.uploadUniforms(Shader shader)
- uid: postprocess.BrightFilter.uploadUniforms*
  name: uploadUniforms
  href: api/postprocess.BrightFilter.html#postprocess_BrightFilter_uploadUniforms_
  isSpec: "True"
  fullName: postprocess.BrightFilter.uploadUniforms
  nameWithType: BrightFilter.uploadUniforms
  package: postprocess
- uid: postprocess.ForwardToTexture
  name: ForwardToTexture
  href: api/postprocess.ForwardToTexture.html
  fullName: postprocess.ForwardToTexture
  nameWithType: ForwardToTexture
- uid: postprocess.ForwardToTexture.createShader()
  name: createShader()
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_createShader__
  fullName: postprocess.ForwardToTexture.createShader()
  nameWithType: ForwardToTexture.createShader()
- uid: postprocess.ForwardToTexture.createShader*
  name: createShader
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_createShader_
  isSpec: "True"
  fullName: postprocess.ForwardToTexture.createShader
  nameWithType: ForwardToTexture.createShader
  package: postprocess
- uid: postprocess.ForwardToTexture.ForwardToTexture(postprocess.PostProcessStep.Target)
  name: ForwardToTexture(PostProcessStep.Target target)
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_ForwardToTexture_postprocess_PostProcessStep_Target_
  fullName: postprocess.ForwardToTexture.ForwardToTexture(PostProcessStep.Target target)
  nameWithType: ForwardToTexture.ForwardToTexture(PostProcessStep.Target target)
- uid: postprocess.ForwardToTexture.ForwardToTexture*
  name: ForwardToTexture
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_ForwardToTexture_
  isSpec: "True"
  fullName: postprocess.ForwardToTexture.ForwardToTexture
  nameWithType: ForwardToTexture.ForwardToTexture
  package: postprocess
- uid: postprocess.ForwardToTexture.prepare()
  name: prepare()
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_prepare__
  fullName: postprocess.ForwardToTexture.prepare()
  nameWithType: ForwardToTexture.prepare()
- uid: postprocess.ForwardToTexture.prepare*
  name: prepare
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_prepare_
  isSpec: "True"
  fullName: postprocess.ForwardToTexture.prepare
  nameWithType: ForwardToTexture.prepare
  package: postprocess
- uid: postprocess.ForwardToTexture.setTexture(graphics.Texture)
  name: setTexture(Texture texture)
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_setTexture_graphics_Texture_
  fullName: postprocess.ForwardToTexture.setTexture(Texture texture)
  nameWithType: ForwardToTexture.setTexture(Texture texture)
- uid: postprocess.ForwardToTexture.setTexture*
  name: setTexture
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_setTexture_
  isSpec: "True"
  fullName: postprocess.ForwardToTexture.setTexture
  nameWithType: ForwardToTexture.setTexture
  package: postprocess
- uid: postprocess.ForwardToTexture.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_uploadUniforms_graphics_Shader_
  fullName: postprocess.ForwardToTexture.uploadUniforms(Shader shader)
  nameWithType: ForwardToTexture.uploadUniforms(Shader shader)
- uid: postprocess.ForwardToTexture.uploadUniforms*
  name: uploadUniforms
  href: api/postprocess.ForwardToTexture.html#postprocess_ForwardToTexture_uploadUniforms_
  isSpec: "True"
  fullName: postprocess.ForwardToTexture.uploadUniforms
  nameWithType: ForwardToTexture.uploadUniforms
  package: postprocess
- uid: postprocess.HorizontalBlur
  name: HorizontalBlur
  href: api/postprocess.HorizontalBlur.html
  fullName: postprocess.HorizontalBlur
  nameWithType: HorizontalBlur
- uid: postprocess.HorizontalBlur.createShader()
  name: createShader()
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_createShader__
  fullName: postprocess.HorizontalBlur.createShader()
  nameWithType: HorizontalBlur.createShader()
- uid: postprocess.HorizontalBlur.createShader*
  name: createShader
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_createShader_
  isSpec: "True"
  fullName: postprocess.HorizontalBlur.createShader
  nameWithType: HorizontalBlur.createShader
  package: postprocess
- uid: postprocess.HorizontalBlur.HorizontalBlur(postprocess.PostProcessStep.Target)
  name: HorizontalBlur(PostProcessStep.Target target)
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_HorizontalBlur_postprocess_PostProcessStep_Target_
  fullName: postprocess.HorizontalBlur.HorizontalBlur(PostProcessStep.Target target)
  nameWithType: HorizontalBlur.HorizontalBlur(PostProcessStep.Target target)
- uid: postprocess.HorizontalBlur.HorizontalBlur*
  name: HorizontalBlur
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_HorizontalBlur_
  isSpec: "True"
  fullName: postprocess.HorizontalBlur.HorizontalBlur
  nameWithType: HorizontalBlur.HorizontalBlur
  package: postprocess
- uid: postprocess.HorizontalBlur.prepare()
  name: prepare()
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_prepare__
  fullName: postprocess.HorizontalBlur.prepare()
  nameWithType: HorizontalBlur.prepare()
- uid: postprocess.HorizontalBlur.prepare*
  name: prepare
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_prepare_
  isSpec: "True"
  fullName: postprocess.HorizontalBlur.prepare
  nameWithType: HorizontalBlur.prepare
  package: postprocess
- uid: postprocess.HorizontalBlur.setTexture(graphics.Texture)
  name: setTexture(Texture texture)
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_setTexture_graphics_Texture_
  fullName: postprocess.HorizontalBlur.setTexture(Texture texture)
  nameWithType: HorizontalBlur.setTexture(Texture texture)
- uid: postprocess.HorizontalBlur.setTexture*
  name: setTexture
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_setTexture_
  isSpec: "True"
  fullName: postprocess.HorizontalBlur.setTexture
  nameWithType: HorizontalBlur.setTexture
  package: postprocess
- uid: postprocess.HorizontalBlur.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_uploadUniforms_graphics_Shader_
  fullName: postprocess.HorizontalBlur.uploadUniforms(Shader shader)
  nameWithType: HorizontalBlur.uploadUniforms(Shader shader)
- uid: postprocess.HorizontalBlur.uploadUniforms*
  name: uploadUniforms
  href: api/postprocess.HorizontalBlur.html#postprocess_HorizontalBlur_uploadUniforms_
  isSpec: "True"
  fullName: postprocess.HorizontalBlur.uploadUniforms
  nameWithType: HorizontalBlur.uploadUniforms
  package: postprocess
- uid: postprocess.PostProcessing
  name: PostProcessing
  href: api/postprocess.PostProcessing.html
  fullName: postprocess.PostProcessing
  nameWithType: PostProcessing
- uid: postprocess.PostProcessing.finish()
  name: finish()
  href: api/postprocess.PostProcessing.html#postprocess_PostProcessing_finish__
  fullName: postprocess.PostProcessing.finish()
  nameWithType: PostProcessing.finish()
- uid: postprocess.PostProcessing.finish*
  name: finish
  href: api/postprocess.PostProcessing.html#postprocess_PostProcessing_finish_
  isSpec: "True"
  fullName: postprocess.PostProcessing.finish
  nameWithType: PostProcessing.finish
  package: postprocess
- uid: postprocess.PostProcessing.PostProcessing()
  name: PostProcessing()
  href: api/postprocess.PostProcessing.html#postprocess_PostProcessing_PostProcessing__
  fullName: postprocess.PostProcessing.PostProcessing()
  nameWithType: PostProcessing.PostProcessing()
- uid: postprocess.PostProcessing.PostProcessing*
  name: PostProcessing
  href: api/postprocess.PostProcessing.html#postprocess_PostProcessing_PostProcessing_
  isSpec: "True"
  fullName: postprocess.PostProcessing.PostProcessing
  nameWithType: PostProcessing.PostProcessing
  package: postprocess
- uid: postprocess.PostProcessing.prepare()
  name: prepare()
  href: api/postprocess.PostProcessing.html#postprocess_PostProcessing_prepare__
  fullName: postprocess.PostProcessing.prepare()
  nameWithType: PostProcessing.prepare()
- uid: postprocess.PostProcessing.prepare*
  name: prepare
  href: api/postprocess.PostProcessing.html#postprocess_PostProcessing_prepare_
  isSpec: "True"
  fullName: postprocess.PostProcessing.prepare
  nameWithType: PostProcessing.prepare
  package: postprocess
- uid: postprocess.PostProcessPipeline
  name: PostProcessPipeline
  href: api/postprocess.PostProcessPipeline.html
  fullName: postprocess.PostProcessPipeline
  nameWithType: PostProcessPipeline
- uid: postprocess.PostProcessPipeline.apply(graphics.Texture)
  name: apply(Texture input)
  href: api/postprocess.PostProcessPipeline.html#postprocess_PostProcessPipeline_apply_graphics_Texture_
  fullName: postprocess.PostProcessPipeline.apply(Texture input)
  nameWithType: PostProcessPipeline.apply(Texture input)
- uid: postprocess.PostProcessPipeline.apply*
  name: apply
  href: api/postprocess.PostProcessPipeline.html#postprocess_PostProcessPipeline_apply_
  isSpec: "True"
  fullName: postprocess.PostProcessPipeline.apply
  nameWithType: PostProcessPipeline.apply
  package: postprocess
- uid: postprocess.PostProcessPipeline.init()
  name: init()
  href: api/postprocess.PostProcessPipeline.html#postprocess_PostProcessPipeline_init__
  fullName: postprocess.PostProcessPipeline.init()
  nameWithType: PostProcessPipeline.init()
- uid: postprocess.PostProcessPipeline.init*
  name: init
  href: api/postprocess.PostProcessPipeline.html#postprocess_PostProcessPipeline_init_
  isSpec: "True"
  fullName: postprocess.PostProcessPipeline.init
  nameWithType: PostProcessPipeline.init
  package: postprocess
- uid: postprocess.PostProcessPipeline.PostProcessPipeline()
  name: PostProcessPipeline()
  href: api/postprocess.PostProcessPipeline.html#postprocess_PostProcessPipeline_PostProcessPipeline__
  fullName: postprocess.PostProcessPipeline.PostProcessPipeline()
  nameWithType: PostProcessPipeline.PostProcessPipeline()
- uid: postprocess.PostProcessPipeline.PostProcessPipeline*
  name: PostProcessPipeline
  href: api/postprocess.PostProcessPipeline.html#postprocess_PostProcessPipeline_PostProcessPipeline_
  isSpec: "True"
  fullName: postprocess.PostProcessPipeline.PostProcessPipeline
  nameWithType: PostProcessPipeline.PostProcessPipeline
  package: postprocess
- uid: postprocess.PostProcessQuad
  name: PostProcessQuad
  href: api/postprocess.PostProcessQuad.html
  fullName: postprocess.PostProcessQuad
  nameWithType: PostProcessQuad
- uid: postprocess.PostProcessQuad._bindQuad()
  name: _bindQuad()
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad__bindQuad__
  fullName: postprocess.PostProcessQuad._bindQuad()
  nameWithType: PostProcessQuad._bindQuad()
- uid: postprocess.PostProcessQuad._bindQuad*
  name: _bindQuad
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad__bindQuad_
  isSpec: "True"
  fullName: postprocess.PostProcessQuad._bindQuad
  nameWithType: PostProcessQuad._bindQuad
  package: postprocess
- uid: postprocess.PostProcessQuad._unbindQuad()
  name: _unbindQuad()
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad__unbindQuad__
  fullName: postprocess.PostProcessQuad._unbindQuad()
  nameWithType: PostProcessQuad._unbindQuad()
- uid: postprocess.PostProcessQuad._unbindQuad*
  name: _unbindQuad
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad__unbindQuad_
  isSpec: "True"
  fullName: postprocess.PostProcessQuad._unbindQuad
  nameWithType: PostProcessQuad._unbindQuad
  package: postprocess
- uid: postprocess.PostProcessQuad.getInstance()
  name: getInstance()
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad_getInstance__
  fullName: postprocess.PostProcessQuad.getInstance()
  nameWithType: PostProcessQuad.getInstance()
- uid: postprocess.PostProcessQuad.getInstance*
  name: getInstance
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad_getInstance_
  isSpec: "True"
  fullName: postprocess.PostProcessQuad.getInstance
  nameWithType: PostProcessQuad.getInstance
  package: postprocess
- uid: postprocess.PostProcessQuad.PostProcessQuad()
  name: PostProcessQuad()
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad_PostProcessQuad__
  fullName: postprocess.PostProcessQuad.PostProcessQuad()
  nameWithType: PostProcessQuad.PostProcessQuad()
- uid: postprocess.PostProcessQuad.PostProcessQuad*
  name: PostProcessQuad
  href: api/postprocess.PostProcessQuad.html#postprocess_PostProcessQuad_PostProcessQuad_
  isSpec: "True"
  fullName: postprocess.PostProcessQuad.PostProcessQuad
  nameWithType: PostProcessQuad.PostProcessQuad
  package: postprocess
- uid: postprocess.PostProcessStep
  name: PostProcessStep
  href: api/postprocess.PostProcessStep.html
  fullName: postprocess.PostProcessStep
  nameWithType: PostProcessStep
- uid: postprocess.PostProcessStep.apply()
  name: apply()
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_apply__
  fullName: postprocess.PostProcessStep.apply()
  nameWithType: PostProcessStep.apply()
- uid: postprocess.PostProcessStep.apply*
  name: apply
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_apply_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.apply
  nameWithType: PostProcessStep.apply
  package: postprocess
- uid: postprocess.PostProcessStep.createFramebuffer()
  name: createFramebuffer()
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_createFramebuffer__
  fullName: postprocess.PostProcessStep.createFramebuffer()
  nameWithType: PostProcessStep.createFramebuffer()
- uid: postprocess.PostProcessStep.createFramebuffer*
  name: createFramebuffer
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_createFramebuffer_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.createFramebuffer
  nameWithType: PostProcessStep.createFramebuffer
  package: postprocess
- uid: postprocess.PostProcessStep.createShader()
  name: createShader()
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_createShader__
  fullName: postprocess.PostProcessStep.createShader()
  nameWithType: PostProcessStep.createShader()
- uid: postprocess.PostProcessStep.createShader*
  name: createShader
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_createShader_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.createShader
  nameWithType: PostProcessStep.createShader
  package: postprocess
- uid: postprocess.PostProcessStep.framebuffer
  name: framebuffer
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_framebuffer
  fullName: postprocess.PostProcessStep.framebuffer
  nameWithType: PostProcessStep.framebuffer
- uid: postprocess.PostProcessStep.init()
  name: init()
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_init__
  fullName: postprocess.PostProcessStep.init()
  nameWithType: PostProcessStep.init()
- uid: postprocess.PostProcessStep.init*
  name: init
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_init_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.init
  nameWithType: PostProcessStep.init
  package: postprocess
- uid: postprocess.PostProcessStep.PostProcessStep(postprocess.PostProcessStep.Target)
  name: PostProcessStep(PostProcessStep.Target target)
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_PostProcessStep_postprocess_PostProcessStep_Target_
  fullName: postprocess.PostProcessStep.PostProcessStep(PostProcessStep.Target target)
  nameWithType: PostProcessStep.PostProcessStep(PostProcessStep.Target target)
- uid: postprocess.PostProcessStep.PostProcessStep*
  name: PostProcessStep
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_PostProcessStep_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.PostProcessStep
  nameWithType: PostProcessStep.PostProcessStep
  package: postprocess
- uid: postprocess.PostProcessStep.prepare()
  name: prepare()
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_prepare__
  fullName: postprocess.PostProcessStep.prepare()
  nameWithType: PostProcessStep.prepare()
- uid: postprocess.PostProcessStep.prepare*
  name: prepare
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_prepare_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.prepare
  nameWithType: PostProcessStep.prepare
  package: postprocess
- uid: postprocess.PostProcessStep.Target
  name: PostProcessStep.Target
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target
  fullName: postprocess.PostProcessStep.Target
  nameWithType: PostProcessStep.Target
- uid: postprocess.PostProcessStep.Target.createFramebuffer
  name: createFramebuffer
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_createFramebuffer
  fullName: postprocess.PostProcessStep.Target.createFramebuffer
  nameWithType: PostProcessStep.Target.createFramebuffer
- uid: postprocess.PostProcessStep.Target.DEFAULT_FRAMEBUFFER
  name: DEFAULT_FRAMEBUFFER
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_DEFAULT_FRAMEBUFFER
  fullName: postprocess.PostProcessStep.Target.DEFAULT_FRAMEBUFFER
  nameWithType: PostProcessStep.Target.DEFAULT_FRAMEBUFFER
- uid: postprocess.PostProcessStep.Target.ONE_COLOR_HALF_SIZE_TEXTURE_FRAMEBUFFER
  name: ONE_COLOR_HALF_SIZE_TEXTURE_FRAMEBUFFER
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_ONE_COLOR_HALF_SIZE_TEXTURE_FRAMEBUFFER
  fullName: postprocess.PostProcessStep.Target.ONE_COLOR_HALF_SIZE_TEXTURE_FRAMEBUFFER
  nameWithType: PostProcessStep.Target.ONE_COLOR_HALF_SIZE_TEXTURE_FRAMEBUFFER
- uid: postprocess.PostProcessStep.Target.ONE_COLOR_TEXTURE_FRAMEBUFFER
  name: ONE_COLOR_TEXTURE_FRAMEBUFFER
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_ONE_COLOR_TEXTURE_FRAMEBUFFER
  fullName: postprocess.PostProcessStep.Target.ONE_COLOR_TEXTURE_FRAMEBUFFER
  nameWithType: PostProcessStep.Target.ONE_COLOR_TEXTURE_FRAMEBUFFER
- uid: postprocess.PostProcessStep.Target.Target(java.util.function.Supplier<graphics.Framebuffer>)
  name: Target(Supplier<Framebuffer> createFramebuffer)
  href: api/postprocess.PostProcessStep.Target.html
  fullName: postprocess.PostProcessStep.Target.Target(Supplier<Framebuffer> createFramebuffer)
  nameWithType: PostProcessStep.Target.Target(Supplier<Framebuffer> createFramebuffer)
- uid: postprocess.PostProcessStep.Target.Target*
  name: Target
  href: api/postprocess.PostProcessStep.Target.html
  isSpec: "True"
  fullName: postprocess.PostProcessStep.Target.Target
  nameWithType: PostProcessStep.Target.Target
  package: postprocess
- uid: postprocess.PostProcessStep.Target.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_valueOf_java_lang_String_
  fullName: postprocess.PostProcessStep.Target.valueOf(String name)
  nameWithType: PostProcessStep.Target.valueOf(String name)
- uid: postprocess.PostProcessStep.Target.valueOf*
  name: valueOf
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_valueOf_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.Target.valueOf
  nameWithType: PostProcessStep.Target.valueOf
  package: postprocess
- uid: postprocess.PostProcessStep.Target.values()
  name: values()
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_values__
  fullName: postprocess.PostProcessStep.Target.values()
  nameWithType: PostProcessStep.Target.values()
- uid: postprocess.PostProcessStep.Target.values*
  name: values
  href: api/postprocess.PostProcessStep.Target.html#postprocess_PostProcessStep_Target_values_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.Target.values
  nameWithType: PostProcessStep.Target.values
  package: postprocess
- uid: postprocess.PostProcessStep.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_uploadUniforms_graphics_Shader_
  fullName: postprocess.PostProcessStep.uploadUniforms(Shader shader)
  nameWithType: PostProcessStep.uploadUniforms(Shader shader)
- uid: postprocess.PostProcessStep.uploadUniforms*
  name: uploadUniforms
  href: api/postprocess.PostProcessStep.html#postprocess_PostProcessStep_uploadUniforms_
  isSpec: "True"
  fullName: postprocess.PostProcessStep.uploadUniforms
  nameWithType: PostProcessStep.uploadUniforms
  package: postprocess
- uid: postprocess.VerticalBlur
  name: VerticalBlur
  href: api/postprocess.VerticalBlur.html
  fullName: postprocess.VerticalBlur
  nameWithType: VerticalBlur
- uid: postprocess.VerticalBlur.createShader()
  name: createShader()
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_createShader__
  fullName: postprocess.VerticalBlur.createShader()
  nameWithType: VerticalBlur.createShader()
- uid: postprocess.VerticalBlur.createShader*
  name: createShader
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_createShader_
  isSpec: "True"
  fullName: postprocess.VerticalBlur.createShader
  nameWithType: VerticalBlur.createShader
  package: postprocess
- uid: postprocess.VerticalBlur.prepare()
  name: prepare()
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_prepare__
  fullName: postprocess.VerticalBlur.prepare()
  nameWithType: VerticalBlur.prepare()
- uid: postprocess.VerticalBlur.prepare*
  name: prepare
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_prepare_
  isSpec: "True"
  fullName: postprocess.VerticalBlur.prepare
  nameWithType: VerticalBlur.prepare
  package: postprocess
- uid: postprocess.VerticalBlur.setTexture(graphics.Texture)
  name: setTexture(Texture texture)
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_setTexture_graphics_Texture_
  fullName: postprocess.VerticalBlur.setTexture(Texture texture)
  nameWithType: VerticalBlur.setTexture(Texture texture)
- uid: postprocess.VerticalBlur.setTexture*
  name: setTexture
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_setTexture_
  isSpec: "True"
  fullName: postprocess.VerticalBlur.setTexture
  nameWithType: VerticalBlur.setTexture
  package: postprocess
- uid: postprocess.VerticalBlur.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_uploadUniforms_graphics_Shader_
  fullName: postprocess.VerticalBlur.uploadUniforms(Shader shader)
  nameWithType: VerticalBlur.uploadUniforms(Shader shader)
- uid: postprocess.VerticalBlur.uploadUniforms*
  name: uploadUniforms
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_uploadUniforms_
  isSpec: "True"
  fullName: postprocess.VerticalBlur.uploadUniforms
  nameWithType: VerticalBlur.uploadUniforms
  package: postprocess
- uid: postprocess.VerticalBlur.VerticalBlur(postprocess.PostProcessStep.Target)
  name: VerticalBlur(PostProcessStep.Target target)
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_VerticalBlur_postprocess_PostProcessStep_Target_
  fullName: postprocess.VerticalBlur.VerticalBlur(PostProcessStep.Target target)
  nameWithType: VerticalBlur.VerticalBlur(PostProcessStep.Target target)
- uid: postprocess.VerticalBlur.VerticalBlur*
  name: VerticalBlur
  href: api/postprocess.VerticalBlur.html#postprocess_VerticalBlur_VerticalBlur_
  isSpec: "True"
  fullName: postprocess.VerticalBlur.VerticalBlur
  nameWithType: VerticalBlur.VerticalBlur
  package: postprocess
- uid: postprocess.WeightedCombine
  name: WeightedCombine
  href: api/postprocess.WeightedCombine.html
  fullName: postprocess.WeightedCombine
  nameWithType: WeightedCombine
- uid: postprocess.WeightedCombine.createShader()
  name: createShader()
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_createShader__
  fullName: postprocess.WeightedCombine.createShader()
  nameWithType: WeightedCombine.createShader()
- uid: postprocess.WeightedCombine.createShader*
  name: createShader
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_createShader_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.createShader
  nameWithType: WeightedCombine.createShader
  package: postprocess
- uid: postprocess.WeightedCombine.prepare()
  name: prepare()
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_prepare__
  fullName: postprocess.WeightedCombine.prepare()
  nameWithType: WeightedCombine.prepare()
- uid: postprocess.WeightedCombine.prepare*
  name: prepare
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_prepare_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.prepare
  nameWithType: WeightedCombine.prepare
  package: postprocess
- uid: postprocess.WeightedCombine.setTextureA(graphics.Texture)
  name: setTextureA(Texture texture)
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setTextureA_graphics_Texture_
  fullName: postprocess.WeightedCombine.setTextureA(Texture texture)
  nameWithType: WeightedCombine.setTextureA(Texture texture)
- uid: postprocess.WeightedCombine.setTextureA*
  name: setTextureA
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setTextureA_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.setTextureA
  nameWithType: WeightedCombine.setTextureA
  package: postprocess
- uid: postprocess.WeightedCombine.setTextureB(graphics.Texture)
  name: setTextureB(Texture texture)
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setTextureB_graphics_Texture_
  fullName: postprocess.WeightedCombine.setTextureB(Texture texture)
  nameWithType: WeightedCombine.setTextureB(Texture texture)
- uid: postprocess.WeightedCombine.setTextureB*
  name: setTextureB
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setTextureB_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.setTextureB
  nameWithType: WeightedCombine.setTextureB
  package: postprocess
- uid: postprocess.WeightedCombine.setWeightA(float)
  name: setWeightA(float weightA)
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setWeightA_float_
  fullName: postprocess.WeightedCombine.setWeightA(float weightA)
  nameWithType: WeightedCombine.setWeightA(float weightA)
- uid: postprocess.WeightedCombine.setWeightA*
  name: setWeightA
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setWeightA_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.setWeightA
  nameWithType: WeightedCombine.setWeightA
  package: postprocess
- uid: postprocess.WeightedCombine.setWeightB(float)
  name: setWeightB(float weightB)
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setWeightB_float_
  fullName: postprocess.WeightedCombine.setWeightB(float weightB)
  nameWithType: WeightedCombine.setWeightB(float weightB)
- uid: postprocess.WeightedCombine.setWeightB*
  name: setWeightB
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_setWeightB_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.setWeightB
  nameWithType: WeightedCombine.setWeightB
  package: postprocess
- uid: postprocess.WeightedCombine.uploadUniforms(graphics.Shader)
  name: uploadUniforms(Shader shader)
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_uploadUniforms_graphics_Shader_
  fullName: postprocess.WeightedCombine.uploadUniforms(Shader shader)
  nameWithType: WeightedCombine.uploadUniforms(Shader shader)
- uid: postprocess.WeightedCombine.uploadUniforms*
  name: uploadUniforms
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_uploadUniforms_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.uploadUniforms
  nameWithType: WeightedCombine.uploadUniforms
  package: postprocess
- uid: postprocess.WeightedCombine.WeightedCombine(postprocess.PostProcessStep.Target)
  name: WeightedCombine(PostProcessStep.Target target)
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_WeightedCombine_postprocess_PostProcessStep_Target_
  fullName: postprocess.WeightedCombine.WeightedCombine(PostProcessStep.Target target)
  nameWithType: WeightedCombine.WeightedCombine(PostProcessStep.Target target)
- uid: postprocess.WeightedCombine.WeightedCombine*
  name: WeightedCombine
  href: api/postprocess.WeightedCombine.html#postprocess_WeightedCombine_WeightedCombine_
  isSpec: "True"
  fullName: postprocess.WeightedCombine.WeightedCombine
  nameWithType: WeightedCombine.WeightedCombine
  package: postprocess
- uid: scene
  name: scene
  href: api/scene.html
  fullName: scene
  nameWithType: scene
- uid: scene.Scene
  name: Scene
  href: api/scene.Scene.html
  fullName: scene.Scene
  nameWithType: Scene
- uid: scene.Scene.activate()
  name: activate()
  href: api/scene.Scene.html#scene_Scene_activate__
  fullName: scene.Scene.activate()
  nameWithType: Scene.activate()
- uid: scene.Scene.activate*
  name: activate
  href: api/scene.Scene.html#scene_Scene_activate_
  isSpec: "True"
  fullName: scene.Scene.activate
  nameWithType: Scene.activate
  package: scene
- uid: scene.Scene.addGameObjectToScene(ecs.GameObject)
  name: addGameObjectToScene(GameObject gameObject)
  href: api/scene.Scene.html#scene_Scene_addGameObjectToScene_ecs_GameObject_
  fullName: scene.Scene.addGameObjectToScene(GameObject gameObject)
  nameWithType: Scene.addGameObjectToScene(GameObject gameObject)
- uid: scene.Scene.addGameObjectToScene*
  name: addGameObjectToScene
  href: api/scene.Scene.html#scene_Scene_addGameObjectToScene_
  isSpec: "True"
  fullName: scene.Scene.addGameObjectToScene
  nameWithType: Scene.addGameObjectToScene
  package: scene
- uid: scene.Scene.addToRenderers(ecs.GameObject)
  name: addToRenderers(GameObject gameObject)
  href: api/scene.Scene.html#scene_Scene_addToRenderers_ecs_GameObject_
  fullName: scene.Scene.addToRenderers(GameObject gameObject)
  nameWithType: Scene.addToRenderers(GameObject gameObject)
- uid: scene.Scene.addToRenderers*
  name: addToRenderers
  href: api/scene.Scene.html#scene_Scene_addToRenderers_
  isSpec: "True"
  fullName: scene.Scene.addToRenderers
  nameWithType: Scene.addToRenderers
  package: scene
- uid: scene.Scene.addUiObject(ecs.Text)
  name: addUiObject(Text t)
  href: api/scene.Scene.html#scene_Scene_addUiObject_ecs_Text_
  fullName: scene.Scene.addUiObject(Text t)
  nameWithType: Scene.addUiObject(Text t)
- uid: scene.Scene.addUiObject*
  name: addUiObject
  href: api/scene.Scene.html#scene_Scene_addUiObject_
  isSpec: "True"
  fullName: scene.Scene.addUiObject
  nameWithType: Scene.addUiObject
  package: scene
- uid: scene.Scene.awake()
  name: awake()
  href: api/scene.Scene.html#scene_Scene_awake__
  fullName: scene.Scene.awake()
  nameWithType: Scene.awake()
- uid: scene.Scene.awake*
  name: awake
  href: api/scene.Scene.html#scene_Scene_awake_
  isSpec: "True"
  fullName: scene.Scene.awake
  nameWithType: Scene.awake
  package: scene
- uid: scene.Scene.camera
  name: camera
  href: api/scene.Scene.html#scene_Scene_camera
  fullName: scene.Scene.camera
  nameWithType: Scene.camera
- uid: scene.Scene.camera()
  name: camera()
  href: api/scene.Scene.html#scene_Scene_camera__
  fullName: scene.Scene.camera()
  nameWithType: Scene.camera()
- uid: scene.Scene.camera*
  name: camera
  href: api/scene.Scene.html#scene_Scene_camera_
  isSpec: "True"
  fullName: scene.Scene.camera
  nameWithType: Scene.camera
  package: scene
- uid: scene.Scene.clean()
  name: clean()
  href: api/scene.Scene.html#scene_Scene_clean__
  fullName: scene.Scene.clean()
  nameWithType: Scene.clean()
- uid: scene.Scene.clean*
  name: clean
  href: api/scene.Scene.html#scene_Scene_clean_
  isSpec: "True"
  fullName: scene.Scene.clean
  nameWithType: Scene.clean
  package: scene
- uid: scene.Scene.deactivate()
  name: deactivate()
  href: api/scene.Scene.html#scene_Scene_deactivate__
  fullName: scene.Scene.deactivate()
  nameWithType: Scene.deactivate()
- uid: scene.Scene.deactivate*
  name: deactivate
  href: api/scene.Scene.html#scene_Scene_deactivate_
  isSpec: "True"
  fullName: scene.Scene.deactivate
  nameWithType: Scene.deactivate
  package: scene
- uid: scene.Scene.debugRender()
  name: debugRender()
  href: api/scene.Scene.html#scene_Scene_debugRender__
  fullName: scene.Scene.debugRender()
  nameWithType: Scene.debugRender()
- uid: scene.Scene.debugRender*
  name: debugRender
  href: api/scene.Scene.html#scene_Scene_debugRender_
  isSpec: "True"
  fullName: scene.Scene.debugRender
  nameWithType: Scene.debugRender
  package: scene
- uid: scene.Scene.debugRenderer
  name: debugRenderer
  href: api/scene.Scene.html#scene_Scene_debugRenderer
  fullName: scene.Scene.debugRenderer
  nameWithType: Scene.debugRenderer
- uid: scene.Scene.forwardToScreen
  name: forwardToScreen
  href: api/scene.Scene.html#scene_Scene_forwardToScreen
  fullName: scene.Scene.forwardToScreen
  nameWithType: Scene.forwardToScreen
- uid: scene.Scene.getColliders()
  name: getColliders()
  href: api/scene.Scene.html#scene_Scene_getColliders__
  fullName: scene.Scene.getColliders()
  nameWithType: Scene.getColliders()
- uid: scene.Scene.getColliders*
  name: getColliders
  href: api/scene.Scene.html#scene_Scene_getColliders_
  isSpec: "True"
  fullName: scene.Scene.getColliders
  nameWithType: Scene.getColliders
  package: scene
- uid: scene.Scene.getGameObjects()
  name: getGameObjects()
  href: api/scene.Scene.html#scene_Scene_getGameObjects__
  fullName: scene.Scene.getGameObjects()
  nameWithType: Scene.getGameObjects()
- uid: scene.Scene.getGameObjects*
  name: getGameObjects
  href: api/scene.Scene.html#scene_Scene_getGameObjects_
  isSpec: "True"
  fullName: scene.Scene.getGameObjects
  nameWithType: Scene.getGameObjects
  package: scene
- uid: scene.Scene.initRenderers()
  name: initRenderers()
  href: api/scene.Scene.html#scene_Scene_initRenderers__
  fullName: scene.Scene.initRenderers()
  nameWithType: Scene.initRenderers()
- uid: scene.Scene.initRenderers*
  name: initRenderers
  href: api/scene.Scene.html#scene_Scene_initRenderers_
  isSpec: "True"
  fullName: scene.Scene.initRenderers
  nameWithType: Scene.initRenderers
  package: scene
- uid: scene.Scene.isActive()
  name: isActive()
  href: api/scene.Scene.html#scene_Scene_isActive__
  fullName: scene.Scene.isActive()
  nameWithType: Scene.isActive()
- uid: scene.Scene.isActive*
  name: isActive
  href: api/scene.Scene.html#scene_Scene_isActive_
  isSpec: "True"
  fullName: scene.Scene.isActive
  nameWithType: Scene.isActive
  package: scene
- uid: scene.Scene.lightmapRenderer
  name: lightmapRenderer
  href: api/scene.Scene.html#scene_Scene_lightmapRenderer
  fullName: scene.Scene.lightmapRenderer
  nameWithType: Scene.lightmapRenderer
- uid: scene.Scene.postProcess(graphics.Texture)
  name: postProcess(Texture texture)
  href: api/scene.Scene.html#scene_Scene_postProcess_graphics_Texture_
  fullName: scene.Scene.postProcess(Texture texture)
  nameWithType: Scene.postProcess(Texture texture)
- uid: scene.Scene.postProcess*
  name: postProcess
  href: api/scene.Scene.html#scene_Scene_postProcess_
  isSpec: "True"
  fullName: scene.Scene.postProcess
  nameWithType: Scene.postProcess
  package: scene
- uid: scene.Scene.registerCollider(ecs.GameObject)
  name: registerCollider(GameObject gameObject)
  href: api/scene.Scene.html#scene_Scene_registerCollider_ecs_GameObject_
  fullName: scene.Scene.registerCollider(GameObject gameObject)
  nameWithType: Scene.registerCollider(GameObject gameObject)
- uid: scene.Scene.registerCollider*
  name: registerCollider
  href: api/scene.Scene.html#scene_Scene_registerCollider_
  isSpec: "True"
  fullName: scene.Scene.registerCollider
  nameWithType: Scene.registerCollider
  package: scene
- uid: scene.Scene.registerRenderer(graphics.renderer.Renderer)
  name: registerRenderer(Renderer renderer)
  href: api/scene.Scene.html#scene_Scene_registerRenderer_graphics_renderer_Renderer_
  fullName: scene.Scene.registerRenderer(Renderer renderer)
  nameWithType: Scene.registerRenderer(Renderer renderer)
- uid: scene.Scene.registerRenderer*
  name: registerRenderer
  href: api/scene.Scene.html#scene_Scene_registerRenderer_
  isSpec: "True"
  fullName: scene.Scene.registerRenderer
  nameWithType: Scene.registerRenderer
  package: scene
- uid: scene.Scene.removeGameObjectFromScene(ecs.GameObject)
  name: removeGameObjectFromScene(GameObject gameObject)
  href: api/scene.Scene.html#scene_Scene_removeGameObjectFromScene_ecs_GameObject_
  fullName: scene.Scene.removeGameObjectFromScene(GameObject gameObject)
  nameWithType: Scene.removeGameObjectFromScene(GameObject gameObject)
- uid: scene.Scene.removeGameObjectFromScene*
  name: removeGameObjectFromScene
  href: api/scene.Scene.html#scene_Scene_removeGameObjectFromScene_
  isSpec: "True"
  fullName: scene.Scene.removeGameObjectFromScene
  nameWithType: Scene.removeGameObjectFromScene
  package: scene
- uid: scene.Scene.render()
  name: render()
  href: api/scene.Scene.html#scene_Scene_render__
  fullName: scene.Scene.render()
  nameWithType: Scene.render()
- uid: scene.Scene.render*
  name: render
  href: api/scene.Scene.html#scene_Scene_render_
  isSpec: "True"
  fullName: scene.Scene.render
  nameWithType: Scene.render
  package: scene
- uid: scene.Scene.renderer
  name: renderer
  href: api/scene.Scene.html#scene_Scene_renderer
  fullName: scene.Scene.renderer
  nameWithType: Scene.renderer
- uid: scene.Scene.Scene()
  name: Scene()
  href: api/scene.Scene.html#scene_Scene_Scene__
  fullName: scene.Scene.Scene()
  nameWithType: Scene.Scene()
- uid: scene.Scene.Scene*
  name: Scene
  href: api/scene.Scene.html#scene_Scene_Scene_
  isSpec: "True"
  fullName: scene.Scene.Scene
  nameWithType: Scene.Scene
  package: scene
- uid: scene.Scene.sceneId()
  name: sceneId()
  href: api/scene.Scene.html#scene_Scene_sceneId__
  fullName: scene.Scene.sceneId()
  nameWithType: Scene.sceneId()
- uid: scene.Scene.sceneId*
  name: sceneId
  href: api/scene.Scene.html#scene_Scene_sceneId_
  isSpec: "True"
  fullName: scene.Scene.sceneId
  nameWithType: Scene.sceneId
  package: scene
- uid: scene.Scene.startGameObjects()
  name: startGameObjects()
  href: api/scene.Scene.html#scene_Scene_startGameObjects__
  fullName: scene.Scene.startGameObjects()
  nameWithType: Scene.startGameObjects()
- uid: scene.Scene.startGameObjects*
  name: startGameObjects
  href: api/scene.Scene.html#scene_Scene_startGameObjects_
  isSpec: "True"
  fullName: scene.Scene.startGameObjects
  nameWithType: Scene.startGameObjects
  package: scene
- uid: scene.Scene.startUi()
  name: startUi()
  href: api/scene.Scene.html#scene_Scene_startUi__
  fullName: scene.Scene.startUi()
  nameWithType: Scene.startUi()
- uid: scene.Scene.startUi*
  name: startUi
  href: api/scene.Scene.html#scene_Scene_startUi_
  isSpec: "True"
  fullName: scene.Scene.startUi
  nameWithType: Scene.startUi
  package: scene
- uid: scene.Scene.textRender()
  name: textRender()
  href: api/scene.Scene.html#scene_Scene_textRender__
  fullName: scene.Scene.textRender()
  nameWithType: Scene.textRender()
- uid: scene.Scene.textRender*
  name: textRender
  href: api/scene.Scene.html#scene_Scene_textRender_
  isSpec: "True"
  fullName: scene.Scene.textRender
  nameWithType: Scene.textRender
  package: scene
- uid: scene.Scene.textRenderer
  name: textRenderer
  href: api/scene.Scene.html#scene_Scene_textRenderer
  fullName: scene.Scene.textRenderer
  nameWithType: Scene.textRenderer
- uid: scene.Scene.unregisterCollider(ecs.GameObject)
  name: unregisterCollider(GameObject gameObject)
  href: api/scene.Scene.html#scene_Scene_unregisterCollider_ecs_GameObject_
  fullName: scene.Scene.unregisterCollider(GameObject gameObject)
  nameWithType: Scene.unregisterCollider(GameObject gameObject)
- uid: scene.Scene.unregisterCollider*
  name: unregisterCollider
  href: api/scene.Scene.html#scene_Scene_unregisterCollider_
  isSpec: "True"
  fullName: scene.Scene.unregisterCollider
  nameWithType: Scene.unregisterCollider
  package: scene
- uid: scene.Scene.update()
  name: update()
  href: api/scene.Scene.html#scene_Scene_update__
  fullName: scene.Scene.update()
  nameWithType: Scene.update()
- uid: scene.Scene.update*
  name: update
  href: api/scene.Scene.html#scene_Scene_update_
  isSpec: "True"
  fullName: scene.Scene.update
  nameWithType: Scene.update
  package: scene
- uid: scene.Scene.updateGameObjects()
  name: updateGameObjects()
  href: api/scene.Scene.html#scene_Scene_updateGameObjects__
  fullName: scene.Scene.updateGameObjects()
  nameWithType: Scene.updateGameObjects()
- uid: scene.Scene.updateGameObjects*
  name: updateGameObjects
  href: api/scene.Scene.html#scene_Scene_updateGameObjects_
  isSpec: "True"
  fullName: scene.Scene.updateGameObjects
  nameWithType: Scene.updateGameObjects
  package: scene
- uid: scene.Scene.updateUI()
  name: updateUI()
  href: api/scene.Scene.html#scene_Scene_updateUI__
  fullName: scene.Scene.updateUI()
  nameWithType: Scene.updateUI()
- uid: scene.Scene.updateUI*
  name: updateUI
  href: api/scene.Scene.html#scene_Scene_updateUI_
  isSpec: "True"
  fullName: scene.Scene.updateUI
  nameWithType: Scene.updateUI
  package: scene
- uid: scene.SceneManager
  name: SceneManager
  href: api/scene.SceneManager.html
  fullName: scene.SceneManager
  nameWithType: SceneManager
- uid: scene.SceneManager.addScene(scene.Scene)
  name: addScene(Scene scene)
  href: api/scene.SceneManager.html#scene_SceneManager_addScene_scene_Scene_
  fullName: scene.SceneManager.addScene(Scene scene)
  nameWithType: SceneManager.addScene(Scene scene)
- uid: scene.SceneManager.addScene*
  name: addScene
  href: api/scene.SceneManager.html#scene_SceneManager_addScene_
  isSpec: "True"
  fullName: scene.SceneManager.addScene
  nameWithType: SceneManager.addScene
  package: scene
- uid: scene.SceneManager.currentScene()
  name: currentScene()
  href: api/scene.SceneManager.html#scene_SceneManager_currentScene__
  fullName: scene.SceneManager.currentScene()
  nameWithType: SceneManager.currentScene()
- uid: scene.SceneManager.currentScene*
  name: currentScene
  href: api/scene.SceneManager.html#scene_SceneManager_currentScene_
  isSpec: "True"
  fullName: scene.SceneManager.currentScene
  nameWithType: SceneManager.currentScene
  package: scene
- uid: scene.SceneManager.debugRender()
  name: debugRender()
  href: api/scene.SceneManager.html#scene_SceneManager_debugRender__
  fullName: scene.SceneManager.debugRender()
  nameWithType: SceneManager.debugRender()
- uid: scene.SceneManager.debugRender*
  name: debugRender
  href: api/scene.SceneManager.html#scene_SceneManager_debugRender_
  isSpec: "True"
  fullName: scene.SceneManager.debugRender
  nameWithType: SceneManager.debugRender
  package: scene
- uid: scene.SceneManager.enable()
  name: enable()
  href: api/scene.SceneManager.html#scene_SceneManager_enable__
  fullName: scene.SceneManager.enable()
  nameWithType: SceneManager.enable()
- uid: scene.SceneManager.enable*
  name: enable
  href: api/scene.SceneManager.html#scene_SceneManager_enable_
  isSpec: "True"
  fullName: scene.SceneManager.enable
  nameWithType: SceneManager.enable
  package: scene
- uid: scene.SceneManager.getMinSceneLight()
  name: getMinSceneLight()
  href: api/scene.SceneManager.html#scene_SceneManager_getMinSceneLight__
  fullName: scene.SceneManager.getMinSceneLight()
  nameWithType: SceneManager.getMinSceneLight()
- uid: scene.SceneManager.getMinSceneLight*
  name: getMinSceneLight
  href: api/scene.SceneManager.html#scene_SceneManager_getMinSceneLight_
  isSpec: "True"
  fullName: scene.SceneManager.getMinSceneLight
  nameWithType: SceneManager.getMinSceneLight
  package: scene
- uid: scene.SceneManager.postProcess(graphics.Texture)
  name: postProcess(Texture texture)
  href: api/scene.SceneManager.html#scene_SceneManager_postProcess_graphics_Texture_
  fullName: scene.SceneManager.postProcess(Texture texture)
  nameWithType: SceneManager.postProcess(Texture texture)
- uid: scene.SceneManager.postProcess*
  name: postProcess
  href: api/scene.SceneManager.html#scene_SceneManager_postProcess_
  isSpec: "True"
  fullName: scene.SceneManager.postProcess
  nameWithType: SceneManager.postProcess
  package: scene
- uid: scene.SceneManager.render()
  name: render()
  href: api/scene.SceneManager.html#scene_SceneManager_render__
  fullName: scene.SceneManager.render()
  nameWithType: SceneManager.render()
- uid: scene.SceneManager.render*
  name: render
  href: api/scene.SceneManager.html#scene_SceneManager_render_
  isSpec: "True"
  fullName: scene.SceneManager.render
  nameWithType: SceneManager.render
  package: scene
- uid: scene.SceneManager.sceneIds()
  name: sceneIds()
  href: api/scene.SceneManager.html#scene_SceneManager_sceneIds__
  fullName: scene.SceneManager.sceneIds()
  nameWithType: SceneManager.sceneIds()
- uid: scene.SceneManager.sceneIds*
  name: sceneIds
  href: api/scene.SceneManager.html#scene_SceneManager_sceneIds_
  isSpec: "True"
  fullName: scene.SceneManager.sceneIds
  nameWithType: SceneManager.sceneIds
  package: scene
- uid: scene.SceneManager.SceneManager()
  name: SceneManager()
  href: api/scene.SceneManager.html#scene_SceneManager_SceneManager__
  fullName: scene.SceneManager.SceneManager()
  nameWithType: SceneManager.SceneManager()
- uid: scene.SceneManager.SceneManager*
  name: SceneManager
  href: api/scene.SceneManager.html#scene_SceneManager_SceneManager_
  isSpec: "True"
  fullName: scene.SceneManager.SceneManager
  nameWithType: SceneManager.SceneManager
  package: scene
- uid: scene.SceneManager.setMinSceneLight(float)
  name: setMinSceneLight(float minSceneLight)
  href: api/scene.SceneManager.html#scene_SceneManager_setMinSceneLight_float_
  fullName: scene.SceneManager.setMinSceneLight(float minSceneLight)
  nameWithType: SceneManager.setMinSceneLight(float minSceneLight)
- uid: scene.SceneManager.setMinSceneLight*
  name: setMinSceneLight
  href: api/scene.SceneManager.html#scene_SceneManager_setMinSceneLight_
  isSpec: "True"
  fullName: scene.SceneManager.setMinSceneLight
  nameWithType: SceneManager.setMinSceneLight
  package: scene
- uid: scene.SceneManager.switchScene(int)
  name: switchScene(int id)
  href: api/scene.SceneManager.html#scene_SceneManager_switchScene_int_
  fullName: scene.SceneManager.switchScene(int id)
  nameWithType: SceneManager.switchScene(int id)
- uid: scene.SceneManager.switchScene(scene.Scene,boolean)
  name: switchScene(Scene scene, boolean addIfUnknown)
  href: api/scene.SceneManager.html#scene_SceneManager_switchScene_scene_Scene_boolean_
  fullName: scene.SceneManager.switchScene(Scene scene, boolean addIfUnknown)
  nameWithType: SceneManager.switchScene(Scene scene, boolean addIfUnknown)
- uid: scene.SceneManager.switchScene*
  name: switchScene
  href: api/scene.SceneManager.html#scene_SceneManager_switchScene_
  isSpec: "True"
  fullName: scene.SceneManager.switchScene
  nameWithType: SceneManager.switchScene
  package: scene
- uid: scene.SceneManager.update()
  name: update()
  href: api/scene.SceneManager.html#scene_SceneManager_update__
  fullName: scene.SceneManager.update()
  nameWithType: SceneManager.update()
- uid: scene.SceneManager.update*
  name: update
  href: api/scene.SceneManager.html#scene_SceneManager_update_
  isSpec: "True"
  fullName: scene.SceneManager.update
  nameWithType: SceneManager.update
  package: scene
- uid: scene.SceneManager.updateGameObjects()
  name: updateGameObjects()
  href: api/scene.SceneManager.html#scene_SceneManager_updateGameObjects__
  fullName: scene.SceneManager.updateGameObjects()
  nameWithType: SceneManager.updateGameObjects()
- uid: scene.SceneManager.updateGameObjects*
  name: updateGameObjects
  href: api/scene.SceneManager.html#scene_SceneManager_updateGameObjects_
  isSpec: "True"
  fullName: scene.SceneManager.updateGameObjects
  nameWithType: SceneManager.updateGameObjects
  package: scene
- uid: scene.SceneManager.updateUI()
  name: updateUI()
  href: api/scene.SceneManager.html#scene_SceneManager_updateUI__
  fullName: scene.SceneManager.updateUI()
  nameWithType: SceneManager.updateUI()
- uid: scene.SceneManager.updateUI*
  name: updateUI
  href: api/scene.SceneManager.html#scene_SceneManager_updateUI_
  isSpec: "True"
  fullName: scene.SceneManager.updateUI
  nameWithType: SceneManager.updateUI
  package: scene
- uid: scenes
  name: scenes
  href: api/scenes.html
  fullName: scenes
  nameWithType: scenes
- uid: scenes.DemoPlatformer
  name: DemoPlatformer
  href: api/scenes.DemoPlatformer.html
  fullName: scenes.DemoPlatformer
  nameWithType: DemoPlatformer
- uid: scenes.DemoPlatformer.awake()
  name: awake()
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_awake__
  fullName: scenes.DemoPlatformer.awake()
  nameWithType: DemoPlatformer.awake()
- uid: scenes.DemoPlatformer.awake*
  name: awake
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_awake_
  isSpec: "True"
  fullName: scenes.DemoPlatformer.awake
  nameWithType: DemoPlatformer.awake
  package: scenes
- uid: scenes.DemoPlatformer.DemoPlatformer()
  name: DemoPlatformer()
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_DemoPlatformer__
  fullName: scenes.DemoPlatformer.DemoPlatformer()
  nameWithType: DemoPlatformer.DemoPlatformer()
- uid: scenes.DemoPlatformer.DemoPlatformer*
  name: DemoPlatformer
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_DemoPlatformer_
  isSpec: "True"
  fullName: scenes.DemoPlatformer.DemoPlatformer
  nameWithType: DemoPlatformer.DemoPlatformer
  package: scenes
- uid: scenes.DemoPlatformer.main(java.lang.String[])
  name: main(String[] args)
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_main_java_lang_String___
  fullName: scenes.DemoPlatformer.main(String[] args)
  nameWithType: DemoPlatformer.main(String[] args)
- uid: scenes.DemoPlatformer.main*
  name: main
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_main_
  isSpec: "True"
  fullName: scenes.DemoPlatformer.main
  nameWithType: DemoPlatformer.main
  package: scenes
- uid: scenes.DemoPlatformer.postProcess(graphics.Texture)
  name: postProcess(Texture texture)
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_postProcess_graphics_Texture_
  fullName: scenes.DemoPlatformer.postProcess(Texture texture)
  nameWithType: DemoPlatformer.postProcess(Texture texture)
- uid: scenes.DemoPlatformer.postProcess*
  name: postProcess
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_postProcess_
  isSpec: "True"
  fullName: scenes.DemoPlatformer.postProcess
  nameWithType: DemoPlatformer.postProcess
  package: scenes
- uid: scenes.DemoPlatformer.update()
  name: update()
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_update__
  fullName: scenes.DemoPlatformer.update()
  nameWithType: DemoPlatformer.update()
- uid: scenes.DemoPlatformer.update*
  name: update
  href: api/scenes.DemoPlatformer.html#scenes_DemoPlatformer_update_
  isSpec: "True"
  fullName: scenes.DemoPlatformer.update
  nameWithType: DemoPlatformer.update
  package: scenes
- uid: scenes.DemoTopDown
  name: DemoTopDown
  href: api/scenes.DemoTopDown.html
  fullName: scenes.DemoTopDown
  nameWithType: DemoTopDown
- uid: scenes.DemoTopDown.awake()
  name: awake()
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_awake__
  fullName: scenes.DemoTopDown.awake()
  nameWithType: DemoTopDown.awake()
- uid: scenes.DemoTopDown.awake*
  name: awake
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_awake_
  isSpec: "True"
  fullName: scenes.DemoTopDown.awake
  nameWithType: DemoTopDown.awake
  package: scenes
- uid: scenes.DemoTopDown.DemoTopDown()
  name: DemoTopDown()
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_DemoTopDown__
  fullName: scenes.DemoTopDown.DemoTopDown()
  nameWithType: DemoTopDown.DemoTopDown()
- uid: scenes.DemoTopDown.DemoTopDown*
  name: DemoTopDown
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_DemoTopDown_
  isSpec: "True"
  fullName: scenes.DemoTopDown.DemoTopDown
  nameWithType: DemoTopDown.DemoTopDown
  package: scenes
- uid: scenes.DemoTopDown.main(java.lang.String[])
  name: main(String[] args)
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_main_java_lang_String___
  fullName: scenes.DemoTopDown.main(String[] args)
  nameWithType: DemoTopDown.main(String[] args)
- uid: scenes.DemoTopDown.main*
  name: main
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_main_
  isSpec: "True"
  fullName: scenes.DemoTopDown.main
  nameWithType: DemoTopDown.main
  package: scenes
- uid: scenes.DemoTopDown.postProcess(graphics.Texture)
  name: postProcess(Texture texture)
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_postProcess_graphics_Texture_
  fullName: scenes.DemoTopDown.postProcess(Texture texture)
  nameWithType: DemoTopDown.postProcess(Texture texture)
- uid: scenes.DemoTopDown.postProcess*
  name: postProcess
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_postProcess_
  isSpec: "True"
  fullName: scenes.DemoTopDown.postProcess
  nameWithType: DemoTopDown.postProcess
  package: scenes
- uid: scenes.DemoTopDown.update()
  name: update()
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_update__
  fullName: scenes.DemoTopDown.update()
  nameWithType: DemoTopDown.update()
- uid: scenes.DemoTopDown.update*
  name: update
  href: api/scenes.DemoTopDown.html#scenes_DemoTopDown_update_
  isSpec: "True"
  fullName: scenes.DemoTopDown.update
  nameWithType: DemoTopDown.update
  package: scenes
- uid: scenes.TextRenderingDemo
  name: TextRenderingDemo
  href: api/scenes.TextRenderingDemo.html
  fullName: scenes.TextRenderingDemo
  nameWithType: TextRenderingDemo
- uid: scenes.TextRenderingDemo.awake()
  name: awake()
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_awake__
  fullName: scenes.TextRenderingDemo.awake()
  nameWithType: TextRenderingDemo.awake()
- uid: scenes.TextRenderingDemo.awake*
  name: awake
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_awake_
  isSpec: "True"
  fullName: scenes.TextRenderingDemo.awake
  nameWithType: TextRenderingDemo.awake
  package: scenes
- uid: scenes.TextRenderingDemo.main(java.lang.String[])
  name: main(String[] args)
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_main_java_lang_String___
  fullName: scenes.TextRenderingDemo.main(String[] args)
  nameWithType: TextRenderingDemo.main(String[] args)
- uid: scenes.TextRenderingDemo.main*
  name: main
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_main_
  isSpec: "True"
  fullName: scenes.TextRenderingDemo.main
  nameWithType: TextRenderingDemo.main
  package: scenes
- uid: scenes.TextRenderingDemo.TextRenderingDemo()
  name: TextRenderingDemo()
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_TextRenderingDemo__
  fullName: scenes.TextRenderingDemo.TextRenderingDemo()
  nameWithType: TextRenderingDemo.TextRenderingDemo()
- uid: scenes.TextRenderingDemo.TextRenderingDemo*
  name: TextRenderingDemo
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_TextRenderingDemo_
  isSpec: "True"
  fullName: scenes.TextRenderingDemo.TextRenderingDemo
  nameWithType: TextRenderingDemo.TextRenderingDemo
  package: scenes
- uid: scenes.TextRenderingDemo.update()
  name: update()
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_update__
  fullName: scenes.TextRenderingDemo.update()
  nameWithType: TextRenderingDemo.update()
- uid: scenes.TextRenderingDemo.update*
  name: update
  href: api/scenes.TextRenderingDemo.html#scenes_TextRenderingDemo_update_
  isSpec: "True"
  fullName: scenes.TextRenderingDemo.update
  nameWithType: TextRenderingDemo.update
  package: scenes
- uid: tiles
  name: tiles
  href: api/tiles.html
  fullName: tiles
  nameWithType: tiles
- uid: tiles.Spritesheet
  name: Spritesheet
  href: api/tiles.Spritesheet.html
  fullName: tiles.Spritesheet
  nameWithType: Spritesheet
- uid: tiles.Spritesheet.getSize()
  name: getSize()
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_getSize__
  fullName: tiles.Spritesheet.getSize()
  nameWithType: Spritesheet.getSize()
- uid: tiles.Spritesheet.getSize*
  name: getSize
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_getSize_
  isSpec: "True"
  fullName: tiles.Spritesheet.getSize
  nameWithType: Spritesheet.getSize
  package: tiles
- uid: tiles.Spritesheet.getSprite(int)
  name: getSprite(int index)
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_getSprite_int_
  fullName: tiles.Spritesheet.getSprite(int index)
  nameWithType: Spritesheet.getSprite(int index)
- uid: tiles.Spritesheet.getSprite*
  name: getSprite
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_getSprite_
  isSpec: "True"
  fullName: tiles.Spritesheet.getSprite
  nameWithType: Spritesheet.getSprite
  package: tiles
- uid: tiles.Spritesheet.getSprites()
  name: getSprites()
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_getSprites__
  fullName: tiles.Spritesheet.getSprites()
  nameWithType: Spritesheet.getSprites()
- uid: tiles.Spritesheet.getSprites*
  name: getSprites
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_getSprites_
  isSpec: "True"
  fullName: tiles.Spritesheet.getSprites
  nameWithType: Spritesheet.getSprites
  package: tiles
- uid: tiles.Spritesheet.Spritesheet(graphics.Texture,int,int,int,int)
  name: Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_Spritesheet_graphics_Texture_int_int_int_int_
  fullName: tiles.Spritesheet.Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)
  nameWithType: Spritesheet.Spritesheet(Texture texture, int spriteWidth, int spriteHeight, int numSprites, int spacing)
- uid: tiles.Spritesheet.Spritesheet*
  name: Spritesheet
  href: api/tiles.Spritesheet.html#tiles_Spritesheet_Spritesheet_
  isSpec: "True"
  fullName: tiles.Spritesheet.Spritesheet
  nameWithType: Spritesheet.Spritesheet
  package: tiles
- uid: tiles.Tilesystem
  name: Tilesystem
  href: api/tiles.Tilesystem.html
  fullName: tiles.Tilesystem
  nameWithType: Tilesystem
- uid: tiles.Tilesystem.getAt(int,int,int)
  name: getAt(int x, int y, int dimensionWidth)
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_getAt_int_int_int_
  fullName: tiles.Tilesystem.getAt(int x, int y, int dimensionWidth)
  nameWithType: Tilesystem.getAt(int x, int y, int dimensionWidth)
- uid: tiles.Tilesystem.getAt*
  name: getAt
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_getAt_
  isSpec: "True"
  fullName: tiles.Tilesystem.getAt
  nameWithType: Tilesystem.getAt
  package: tiles
- uid: tiles.Tilesystem.getIndex(int,int)
  name: getIndex(int worldX, int worldY)
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_getIndex_int_int_
  fullName: tiles.Tilesystem.getIndex(int worldX, int worldY)
  nameWithType: Tilesystem.getIndex(int worldX, int worldY)
- uid: tiles.Tilesystem.getIndex*
  name: getIndex
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_getIndex_
  isSpec: "True"
  fullName: tiles.Tilesystem.getIndex
  nameWithType: Tilesystem.getIndex
  package: tiles
- uid: tiles.Tilesystem.map
  name: map
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_map
  fullName: tiles.Tilesystem.map
  nameWithType: Tilesystem.map
- uid: tiles.Tilesystem.Tilesystem(tiles.Spritesheet,tiles.Spritesheet,int,int,int,int,int[])
  name: Tilesystem(Spritesheet a, Spritesheet b, int xTiles, int yTiles, int width, int height, int[] layers)
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_Tilesystem_tiles_Spritesheet_tiles_Spritesheet_int_int_int_int_int___
  fullName: tiles.Tilesystem.Tilesystem(Spritesheet a, Spritesheet b, int xTiles, int yTiles, int width, int height, int[] layers)
  nameWithType: Tilesystem.Tilesystem(Spritesheet a, Spritesheet b, int xTiles, int yTiles, int width, int height, int[] layers)
- uid: tiles.Tilesystem.Tilesystem*
  name: Tilesystem
  href: api/tiles.Tilesystem.html#tiles_Tilesystem_Tilesystem_
  isSpec: "True"
  fullName: tiles.Tilesystem.Tilesystem
  nameWithType: Tilesystem.Tilesystem
  package: tiles
- uid: tiles.TilesystemSideScroll
  name: TilesystemSideScroll
  href: api/tiles.TilesystemSideScroll.html
  fullName: tiles.TilesystemSideScroll
  nameWithType: TilesystemSideScroll
- uid: tiles.TilesystemSideScroll.getIndex(int,int)
  name: getIndex(int worldX, int worldY)
  href: api/tiles.TilesystemSideScroll.html#tiles_TilesystemSideScroll_getIndex_int_int_
  fullName: tiles.TilesystemSideScroll.getIndex(int worldX, int worldY)
  nameWithType: TilesystemSideScroll.getIndex(int worldX, int worldY)
- uid: tiles.TilesystemSideScroll.getIndex*
  name: getIndex
  href: api/tiles.TilesystemSideScroll.html#tiles_TilesystemSideScroll_getIndex_
  isSpec: "True"
  fullName: tiles.TilesystemSideScroll.getIndex
  nameWithType: TilesystemSideScroll.getIndex
  package: tiles
- uid: tiles.TilesystemSideScroll.getType(int,int)
  name: getType(int worldX, int worldY)
  href: api/tiles.TilesystemSideScroll.html#tiles_TilesystemSideScroll_getType_int_int_
  fullName: tiles.TilesystemSideScroll.getType(int worldX, int worldY)
  nameWithType: TilesystemSideScroll.getType(int worldX, int worldY)
- uid: tiles.TilesystemSideScroll.getType*
  name: getType
  href: api/tiles.TilesystemSideScroll.html#tiles_TilesystemSideScroll_getType_
  isSpec: "True"
  fullName: tiles.TilesystemSideScroll.getType
  nameWithType: TilesystemSideScroll.getType
  package: tiles
- uid: tiles.TilesystemSideScroll.TilesystemSideScroll(tiles.Spritesheet,int,int,int,int,ecs.GameObject,int[])
  name: TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)
  href: api/tiles.TilesystemSideScroll.html#tiles_TilesystemSideScroll_TilesystemSideScroll_tiles_Spritesheet_int_int_int_int_ecs_GameObject_int___
  fullName: tiles.TilesystemSideScroll.TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)
  nameWithType: TilesystemSideScroll.TilesystemSideScroll(Spritesheet s, int xTiles, int yTiles, int width, int height, GameObject c, int[] layers)
- uid: tiles.TilesystemSideScroll.TilesystemSideScroll*
  name: TilesystemSideScroll
  href: api/tiles.TilesystemSideScroll.html#tiles_TilesystemSideScroll_TilesystemSideScroll_
  isSpec: "True"
  fullName: tiles.TilesystemSideScroll.TilesystemSideScroll
  nameWithType: TilesystemSideScroll.TilesystemSideScroll
  package: tiles
- uid: tiles.TMXParser
  name: TMXParser
  href: api/tiles.TMXParser.html
  fullName: tiles.TMXParser
  nameWithType: TMXParser
- uid: tiles.TMXParser.TMXParser()
  name: TMXParser()
  href: api/tiles.TMXParser.html#tiles_TMXParser_TMXParser__
  fullName: tiles.TMXParser.TMXParser()
  nameWithType: TMXParser.TMXParser()
- uid: tiles.TMXParser.TMXParser*
  name: TMXParser
  href: api/tiles.TMXParser.html#tiles_TMXParser_TMXParser_
  isSpec: "True"
  fullName: tiles.TMXParser.TMXParser
  nameWithType: TMXParser.TMXParser
  package: tiles
- uid: util
  name: util
  href: api/util.html
  fullName: util
  nameWithType: util
- uid: util.Assets
  name: Assets
  href: api/util.Assets.html
  fullName: util.Assets
  nameWithType: Assets
- uid: util.Assets.Assets()
  name: Assets()
  href: api/util.Assets.html#util_Assets_Assets__
  fullName: util.Assets.Assets()
  nameWithType: Assets.Assets()
- uid: util.Assets.Assets*
  name: Assets
  href: api/util.Assets.html#util_Assets_Assets_
  isSpec: "True"
  fullName: util.Assets.Assets
  nameWithType: Assets.Assets
  package: util
- uid: util.Assets.getShader(java.lang.String)
  name: getShader(String path)
  href: api/util.Assets.html#util_Assets_getShader_java_lang_String_
  fullName: util.Assets.getShader(String path)
  nameWithType: Assets.getShader(String path)
- uid: util.Assets.getShader*
  name: getShader
  href: api/util.Assets.html#util_Assets_getShader_
  isSpec: "True"
  fullName: util.Assets.getShader
  nameWithType: Assets.getShader
  package: util
- uid: util.Assets.getTexture(java.lang.String)
  name: getTexture(String path)
  href: api/util.Assets.html#util_Assets_getTexture_java_lang_String_
  fullName: util.Assets.getTexture(String path)
  nameWithType: Assets.getTexture(String path)
- uid: util.Assets.getTexture*
  name: getTexture
  href: api/util.Assets.html#util_Assets_getTexture_
  isSpec: "True"
  fullName: util.Assets.getTexture
  nameWithType: Assets.getTexture
  package: util
- uid: util.Assets.loadSpritesheet(java.lang.String,int,int,int,int)
  name: loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)
  href: api/util.Assets.html#util_Assets_loadSpritesheet_java_lang_String_int_int_int_int_
  fullName: util.Assets.loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)
  nameWithType: Assets.loadSpritesheet(String path, int spriteWidth, int spriteHeight, int numSprites, int spacing)
- uid: util.Assets.loadSpritesheet*
  name: loadSpritesheet
  href: api/util.Assets.html#util_Assets_loadSpritesheet_
  isSpec: "True"
  fullName: util.Assets.loadSpritesheet
  nameWithType: Assets.loadSpritesheet
  package: util
- uid: util.debug
  name: util.debug
  href: api/util.debug.html
  fullName: util.debug
  nameWithType: util.debug
- uid: util.debug.DebugLine
  name: DebugLine
  href: api/util.debug.DebugLine.html
  fullName: util.debug.DebugLine
  nameWithType: DebugLine
- uid: util.debug.DebugLine.color
  name: color
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_color
  fullName: util.debug.DebugLine.color
  nameWithType: DebugLine.color
- uid: util.debug.DebugLine.DebugLine(org.joml.Vector2f,org.joml.Vector2f)
  name: DebugLine(Vector2f start, Vector2f end)
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_DebugLine_org_joml_Vector2f_org_joml_Vector2f_
  fullName: util.debug.DebugLine.DebugLine(Vector2f start, Vector2f end)
  nameWithType: DebugLine.DebugLine(Vector2f start, Vector2f end)
- uid: util.debug.DebugLine.DebugLine(org.joml.Vector2f,org.joml.Vector2f,graphics.Color)
  name: DebugLine(Vector2f start, Vector2f end, Color color)
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_DebugLine_org_joml_Vector2f_org_joml_Vector2f_graphics_Color_
  fullName: util.debug.DebugLine.DebugLine(Vector2f start, Vector2f end, Color color)
  nameWithType: DebugLine.DebugLine(Vector2f start, Vector2f end, Color color)
- uid: util.debug.DebugLine.DebugLine*
  name: DebugLine
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_DebugLine_
  isSpec: "True"
  fullName: util.debug.DebugLine.DebugLine
  nameWithType: DebugLine.DebugLine
  package: util.debug
- uid: util.debug.DebugLine.dirty
  name: dirty
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_dirty
  fullName: util.debug.DebugLine.dirty
  nameWithType: DebugLine.dirty
- uid: util.debug.DebugLine.end
  name: end
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_end
  fullName: util.debug.DebugLine.end
  nameWithType: DebugLine.end
- uid: util.debug.DebugLine.isDirty()
  name: isDirty()
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_isDirty__
  fullName: util.debug.DebugLine.isDirty()
  nameWithType: DebugLine.isDirty()
- uid: util.debug.DebugLine.isDirty*
  name: isDirty
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_isDirty_
  isSpec: "True"
  fullName: util.debug.DebugLine.isDirty
  nameWithType: DebugLine.isDirty
  package: util.debug
- uid: util.debug.DebugLine.markClean()
  name: markClean()
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_markClean__
  fullName: util.debug.DebugLine.markClean()
  nameWithType: DebugLine.markClean()
- uid: util.debug.DebugLine.markClean*
  name: markClean
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_markClean_
  isSpec: "True"
  fullName: util.debug.DebugLine.markClean
  nameWithType: DebugLine.markClean
  package: util.debug
- uid: util.debug.DebugLine.markDirty()
  name: markDirty()
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_markDirty__
  fullName: util.debug.DebugLine.markDirty()
  nameWithType: DebugLine.markDirty()
- uid: util.debug.DebugLine.markDirty*
  name: markDirty
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_markDirty_
  isSpec: "True"
  fullName: util.debug.DebugLine.markDirty
  nameWithType: DebugLine.markDirty
  package: util.debug
- uid: util.debug.DebugLine.start
  name: start
  href: api/util.debug.DebugLine.html#util_debug_DebugLine_start
  fullName: util.debug.DebugLine.start
  nameWithType: DebugLine.start
- uid: util.debug.DebugPrimitive
  name: DebugPrimitive
  href: api/util.debug.DebugPrimitive.html
  fullName: util.debug.DebugPrimitive
  nameWithType: DebugPrimitive
- uid: util.debug.DebugPrimitive.DebugPrimitive(util.debug.DebugLine[])
  name: DebugPrimitive(DebugLine[] lines)
  href: api/util.debug.DebugPrimitive.html#util_debug_DebugPrimitive_DebugPrimitive_util_debug_DebugLine___
  fullName: util.debug.DebugPrimitive.DebugPrimitive(DebugLine[] lines)
  nameWithType: DebugPrimitive.DebugPrimitive(DebugLine[] lines)
- uid: util.debug.DebugPrimitive.DebugPrimitive*
  name: DebugPrimitive
  href: api/util.debug.DebugPrimitive.html#util_debug_DebugPrimitive_DebugPrimitive_
  isSpec: "True"
  fullName: util.debug.DebugPrimitive.DebugPrimitive
  nameWithType: DebugPrimitive.DebugPrimitive
  package: util.debug
- uid: util.debug.DebugPrimitive.getLines()
  name: getLines()
  href: api/util.debug.DebugPrimitive.html#util_debug_DebugPrimitive_getLines__
  fullName: util.debug.DebugPrimitive.getLines()
  nameWithType: DebugPrimitive.getLines()
- uid: util.debug.DebugPrimitive.getLines*
  name: getLines
  href: api/util.debug.DebugPrimitive.html#util_debug_DebugPrimitive_getLines_
  isSpec: "True"
  fullName: util.debug.DebugPrimitive.getLines
  nameWithType: DebugPrimitive.getLines
  package: util.debug
- uid: util.debug.DebugPrimitive.lines
  name: lines
  href: api/util.debug.DebugPrimitive.html#util_debug_DebugPrimitive_lines
  fullName: util.debug.DebugPrimitive.lines
  nameWithType: DebugPrimitive.lines
- uid: util.debug.DebugRect
  name: DebugRect
  href: api/util.debug.DebugRect.html
  fullName: util.debug.DebugRect
  nameWithType: DebugRect
- uid: util.debug.DebugRect.DebugRect(float,float,float,float,graphics.Color)
  name: DebugRect(float x, float y, float width, float height, Color color)
  href: api/util.debug.DebugRect.html#util_debug_DebugRect_DebugRect_float_float_float_float_graphics_Color_
  fullName: util.debug.DebugRect.DebugRect(float x, float y, float width, float height, Color color)
  nameWithType: DebugRect.DebugRect(float x, float y, float width, float height, Color color)
- uid: util.debug.DebugRect.DebugRect*
  name: DebugRect
  href: api/util.debug.DebugRect.html#util_debug_DebugRect_DebugRect_
  isSpec: "True"
  fullName: util.debug.DebugRect.DebugRect
  nameWithType: DebugRect.DebugRect
  package: util.debug
- uid: util.debug.DebugRect.reset(float,float,float,float)
  name: reset(float x, float y, float width, float height)
  href: api/util.debug.DebugRect.html#util_debug_DebugRect_reset_float_float_float_float_
  fullName: util.debug.DebugRect.reset(float x, float y, float width, float height)
  nameWithType: DebugRect.reset(float x, float y, float width, float height)
- uid: util.debug.DebugRect.reset*
  name: reset
  href: api/util.debug.DebugRect.html#util_debug_DebugRect_reset_
  isSpec: "True"
  fullName: util.debug.DebugRect.reset
  nameWithType: DebugRect.reset
  package: util.debug
- uid: util.Engine
  name: Engine
  href: api/util.Engine.html
  fullName: util.Engine
  nameWithType: Engine
- uid: util.Engine.deltaTime()
  name: deltaTime()
  href: api/util.Engine.html#util_Engine_deltaTime__
  fullName: util.Engine.deltaTime()
  nameWithType: Engine.deltaTime()
- uid: util.Engine.deltaTime*
  name: deltaTime
  href: api/util.Engine.html#util_Engine_deltaTime_
  isSpec: "True"
  fullName: util.Engine.deltaTime
  nameWithType: Engine.deltaTime
  package: util
- uid: util.Engine.Engine()
  name: Engine()
  href: api/util.Engine.html
  fullName: util.Engine.Engine()
  nameWithType: Engine.Engine()
- uid: util.Engine.Engine*
  name: Engine
  href: api/util.Engine.html
  isSpec: "True"
  fullName: util.Engine.Engine
  nameWithType: Engine.Engine
  package: util
- uid: util.Engine.getDeltaTime()
  name: getDeltaTime()
  href: api/util.Engine.html#util_Engine_getDeltaTime__
  fullName: util.Engine.getDeltaTime()
  nameWithType: Engine.getDeltaTime()
- uid: util.Engine.getDeltaTime*
  name: getDeltaTime
  href: api/util.Engine.html#util_Engine_getDeltaTime_
  isSpec: "True"
  fullName: util.Engine.getDeltaTime
  nameWithType: Engine.getDeltaTime
  package: util
- uid: util.Engine.getInstance()
  name: getInstance()
  href: api/util.Engine.html#util_Engine_getInstance__
  fullName: util.Engine.getInstance()
  nameWithType: Engine.getInstance()
- uid: util.Engine.getInstance*
  name: getInstance
  href: api/util.Engine.html#util_Engine_getInstance_
  isSpec: "True"
  fullName: util.Engine.getInstance
  nameWithType: Engine.getInstance
  package: util
- uid: util.Engine.getWindow()
  name: getWindow()
  href: api/util.Engine.html#util_Engine_getWindow__
  fullName: util.Engine.getWindow()
  nameWithType: Engine.getWindow()
- uid: util.Engine.getWindow*
  name: getWindow
  href: api/util.Engine.html#util_Engine_getWindow_
  isSpec: "True"
  fullName: util.Engine.getWindow
  nameWithType: Engine.getWindow
  package: util
- uid: util.Engine.init(int,int,java.lang.String)
  name: init(int windowWidth, int windowHeight, String windowTitle)
  href: api/util.Engine.html#util_Engine_init_int_int_java_lang_String_
  fullName: util.Engine.init(int windowWidth, int windowHeight, String windowTitle)
  nameWithType: Engine.init(int windowWidth, int windowHeight, String windowTitle)
- uid: util.Engine.init(int,int,java.lang.String,float)
  name: init(int windowWidth, int windowHeight, String windowTitle, float minSceneLighting)
  href: api/util.Engine.html#util_Engine_init_int_int_java_lang_String_float_
  fullName: util.Engine.init(int windowWidth, int windowHeight, String windowTitle, float minSceneLighting)
  nameWithType: Engine.init(int windowWidth, int windowHeight, String windowTitle, float minSceneLighting)
- uid: util.Engine.init(int,int,java.lang.String,float,boolean)
  name: init(int windowWidth, int windowHeight, String windowTitle, float minSceneLighting, boolean recalculateProjectionOnResize)
  href: api/util.Engine.html#util_Engine_init_int_int_java_lang_String_float_boolean_
  fullName: util.Engine.init(int windowWidth, int windowHeight, String windowTitle, float minSceneLighting, boolean recalculateProjectionOnResize)
  nameWithType: Engine.init(int windowWidth, int windowHeight, String windowTitle, float minSceneLighting, boolean recalculateProjectionOnResize)
- uid: util.Engine.init(java.lang.String)
  name: init(String windowTitle)
  href: api/util.Engine.html#util_Engine_init_java_lang_String_
  fullName: util.Engine.init(String windowTitle)
  nameWithType: Engine.init(String windowTitle)
- uid: util.Engine.init(java.lang.String,float)
  name: init(String windowTitle, float minSceneLighting)
  href: api/util.Engine.html#util_Engine_init_java_lang_String_float_
  fullName: util.Engine.init(String windowTitle, float minSceneLighting)
  nameWithType: Engine.init(String windowTitle, float minSceneLighting)
- uid: util.Engine.init*
  name: init
  href: api/util.Engine.html#util_Engine_init_
  isSpec: "True"
  fullName: util.Engine.init
  nameWithType: Engine.init
  package: util
- uid: util.Engine.isRunning()
  name: isRunning()
  href: api/util.Engine.html#util_Engine_isRunning__
  fullName: util.Engine.isRunning()
  nameWithType: Engine.isRunning()
- uid: util.Engine.isRunning*
  name: isRunning
  href: api/util.Engine.html#util_Engine_isRunning_
  isSpec: "True"
  fullName: util.Engine.isRunning
  nameWithType: Engine.isRunning
  package: util
- uid: util.Engine.millisRunning()
  name: millisRunning()
  href: api/util.Engine.html#util_Engine_millisRunning__
  fullName: util.Engine.millisRunning()
  nameWithType: Engine.millisRunning()
- uid: util.Engine.millisRunning*
  name: millisRunning
  href: api/util.Engine.html#util_Engine_millisRunning_
  isSpec: "True"
  fullName: util.Engine.millisRunning
  nameWithType: Engine.millisRunning
  package: util
- uid: util.Engine.scenes()
  name: scenes()
  href: api/util.Engine.html#util_Engine_scenes__
  fullName: util.Engine.scenes()
  nameWithType: Engine.scenes()
- uid: util.Engine.scenes*
  name: scenes
  href: api/util.Engine.html#util_Engine_scenes_
  isSpec: "True"
  fullName: util.Engine.scenes
  nameWithType: Engine.scenes
  package: util
- uid: util.Engine.showWindow()
  name: showWindow()
  href: api/util.Engine.html#util_Engine_showWindow__
  fullName: util.Engine.showWindow()
  nameWithType: Engine.showWindow()
- uid: util.Engine.showWindow*
  name: showWindow
  href: api/util.Engine.html#util_Engine_showWindow_
  isSpec: "True"
  fullName: util.Engine.showWindow
  nameWithType: Engine.showWindow
  package: util
- uid: util.Engine.updateDeltaTime(float)
  name: updateDeltaTime(float deltaTime)
  href: api/util.Engine.html#util_Engine_updateDeltaTime_float_
  fullName: util.Engine.updateDeltaTime(float deltaTime)
  nameWithType: Engine.updateDeltaTime(float deltaTime)
- uid: util.Engine.updateDeltaTime*
  name: updateDeltaTime
  href: api/util.Engine.html#util_Engine_updateDeltaTime_
  isSpec: "True"
  fullName: util.Engine.updateDeltaTime
  nameWithType: Engine.updateDeltaTime
  package: util
- uid: util.Engine.window()
  name: window()
  href: api/util.Engine.html#util_Engine_window__
  fullName: util.Engine.window()
  nameWithType: Engine.window()
- uid: util.Engine.window*
  name: window
  href: api/util.Engine.html#util_Engine_window_
  isSpec: "True"
  fullName: util.Engine.window
  nameWithType: Engine.window
  package: util
- uid: util.Logger
  name: Logger
  href: api/util.Logger.html
  fullName: util.Logger
  nameWithType: Logger
- uid: util.Logger.debugLog(java.lang.String)
  name: debugLog(String log)
  href: api/util.Logger.html#util_Logger_debugLog_java_lang_String_
  fullName: util.Logger.debugLog(String log)
  nameWithType: Logger.debugLog(String log)
- uid: util.Logger.debugLog*
  name: debugLog
  href: api/util.Logger.html#util_Logger_debugLog_
  isSpec: "True"
  fullName: util.Logger.debugLog
  nameWithType: Logger.debugLog
  package: util
- uid: util.Logger.logAssetError(java.lang.String)
  name: logAssetError(String error)
  href: api/util.Logger.html#util_Logger_logAssetError_java_lang_String_
  fullName: util.Logger.logAssetError(String error)
  nameWithType: Logger.logAssetError(String error)
- uid: util.Logger.logAssetError*
  name: logAssetError
  href: api/util.Logger.html#util_Logger_logAssetError_
  isSpec: "True"
  fullName: util.Logger.logAssetError
  nameWithType: Logger.logAssetError
  package: util
- uid: util.Logger.logEngineError()
  name: logEngineError()
  href: api/util.Logger.html#util_Logger_logEngineError__
  fullName: util.Logger.logEngineError()
  nameWithType: Logger.logEngineError()
- uid: util.Logger.logEngineError*
  name: logEngineError
  href: api/util.Logger.html#util_Logger_logEngineError_
  isSpec: "True"
  fullName: util.Logger.logEngineError
  nameWithType: Logger.logEngineError
  package: util
- uid: util.Logger.logFatal(java.lang.String)
  name: logFatal(String error)
  href: api/util.Logger.html#util_Logger_logFatal_java_lang_String_
  fullName: util.Logger.logFatal(String error)
  nameWithType: Logger.logFatal(String error)
- uid: util.Logger.logFatal*
  name: logFatal
  href: api/util.Logger.html#util_Logger_logFatal_
  isSpec: "True"
  fullName: util.Logger.logFatal
  nameWithType: Logger.logFatal
  package: util
- uid: util.Logger.Logger()
  name: Logger()
  href: api/util.Logger.html#util_Logger_Logger__
  fullName: util.Logger.Logger()
  nameWithType: Logger.Logger()
- uid: util.Logger.Logger*
  name: Logger
  href: api/util.Logger.html#util_Logger_Logger_
  isSpec: "True"
  fullName: util.Logger.Logger
  nameWithType: Logger.Logger
  package: util
- uid: util.Logger.logInfo(java.lang.String)
  name: logInfo(String info)
  href: api/util.Logger.html#util_Logger_logInfo_java_lang_String_
  fullName: util.Logger.logInfo(String info)
  nameWithType: Logger.logInfo(String info)
- uid: util.Logger.logInfo*
  name: logInfo
  href: api/util.Logger.html#util_Logger_logInfo_
  isSpec: "True"
  fullName: util.Logger.logInfo
  nameWithType: Logger.logInfo
  package: util
- uid: util.Logger.logSystemCompatibilityError()
  name: logSystemCompatibilityError()
  href: api/util.Logger.html#util_Logger_logSystemCompatibilityError__
  fullName: util.Logger.logSystemCompatibilityError()
  nameWithType: Logger.logSystemCompatibilityError()
- uid: util.Logger.logSystemCompatibilityError*
  name: logSystemCompatibilityError
  href: api/util.Logger.html#util_Logger_logSystemCompatibilityError_
  isSpec: "True"
  fullName: util.Logger.logSystemCompatibilityError
  nameWithType: Logger.logSystemCompatibilityError
  package: util
- uid: util.MathUtils
  name: MathUtils
  href: api/util.MathUtils.html
  fullName: util.MathUtils
  nameWithType: MathUtils
- uid: util.MathUtils.boundingSphere(org.joml.Vector2f,org.joml.Vector2f...)
  name: boundingSphere(Vector2f centroid, Vector2f[] vertices)
  href: api/util.MathUtils.html#util_MathUtils_boundingSphere_org_joml_Vector2f_org_joml_Vector2f____
  fullName: util.MathUtils.boundingSphere(Vector2f centroid, Vector2f[] vertices)
  nameWithType: MathUtils.boundingSphere(Vector2f centroid, Vector2f[] vertices)
- uid: util.MathUtils.boundingSphere*
  name: boundingSphere
  href: api/util.MathUtils.html#util_MathUtils_boundingSphere_
  isSpec: "True"
  fullName: util.MathUtils.boundingSphere
  nameWithType: MathUtils.boundingSphere
  package: util
- uid: util.MathUtils.constrain(float,float,float)
  name: constrain(float value, float min, float max)
  href: api/util.MathUtils.html#util_MathUtils_constrain_float_float_float_
  fullName: util.MathUtils.constrain(float value, float min, float max)
  nameWithType: MathUtils.constrain(float value, float min, float max)
- uid: util.MathUtils.constrain(int,int,int)
  name: constrain(int value, int min, int max)
  href: api/util.MathUtils.html#util_MathUtils_constrain_int_int_int_
  fullName: util.MathUtils.constrain(int value, int min, int max)
  nameWithType: MathUtils.constrain(int value, int min, int max)
- uid: util.MathUtils.constrain*
  name: constrain
  href: api/util.MathUtils.html#util_MathUtils_constrain_
  isSpec: "True"
  fullName: util.MathUtils.constrain
  nameWithType: MathUtils.constrain
  package: util
- uid: util.MathUtils.convexHull(org.joml.Vector2f[])
  name: convexHull(Vector2f[] points)
  href: api/util.MathUtils.html#util_MathUtils_convexHull_org_joml_Vector2f___
  fullName: util.MathUtils.convexHull(Vector2f[] points)
  nameWithType: MathUtils.convexHull(Vector2f[] points)
- uid: util.MathUtils.convexHull*
  name: convexHull
  href: api/util.MathUtils.html#util_MathUtils_convexHull_
  isSpec: "True"
  fullName: util.MathUtils.convexHull
  nameWithType: MathUtils.convexHull
  package: util
- uid: util.MathUtils.copy(org.joml.Vector2f[])
  name: copy(Vector2f[] original)
  href: api/util.MathUtils.html#util_MathUtils_copy_org_joml_Vector2f___
  fullName: util.MathUtils.copy(Vector2f[] original)
  nameWithType: MathUtils.copy(Vector2f[] original)
- uid: util.MathUtils.copy*
  name: copy
  href: api/util.MathUtils.html#util_MathUtils_copy_
  isSpec: "True"
  fullName: util.MathUtils.copy
  nameWithType: MathUtils.copy
  package: util
- uid: util.MathUtils.dist(float,float,float,float)
  name: dist(float x1, float y1, float x2, float y2)
  href: api/util.MathUtils.html#util_MathUtils_dist_float_float_float_float_
  fullName: util.MathUtils.dist(float x1, float y1, float x2, float y2)
  nameWithType: MathUtils.dist(float x1, float y1, float x2, float y2)
- uid: util.MathUtils.dist(org.joml.Vector2f,org.joml.Vector2f)
  name: dist(Vector2f pos1, Vector2f pos2)
  href: api/util.MathUtils.html#util_MathUtils_dist_org_joml_Vector2f_org_joml_Vector2f_
  fullName: util.MathUtils.dist(Vector2f pos1, Vector2f pos2)
  nameWithType: MathUtils.dist(Vector2f pos1, Vector2f pos2)
- uid: util.MathUtils.dist*
  name: dist
  href: api/util.MathUtils.html#util_MathUtils_dist_
  isSpec: "True"
  fullName: util.MathUtils.dist
  nameWithType: MathUtils.dist
  package: util
- uid: util.MathUtils.encode(int)
  name: encode(int data)
  href: api/util.MathUtils.html#util_MathUtils_encode_int_
  fullName: util.MathUtils.encode(int data)
  nameWithType: MathUtils.encode(int data)
- uid: util.MathUtils.encode(int[])
  name: encode(int[] data)
  href: api/util.MathUtils.html#util_MathUtils_encode_int___
  fullName: util.MathUtils.encode(int[] data)
  nameWithType: MathUtils.encode(int[] data)
- uid: util.MathUtils.encode*
  name: encode
  href: api/util.MathUtils.html#util_MathUtils_encode_
  isSpec: "True"
  fullName: util.MathUtils.encode
  nameWithType: MathUtils.encode
  package: util
- uid: util.MathUtils.expandingPolytopeAlgorithm(physics.collision.shape.PrimitiveShape,physics.collision.shape.PrimitiveShape,org.joml.Vector2f[])
  name: expandingPolytopeAlgorithm(PrimitiveShape shapeA, PrimitiveShape shapeB, Vector2f[] simplex)
  href: api/util.MathUtils.html#util_MathUtils_expandingPolytopeAlgorithm_physics_collision_shape_PrimitiveShape_physics_collision_shape_PrimitiveShape_org_joml_Vector2f___
  fullName: util.MathUtils.expandingPolytopeAlgorithm(PrimitiveShape shapeA, PrimitiveShape shapeB, Vector2f[] simplex)
  nameWithType: MathUtils.expandingPolytopeAlgorithm(PrimitiveShape shapeA, PrimitiveShape shapeB, Vector2f[] simplex)
- uid: util.MathUtils.expandingPolytopeAlgorithm*
  name: expandingPolytopeAlgorithm
  href: api/util.MathUtils.html#util_MathUtils_expandingPolytopeAlgorithm_
  isSpec: "True"
  fullName: util.MathUtils.expandingPolytopeAlgorithm
  nameWithType: MathUtils.expandingPolytopeAlgorithm
  package: util
- uid: util.MathUtils.fastFloor(double)
  name: fastFloor(double x)
  href: api/util.MathUtils.html#util_MathUtils_fastFloor_double_
  fullName: util.MathUtils.fastFloor(double x)
  nameWithType: MathUtils.fastFloor(double x)
- uid: util.MathUtils.fastFloor(float)
  name: fastFloor(float x)
  href: api/util.MathUtils.html#util_MathUtils_fastFloor_float_
  fullName: util.MathUtils.fastFloor(float x)
  nameWithType: MathUtils.fastFloor(float x)
- uid: util.MathUtils.fastFloor*
  name: fastFloor
  href: api/util.MathUtils.html#util_MathUtils_fastFloor_
  isSpec: "True"
  fullName: util.MathUtils.fastFloor
  nameWithType: MathUtils.fastFloor
  package: util
- uid: util.MathUtils.fastRandom(int,int)
  name: fastRandom(int pos, int seed)
  href: api/util.MathUtils.html#util_MathUtils_fastRandom_int_int_
  fullName: util.MathUtils.fastRandom(int pos, int seed)
  nameWithType: MathUtils.fastRandom(int pos, int seed)
- uid: util.MathUtils.fastRandom(long,long)
  name: fastRandom(long pos, long seed)
  href: api/util.MathUtils.html#util_MathUtils_fastRandom_long_long_
  fullName: util.MathUtils.fastRandom(long pos, long seed)
  nameWithType: MathUtils.fastRandom(long pos, long seed)
- uid: util.MathUtils.fastRandom*
  name: fastRandom
  href: api/util.MathUtils.html#util_MathUtils_fastRandom_
  isSpec: "True"
  fullName: util.MathUtils.fastRandom
  nameWithType: MathUtils.fastRandom
  package: util
- uid: util.MathUtils.gjksmCollision(physics.collision.shape.PrimitiveShape,physics.collision.shape.PrimitiveShape)
  name: gjksmCollision(PrimitiveShape shapeA, PrimitiveShape shapeB)
  href: api/util.MathUtils.html#util_MathUtils_gjksmCollision_physics_collision_shape_PrimitiveShape_physics_collision_shape_PrimitiveShape_
  fullName: util.MathUtils.gjksmCollision(PrimitiveShape shapeA, PrimitiveShape shapeB)
  nameWithType: MathUtils.gjksmCollision(PrimitiveShape shapeA, PrimitiveShape shapeB)
- uid: util.MathUtils.gjksmCollision*
  name: gjksmCollision
  href: api/util.MathUtils.html#util_MathUtils_gjksmCollision_
  isSpec: "True"
  fullName: util.MathUtils.gjksmCollision
  nameWithType: MathUtils.gjksmCollision
  package: util
- uid: util.MathUtils.inCircle(float,float,float,float,float)
  name: inCircle(float inX, float inY, float circleX, float circleY, float radius)
  href: api/util.MathUtils.html#util_MathUtils_inCircle_float_float_float_float_float_
  fullName: util.MathUtils.inCircle(float inX, float inY, float circleX, float circleY, float radius)
  nameWithType: MathUtils.inCircle(float inX, float inY, float circleX, float circleY, float radius)
- uid: util.MathUtils.inCircle(org.joml.Vector2f,float,float,float)
  name: inCircle(Vector2f in, float circleX, float circleY, float radius)
  href: api/util.MathUtils.html#util_MathUtils_inCircle_org_joml_Vector2f_float_float_float_
  fullName: util.MathUtils.inCircle(Vector2f in, float circleX, float circleY, float radius)
  nameWithType: MathUtils.inCircle(Vector2f in, float circleX, float circleY, float radius)
- uid: util.MathUtils.inCircle(org.joml.Vector2f,org.joml.Vector2f,float)
  name: inCircle(Vector2f in, Vector2f circle, float radius)
  href: api/util.MathUtils.html#util_MathUtils_inCircle_org_joml_Vector2f_org_joml_Vector2f_float_
  fullName: util.MathUtils.inCircle(Vector2f in, Vector2f circle, float radius)
  nameWithType: MathUtils.inCircle(Vector2f in, Vector2f circle, float radius)
- uid: util.MathUtils.inCircle*
  name: inCircle
  href: api/util.MathUtils.html#util_MathUtils_inCircle_
  isSpec: "True"
  fullName: util.MathUtils.inCircle
  nameWithType: MathUtils.inCircle
  package: util
- uid: util.MathUtils.inRect(float,float,float,float,float,float)
  name: inRect(float inX, float inY, float rectX, float rectY, float rectWidth, float rectHeight)
  href: api/util.MathUtils.html#util_MathUtils_inRect_float_float_float_float_float_float_
  fullName: util.MathUtils.inRect(float inX, float inY, float rectX, float rectY, float rectWidth, float rectHeight)
  nameWithType: MathUtils.inRect(float inX, float inY, float rectX, float rectY, float rectWidth, float rectHeight)
- uid: util.MathUtils.inRect(org.joml.Vector2f,float,float,float,float)
  name: inRect(Vector2f in, float rectX, float rectY, float rectWidth, float rectHeight)
  href: api/util.MathUtils.html#util_MathUtils_inRect_org_joml_Vector2f_float_float_float_float_
  fullName: util.MathUtils.inRect(Vector2f in, float rectX, float rectY, float rectWidth, float rectHeight)
  nameWithType: MathUtils.inRect(Vector2f in, float rectX, float rectY, float rectWidth, float rectHeight)
- uid: util.MathUtils.inRect*
  name: inRect
  href: api/util.MathUtils.html#util_MathUtils_inRect_
  isSpec: "True"
  fullName: util.MathUtils.inRect
  nameWithType: MathUtils.inRect
  package: util
- uid: util.MathUtils.lerp(float,float,float)
  name: lerp(float start, float end, float amt)
  href: api/util.MathUtils.html#util_MathUtils_lerp_float_float_float_
  fullName: util.MathUtils.lerp(float start, float end, float amt)
  nameWithType: MathUtils.lerp(float start, float end, float amt)
- uid: util.MathUtils.lerp*
  name: lerp
  href: api/util.MathUtils.html#util_MathUtils_lerp_
  isSpec: "True"
  fullName: util.MathUtils.lerp
  nameWithType: MathUtils.lerp
  package: util
- uid: util.MathUtils.map(float,float,float,float,float)
  name: map(float value, float start1, float stop1, float start2, float stop2)
  href: api/util.MathUtils.html#util_MathUtils_map_float_float_float_float_float_
  fullName: util.MathUtils.map(float value, float start1, float stop1, float start2, float stop2)
  nameWithType: MathUtils.map(float value, float start1, float stop1, float start2, float stop2)
- uid: util.MathUtils.map*
  name: map
  href: api/util.MathUtils.html#util_MathUtils_map_
  isSpec: "True"
  fullName: util.MathUtils.map
  nameWithType: MathUtils.map
  package: util
- uid: util.MathUtils.MathUtils()
  name: MathUtils()
  href: api/util.MathUtils.html#util_MathUtils_MathUtils__
  fullName: util.MathUtils.MathUtils()
  nameWithType: MathUtils.MathUtils()
- uid: util.MathUtils.MathUtils*
  name: MathUtils
  href: api/util.MathUtils.html#util_MathUtils_MathUtils_
  isSpec: "True"
  fullName: util.MathUtils.MathUtils
  nameWithType: MathUtils.MathUtils
  package: util
- uid: util.MathUtils.maxDotPoint(org.joml.Vector2f[],org.joml.Vector2f)
  name: maxDotPoint(Vector2f[] convexShapePoints, Vector2f direction)
  href: api/util.MathUtils.html#util_MathUtils_maxDotPoint_org_joml_Vector2f___org_joml_Vector2f_
  fullName: util.MathUtils.maxDotPoint(Vector2f[] convexShapePoints, Vector2f direction)
  nameWithType: MathUtils.maxDotPoint(Vector2f[] convexShapePoints, Vector2f direction)
- uid: util.MathUtils.maxDotPoint*
  name: maxDotPoint
  href: api/util.MathUtils.html#util_MathUtils_maxDotPoint_
  isSpec: "True"
  fullName: util.MathUtils.maxDotPoint
  nameWithType: MathUtils.maxDotPoint
  package: util
- uid: util.MathUtils.maxDotPointMinkDiff(physics.collision.shape.PrimitiveShape,physics.collision.shape.PrimitiveShape,org.joml.Vector2f)
  name: maxDotPointMinkDiff(PrimitiveShape shapeA, PrimitiveShape shapeB, Vector2f direction)
  href: api/util.MathUtils.html#util_MathUtils_maxDotPointMinkDiff_physics_collision_shape_PrimitiveShape_physics_collision_shape_PrimitiveShape_org_joml_Vector2f_
  fullName: util.MathUtils.maxDotPointMinkDiff(PrimitiveShape shapeA, PrimitiveShape shapeB, Vector2f direction)
  nameWithType: MathUtils.maxDotPointMinkDiff(PrimitiveShape shapeA, PrimitiveShape shapeB, Vector2f direction)
- uid: util.MathUtils.maxDotPointMinkDiff*
  name: maxDotPointMinkDiff
  href: api/util.MathUtils.html#util_MathUtils_maxDotPointMinkDiff_
  isSpec: "True"
  fullName: util.MathUtils.maxDotPointMinkDiff
  nameWithType: MathUtils.maxDotPointMinkDiff
  package: util
- uid: util.MathUtils.polygonCentroid(org.joml.Vector2f...)
  name: polygonCentroid(Vector2f[] vertices)
  href: api/util.MathUtils.html#util_MathUtils_polygonCentroid_org_joml_Vector2f____
  fullName: util.MathUtils.polygonCentroid(Vector2f[] vertices)
  nameWithType: MathUtils.polygonCentroid(Vector2f[] vertices)
- uid: util.MathUtils.polygonCentroid*
  name: polygonCentroid
  href: api/util.MathUtils.html#util_MathUtils_polygonCentroid_
  isSpec: "True"
  fullName: util.MathUtils.polygonCentroid
  nameWithType: MathUtils.polygonCentroid
  package: util
- uid: util.MathUtils.radian(float)
  name: radian(float degree)
  href: api/util.MathUtils.html#util_MathUtils_radian_float_
  fullName: util.MathUtils.radian(float degree)
  nameWithType: MathUtils.radian(float degree)
- uid: util.MathUtils.radian*
  name: radian
  href: api/util.MathUtils.html#util_MathUtils_radian_
  isSpec: "True"
  fullName: util.MathUtils.radian
  nameWithType: MathUtils.radian
  package: util
- uid: util.MathUtils.random(float,float)
  name: random(float min, float max)
  href: api/util.MathUtils.html#util_MathUtils_random_float_float_
  fullName: util.MathUtils.random(float min, float max)
  nameWithType: MathUtils.random(float min, float max)
- uid: util.MathUtils.random*
  name: random
  href: api/util.MathUtils.html#util_MathUtils_random_
  isSpec: "True"
  fullName: util.MathUtils.random
  nameWithType: MathUtils.random
  package: util
- uid: util.MathUtils.randomInt(int,int)
  name: randomInt(int min, int max)
  href: api/util.MathUtils.html#util_MathUtils_randomInt_int_int_
  fullName: util.MathUtils.randomInt(int min, int max)
  nameWithType: MathUtils.randomInt(int min, int max)
- uid: util.MathUtils.randomInt*
  name: randomInt
  href: api/util.MathUtils.html#util_MathUtils_randomInt_
  isSpec: "True"
  fullName: util.MathUtils.randomInt
  nameWithType: MathUtils.randomInt
  package: util
- uid: util.MathUtils.rayCastIntersection(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: rayCastIntersection(Vector2f pointA, Vector2f rayA, Vector2f pointB, Vector2f rayB)
  href: api/util.MathUtils.html#util_MathUtils_rayCastIntersection_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: util.MathUtils.rayCastIntersection(Vector2f pointA, Vector2f rayA, Vector2f pointB, Vector2f rayB)
  nameWithType: MathUtils.rayCastIntersection(Vector2f pointA, Vector2f rayA, Vector2f pointB, Vector2f rayB)
- uid: util.MathUtils.rayCastIntersection*
  name: rayCastIntersection
  href: api/util.MathUtils.html#util_MathUtils_rayCastIntersection_
  isSpec: "True"
  fullName: util.MathUtils.rayCastIntersection
  nameWithType: MathUtils.rayCastIntersection
  package: util
- uid: util.MathUtils.rayCastIntersectionPoint(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: rayCastIntersectionPoint(Vector2f pointA, Vector2f rayA, Vector2f pointB, Vector2f rayB)
  href: api/util.MathUtils.html#util_MathUtils_rayCastIntersectionPoint_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: util.MathUtils.rayCastIntersectionPoint(Vector2f pointA, Vector2f rayA, Vector2f pointB, Vector2f rayB)
  nameWithType: MathUtils.rayCastIntersectionPoint(Vector2f pointA, Vector2f rayA, Vector2f pointB, Vector2f rayB)
- uid: util.MathUtils.rayCastIntersectionPoint*
  name: rayCastIntersectionPoint
  href: api/util.MathUtils.html#util_MathUtils_rayCastIntersectionPoint_
  isSpec: "True"
  fullName: util.MathUtils.rayCastIntersectionPoint
  nameWithType: MathUtils.rayCastIntersectionPoint
  package: util
- uid: util.MathUtils.rayCastToLineIntersectionPoint(org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f,org.joml.Vector2f)
  name: rayCastToLineIntersectionPoint(Vector2f rayStart, Vector2f rayDirectionAndLength, Vector2f linePointA, Vector2f linePointB)
  href: api/util.MathUtils.html#util_MathUtils_rayCastToLineIntersectionPoint_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_org_joml_Vector2f_
  fullName: util.MathUtils.rayCastToLineIntersectionPoint(Vector2f rayStart, Vector2f rayDirectionAndLength, Vector2f linePointA, Vector2f linePointB)
  nameWithType: MathUtils.rayCastToLineIntersectionPoint(Vector2f rayStart, Vector2f rayDirectionAndLength, Vector2f linePointA, Vector2f linePointB)
- uid: util.MathUtils.rayCastToLineIntersectionPoint*
  name: rayCastToLineIntersectionPoint
  href: api/util.MathUtils.html#util_MathUtils_rayCastToLineIntersectionPoint_
  isSpec: "True"
  fullName: util.MathUtils.rayCastToLineIntersectionPoint
  nameWithType: MathUtils.rayCastToLineIntersectionPoint
  package: util
- uid: util.MathUtils.rectInRect(util.Transform,util.Transform)
  name: rectInRect(Transform t1, Transform t2)
  href: api/util.MathUtils.html#util_MathUtils_rectInRect_util_Transform_util_Transform_
  fullName: util.MathUtils.rectInRect(Transform t1, Transform t2)
  nameWithType: MathUtils.rectInRect(Transform t1, Transform t2)
- uid: util.MathUtils.rectInRect*
  name: rectInRect
  href: api/util.MathUtils.html#util_MathUtils_rectInRect_
  isSpec: "True"
  fullName: util.MathUtils.rectInRect
  nameWithType: MathUtils.rectInRect
  package: util
- uid: util.MathUtils.rotateAroundOrigin(org.joml.Vector2f,float)
  name: rotateAroundOrigin(Vector2f point, float radianAngle)
  href: api/util.MathUtils.html#util_MathUtils_rotateAroundOrigin_org_joml_Vector2f_float_
  fullName: util.MathUtils.rotateAroundOrigin(Vector2f point, float radianAngle)
  nameWithType: MathUtils.rotateAroundOrigin(Vector2f point, float radianAngle)
- uid: util.MathUtils.rotateAroundOrigin*
  name: rotateAroundOrigin
  href: api/util.MathUtils.html#util_MathUtils_rotateAroundOrigin_
  isSpec: "True"
  fullName: util.MathUtils.rotateAroundOrigin
  nameWithType: MathUtils.rotateAroundOrigin
  package: util
- uid: util.MathUtils.rotateAroundPoint(org.joml.Vector2f,org.joml.Vector2f,float)
  name: rotateAroundPoint(Vector2f point, Vector2f relativeOrigin, float radianAngle)
  href: api/util.MathUtils.html#util_MathUtils_rotateAroundPoint_org_joml_Vector2f_org_joml_Vector2f_float_
  fullName: util.MathUtils.rotateAroundPoint(Vector2f point, Vector2f relativeOrigin, float radianAngle)
  nameWithType: MathUtils.rotateAroundPoint(Vector2f point, Vector2f relativeOrigin, float radianAngle)
- uid: util.MathUtils.rotateAroundPoint*
  name: rotateAroundPoint
  href: api/util.MathUtils.html#util_MathUtils_rotateAroundPoint_
  isSpec: "True"
  fullName: util.MathUtils.rotateAroundPoint
  nameWithType: MathUtils.rotateAroundPoint
  package: util
- uid: util.MathUtils.round(float)
  name: round(float x)
  href: api/util.MathUtils.html#util_MathUtils_round_float_
  fullName: util.MathUtils.round(float x)
  nameWithType: MathUtils.round(float x)
- uid: util.MathUtils.round*
  name: round
  href: api/util.MathUtils.html#util_MathUtils_round_
  isSpec: "True"
  fullName: util.MathUtils.round
  nameWithType: MathUtils.round
  package: util
- uid: util.MathUtils.shiftOverwrite(float[],int,int)
  name: shiftOverwrite(float[] array, int fromIndex, int toIndex)
  href: api/util.MathUtils.html#util_MathUtils_shiftOverwrite_float___int_int_
  fullName: util.MathUtils.shiftOverwrite(float[] array, int fromIndex, int toIndex)
  nameWithType: MathUtils.shiftOverwrite(float[] array, int fromIndex, int toIndex)
- uid: util.MathUtils.shiftOverwrite*
  name: shiftOverwrite
  href: api/util.MathUtils.html#util_MathUtils_shiftOverwrite_
  isSpec: "True"
  fullName: util.MathUtils.shiftOverwrite
  nameWithType: MathUtils.shiftOverwrite
  package: util
- uid: util.MathUtils.solveSimultaneousEquations(org.joml.Matrix3x2f)
  name: solveSimultaneousEquations(Matrix3x2f linearSystem)
  href: api/util.MathUtils.html#util_MathUtils_solveSimultaneousEquations_org_joml_Matrix3x2f_
  fullName: util.MathUtils.solveSimultaneousEquations(Matrix3x2f linearSystem)
  nameWithType: MathUtils.solveSimultaneousEquations(Matrix3x2f linearSystem)
- uid: util.MathUtils.solveSimultaneousEquations*
  name: solveSimultaneousEquations
  href: api/util.MathUtils.html#util_MathUtils_solveSimultaneousEquations_
  isSpec: "True"
  fullName: util.MathUtils.solveSimultaneousEquations
  nameWithType: MathUtils.solveSimultaneousEquations
  package: util
- uid: util.OrderPreservingList
  name: OrderPreservingList<T>
  href: api/util.OrderPreservingList.html
  fullName: util.OrderPreservingList<T>
  nameWithType: OrderPreservingList<T>
- uid: util.OrderPreservingList.add(int,T)
  name: add(int index, T element)
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_add_int_T_
  fullName: util.OrderPreservingList<T>.add(int index, T element)
  nameWithType: OrderPreservingList<T>.add(int index, T element)
- uid: util.OrderPreservingList.add(T)
  name: add(T t)
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_add_T_
  fullName: util.OrderPreservingList<T>.add(T t)
  nameWithType: OrderPreservingList<T>.add(T t)
- uid: util.OrderPreservingList.add*
  name: add
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_add_
  isSpec: "True"
  fullName: util.OrderPreservingList<T>.add
  nameWithType: OrderPreservingList<T>.add
  package: util
- uid: util.OrderPreservingList.addAll(int,java.util.Collection<? extends T>)
  name: addAll(int index, Collection<? extends T> c)
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_addAll_int_java_util_Collection___extends_T__
  fullName: util.OrderPreservingList<T>.addAll(int index, Collection<? extends T> c)
  nameWithType: OrderPreservingList<T>.addAll(int index, Collection<? extends T> c)
- uid: util.OrderPreservingList.addAll(java.util.Collection<? extends T>)
  name: addAll(Collection<? extends T> c)
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_addAll_java_util_Collection___extends_T__
  fullName: util.OrderPreservingList<T>.addAll(Collection<? extends T> c)
  nameWithType: OrderPreservingList<T>.addAll(Collection<? extends T> c)
- uid: util.OrderPreservingList.addAll*
  name: addAll
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_addAll_
  isSpec: "True"
  fullName: util.OrderPreservingList<T>.addAll
  nameWithType: OrderPreservingList<T>.addAll
  package: util
- uid: util.OrderPreservingList.OrderPreservingList()
  name: OrderPreservingList()
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_OrderPreservingList__
  fullName: util.OrderPreservingList<T>.OrderPreservingList()
  nameWithType: OrderPreservingList<T>.OrderPreservingList()
- uid: util.OrderPreservingList.OrderPreservingList(java.util.Collection<T>)
  name: OrderPreservingList(Collection<T> data)
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_OrderPreservingList_java_util_Collection_T__
  fullName: util.OrderPreservingList<T>.OrderPreservingList(Collection<T> data)
  nameWithType: OrderPreservingList<T>.OrderPreservingList(Collection<T> data)
- uid: util.OrderPreservingList.OrderPreservingList*
  name: OrderPreservingList
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_OrderPreservingList_
  isSpec: "True"
  fullName: util.OrderPreservingList<T>.OrderPreservingList
  nameWithType: OrderPreservingList<T>.OrderPreservingList
  package: util
- uid: util.OrderPreservingList.set(int,T)
  name: set(int index, T element)
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_set_int_T_
  fullName: util.OrderPreservingList<T>.set(int index, T element)
  nameWithType: OrderPreservingList<T>.set(int index, T element)
- uid: util.OrderPreservingList.set*
  name: set
  href: api/util.OrderPreservingList.html#util_OrderPreservingList_set_
  isSpec: "True"
  fullName: util.OrderPreservingList<T>.set
  nameWithType: OrderPreservingList<T>.set
  package: util
- uid: util.Pair
  name: Pair<L,R>
  href: api/util.Pair.html
  fullName: util.Pair<L,R>
  nameWithType: Pair<L,R>
- uid: util.Pair.<RR>extend(RR)
  name: <RR>extend(RR right)
  href: api/util.Pair.html#util_Pair__RR_extend_RR_
  fullName: util.Pair<L,R>.<RR>extend(RR right)
  nameWithType: Pair<L,R>.<RR>extend(RR right)
- uid: util.Pair.extend*
  name: <RR>extend
  href: api/util.Pair.html#util_Pair_extend_
  isSpec: "True"
  fullName: util.Pair<L,R>.<RR>extend
  nameWithType: Pair<L,R>.<RR>extend
  package: util
- uid: util.Pair.getLeft()
  name: getLeft()
  href: api/util.Pair.html#util_Pair_getLeft__
  fullName: util.Pair<L,R>.getLeft()
  nameWithType: Pair<L,R>.getLeft()
- uid: util.Pair.getLeft*
  name: getLeft
  href: api/util.Pair.html#util_Pair_getLeft_
  isSpec: "True"
  fullName: util.Pair<L,R>.getLeft
  nameWithType: Pair<L,R>.getLeft
  package: util
- uid: util.Pair.getRight()
  name: getRight()
  href: api/util.Pair.html#util_Pair_getRight__
  fullName: util.Pair<L,R>.getRight()
  nameWithType: Pair<L,R>.getRight()
- uid: util.Pair.getRight*
  name: getRight
  href: api/util.Pair.html#util_Pair_getRight_
  isSpec: "True"
  fullName: util.Pair<L,R>.getRight
  nameWithType: Pair<L,R>.getRight
  package: util
- uid: util.Pair.Pair()
  name: Pair()
  href: api/util.Pair.html#util_Pair_Pair__
  fullName: util.Pair<L,R>.Pair()
  nameWithType: Pair<L,R>.Pair()
- uid: util.Pair.Pair(L,R)
  name: Pair(L left, R right)
  href: api/util.Pair.html#util_Pair_Pair_L_R_
  fullName: util.Pair<L,R>.Pair(L left, R right)
  nameWithType: Pair<L,R>.Pair(L left, R right)
- uid: util.Pair.Pair*
  name: Pair
  href: api/util.Pair.html#util_Pair_Pair_
  isSpec: "True"
  fullName: util.Pair<L,R>.Pair
  nameWithType: Pair<L,R>.Pair
  package: util
- uid: util.Pair.setLeft(L)
  name: setLeft(L left)
  href: api/util.Pair.html#util_Pair_setLeft_L_
  fullName: util.Pair<L,R>.setLeft(L left)
  nameWithType: Pair<L,R>.setLeft(L left)
- uid: util.Pair.setLeft*
  name: setLeft
  href: api/util.Pair.html#util_Pair_setLeft_
  isSpec: "True"
  fullName: util.Pair<L,R>.setLeft
  nameWithType: Pair<L,R>.setLeft
  package: util
- uid: util.Pair.setRight(R)
  name: setRight(R right)
  href: api/util.Pair.html#util_Pair_setRight_R_
  fullName: util.Pair<L,R>.setRight(R right)
  nameWithType: Pair<L,R>.setRight(R right)
- uid: util.Pair.setRight*
  name: setRight
  href: api/util.Pair.html#util_Pair_setRight_
  isSpec: "True"
  fullName: util.Pair<L,R>.setRight
  nameWithType: Pair<L,R>.setRight
  package: util
- uid: util.safety
  name: util.safety
  href: api/util.safety.html
  fullName: util.safety
  nameWithType: util.safety
- uid: util.safety.Preconditions
  name: Preconditions
  href: api/util.safety.Preconditions.html
  fullName: util.safety.Preconditions
  nameWithType: Preconditions
- uid: util.safety.Preconditions.<T>nonNull(java.lang.String,T)
  name: <T>nonNull(String name, T obj)
  href: api/util.safety.Preconditions.html#util_safety_Preconditions__T_nonNull_java_lang_String_T_
  fullName: util.safety.Preconditions.<T>nonNull(String name, T obj)
  nameWithType: Preconditions.<T>nonNull(String name, T obj)
- uid: util.safety.Preconditions.<T>nonNull(T)
  name: <T>nonNull(T obj)
  href: api/util.safety.Preconditions.html#util_safety_Preconditions__T_nonNull_T_
  fullName: util.safety.Preconditions.<T>nonNull(T obj)
  nameWithType: Preconditions.<T>nonNull(T obj)
- uid: util.safety.Preconditions.ensureMainThread(java.lang.String)
  name: ensureMainThread(String location)
  href: api/util.safety.Preconditions.html#util_safety_Preconditions_ensureMainThread_java_lang_String_
  fullName: util.safety.Preconditions.ensureMainThread(String location)
  nameWithType: Preconditions.ensureMainThread(String location)
- uid: util.safety.Preconditions.ensureMainThread*
  name: ensureMainThread
  href: api/util.safety.Preconditions.html#util_safety_Preconditions_ensureMainThread_
  isSpec: "True"
  fullName: util.safety.Preconditions.ensureMainThread
  nameWithType: Preconditions.ensureMainThread
  package: util.safety
- uid: util.safety.Preconditions.nonNull*
  name: <T>nonNull
  href: api/util.safety.Preconditions.html#util_safety_Preconditions_nonNull_
  isSpec: "True"
  fullName: util.safety.Preconditions.<T>nonNull
  nameWithType: Preconditions.<T>nonNull
  package: util.safety
- uid: util.safety.Preconditions.Preconditions()
  name: Preconditions()
  href: api/util.safety.Preconditions.html#util_safety_Preconditions_Preconditions__
  fullName: util.safety.Preconditions.Preconditions()
  nameWithType: Preconditions.Preconditions()
- uid: util.safety.Preconditions.Preconditions*
  name: Preconditions
  href: api/util.safety.Preconditions.html#util_safety_Preconditions_Preconditions_
  isSpec: "True"
  fullName: util.safety.Preconditions.Preconditions
  nameWithType: Preconditions.Preconditions
  package: util.safety
- uid: util.specs
  name: util.specs
  href: api/util.specs.html
  fullName: util.specs
  nameWithType: util.specs
- uid: util.specs.FramebufferSpec
  name: FramebufferSpec
  href: api/util.specs.FramebufferSpec.html
  fullName: util.specs.FramebufferSpec
  nameWithType: FramebufferSpec
- uid: util.specs.FramebufferSpec.attachments
  name: attachments
  href: api/util.specs.FramebufferSpec.html#util_specs_FramebufferSpec_attachments
  fullName: util.specs.FramebufferSpec.attachments
  nameWithType: FramebufferSpec.attachments
- uid: util.specs.FramebufferSpec.FramebufferSpec(util.specs.TextureSpec...)
  name: FramebufferSpec(TextureSpec[] textureSpecs)
  href: api/util.specs.FramebufferSpec.html#util_specs_FramebufferSpec_FramebufferSpec_util_specs_TextureSpec____
  fullName: util.specs.FramebufferSpec.FramebufferSpec(TextureSpec[] textureSpecs)
  nameWithType: FramebufferSpec.FramebufferSpec(TextureSpec[] textureSpecs)
- uid: util.specs.FramebufferSpec.FramebufferSpec*
  name: FramebufferSpec
  href: api/util.specs.FramebufferSpec.html#util_specs_FramebufferSpec_FramebufferSpec_
  isSpec: "True"
  fullName: util.specs.FramebufferSpec.FramebufferSpec
  nameWithType: FramebufferSpec.FramebufferSpec
  package: util.specs
- uid: util.specs.TextureSpec
  name: TextureSpec
  href: api/util.specs.TextureSpec.html
  fullName: util.specs.TextureSpec
  nameWithType: TextureSpec
- uid: util.specs.TextureSpec.format
  name: format
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_format
  fullName: util.specs.TextureSpec.format
  nameWithType: TextureSpec.format
- uid: util.specs.TextureSpec.magnificationFilter
  name: magnificationFilter
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_magnificationFilter
  fullName: util.specs.TextureSpec.magnificationFilter
  nameWithType: TextureSpec.magnificationFilter
- uid: util.specs.TextureSpec.minificationFilter
  name: minificationFilter
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_minificationFilter
  fullName: util.specs.TextureSpec.minificationFilter
  nameWithType: TextureSpec.minificationFilter
- uid: util.specs.TextureSpec.rFilter
  name: rFilter
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_rFilter
  fullName: util.specs.TextureSpec.rFilter
  nameWithType: TextureSpec.rFilter
- uid: util.specs.TextureSpec.sFilter
  name: sFilter
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_sFilter
  fullName: util.specs.TextureSpec.sFilter
  nameWithType: TextureSpec.sFilter
- uid: util.specs.TextureSpec.TextureFormat
  name: TextureSpec.TextureFormat
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat
  fullName: util.specs.TextureSpec.TextureFormat
  nameWithType: TextureSpec.TextureFormat
- uid: util.specs.TextureSpec.TextureFormat.datatype
  name: datatype
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_datatype
  fullName: util.specs.TextureSpec.TextureFormat.datatype
  nameWithType: TextureSpec.TextureFormat.datatype
- uid: util.specs.TextureSpec.TextureFormat.DEPTH
  name: DEPTH
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_DEPTH
  fullName: util.specs.TextureSpec.TextureFormat.DEPTH
  nameWithType: TextureSpec.TextureFormat.DEPTH
- uid: util.specs.TextureSpec.TextureFormat.DEPTH24STENCIL8
  name: DEPTH24STENCIL8
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_DEPTH24STENCIL8
  fullName: util.specs.TextureSpec.TextureFormat.DEPTH24STENCIL8
  nameWithType: TextureSpec.TextureFormat.DEPTH24STENCIL8
- uid: util.specs.TextureSpec.TextureFormat.format
  name: format
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_format
  fullName: util.specs.TextureSpec.TextureFormat.format
  nameWithType: TextureSpec.TextureFormat.format
- uid: util.specs.TextureSpec.TextureFormat.internalFormat
  name: internalFormat
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_internalFormat
  fullName: util.specs.TextureSpec.TextureFormat.internalFormat
  nameWithType: TextureSpec.TextureFormat.internalFormat
- uid: util.specs.TextureSpec.TextureFormat.isDepth
  name: isDepth
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_isDepth
  fullName: util.specs.TextureSpec.TextureFormat.isDepth
  nameWithType: TextureSpec.TextureFormat.isDepth
- uid: util.specs.TextureSpec.TextureFormat.NONE
  name: NONE
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_NONE
  fullName: util.specs.TextureSpec.TextureFormat.NONE
  nameWithType: TextureSpec.TextureFormat.NONE
- uid: util.specs.TextureSpec.TextureFormat.RED_INTEGER
  name: RED_INTEGER
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_RED_INTEGER
  fullName: util.specs.TextureSpec.TextureFormat.RED_INTEGER
  nameWithType: TextureSpec.TextureFormat.RED_INTEGER
- uid: util.specs.TextureSpec.TextureFormat.RED_UNSIGNED_INTEGER
  name: RED_UNSIGNED_INTEGER
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_RED_UNSIGNED_INTEGER
  fullName: util.specs.TextureSpec.TextureFormat.RED_UNSIGNED_INTEGER
  nameWithType: TextureSpec.TextureFormat.RED_UNSIGNED_INTEGER
- uid: util.specs.TextureSpec.TextureFormat.RGBA8
  name: RGBA8
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_RGBA8
  fullName: util.specs.TextureSpec.TextureFormat.RGBA8
  nameWithType: TextureSpec.TextureFormat.RGBA8
- uid: util.specs.TextureSpec.TextureFormat.TextureFormat(boolean,int,int,int)
  name: TextureFormat(boolean isDepth, int internalFormat, int format, int datatype)
  href: api/util.specs.TextureSpec.TextureFormat.html
  fullName: util.specs.TextureSpec.TextureFormat.TextureFormat(boolean isDepth, int internalFormat, int format, int datatype)
  nameWithType: TextureSpec.TextureFormat.TextureFormat(boolean isDepth, int internalFormat, int format, int datatype)
- uid: util.specs.TextureSpec.TextureFormat.TextureFormat*
  name: TextureFormat
  href: api/util.specs.TextureSpec.TextureFormat.html
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureFormat.TextureFormat
  nameWithType: TextureSpec.TextureFormat.TextureFormat
  package: util.specs
- uid: util.specs.TextureSpec.TextureFormat.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_valueOf_java_lang_String_
  fullName: util.specs.TextureSpec.TextureFormat.valueOf(String name)
  nameWithType: TextureSpec.TextureFormat.valueOf(String name)
- uid: util.specs.TextureSpec.TextureFormat.valueOf*
  name: valueOf
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_valueOf_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureFormat.valueOf
  nameWithType: TextureSpec.TextureFormat.valueOf
  package: util.specs
- uid: util.specs.TextureSpec.TextureFormat.values()
  name: values()
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_values__
  fullName: util.specs.TextureSpec.TextureFormat.values()
  nameWithType: TextureSpec.TextureFormat.values()
- uid: util.specs.TextureSpec.TextureFormat.values*
  name: values
  href: api/util.specs.TextureSpec.TextureFormat.html#util_specs_TextureSpec_TextureFormat_values_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureFormat.values
  nameWithType: TextureSpec.TextureFormat.values
  package: util.specs
- uid: util.specs.TextureSpec.TextureResizeFilterType
  name: TextureSpec.TextureResizeFilterType
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType
  fullName: util.specs.TextureSpec.TextureResizeFilterType
  nameWithType: TextureSpec.TextureResizeFilterType
- uid: util.specs.TextureSpec.TextureResizeFilterType.appliesToMagFilter
  name: appliesToMagFilter
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_appliesToMagFilter
  fullName: util.specs.TextureSpec.TextureResizeFilterType.appliesToMagFilter
  nameWithType: TextureSpec.TextureResizeFilterType.appliesToMagFilter
- uid: util.specs.TextureSpec.TextureResizeFilterType.glType
  name: glType
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_glType
  fullName: util.specs.TextureSpec.TextureResizeFilterType.glType
  nameWithType: TextureSpec.TextureResizeFilterType.glType
- uid: util.specs.TextureSpec.TextureResizeFilterType.LINEAR
  name: LINEAR
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_LINEAR
  fullName: util.specs.TextureSpec.TextureResizeFilterType.LINEAR
  nameWithType: TextureSpec.TextureResizeFilterType.LINEAR
- uid: util.specs.TextureSpec.TextureResizeFilterType.LINEAR_MIPMAP_LINEAR
  name: LINEAR_MIPMAP_LINEAR
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_LINEAR_MIPMAP_LINEAR
  fullName: util.specs.TextureSpec.TextureResizeFilterType.LINEAR_MIPMAP_LINEAR
  nameWithType: TextureSpec.TextureResizeFilterType.LINEAR_MIPMAP_LINEAR
- uid: util.specs.TextureSpec.TextureResizeFilterType.LINEAR_MIPMAP_NEAREST
  name: LINEAR_MIPMAP_NEAREST
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_LINEAR_MIPMAP_NEAREST
  fullName: util.specs.TextureSpec.TextureResizeFilterType.LINEAR_MIPMAP_NEAREST
  nameWithType: TextureSpec.TextureResizeFilterType.LINEAR_MIPMAP_NEAREST
- uid: util.specs.TextureSpec.TextureResizeFilterType.NEAREST
  name: NEAREST
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_NEAREST
  fullName: util.specs.TextureSpec.TextureResizeFilterType.NEAREST
  nameWithType: TextureSpec.TextureResizeFilterType.NEAREST
- uid: util.specs.TextureSpec.TextureResizeFilterType.NEAREST_MIPMAP_LINEAR
  name: NEAREST_MIPMAP_LINEAR
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_NEAREST_MIPMAP_LINEAR
  fullName: util.specs.TextureSpec.TextureResizeFilterType.NEAREST_MIPMAP_LINEAR
  nameWithType: TextureSpec.TextureResizeFilterType.NEAREST_MIPMAP_LINEAR
- uid: util.specs.TextureSpec.TextureResizeFilterType.NEAREST_MIPMAP_NEAREST
  name: NEAREST_MIPMAP_NEAREST
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_NEAREST_MIPMAP_NEAREST
  fullName: util.specs.TextureSpec.TextureResizeFilterType.NEAREST_MIPMAP_NEAREST
  nameWithType: TextureSpec.TextureResizeFilterType.NEAREST_MIPMAP_NEAREST
- uid: util.specs.TextureSpec.TextureResizeFilterType.TextureResizeFilterType(boolean,int)
  name: TextureResizeFilterType(boolean appliesToMagFilter, int glType)
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html
  fullName: util.specs.TextureSpec.TextureResizeFilterType.TextureResizeFilterType(boolean appliesToMagFilter, int glType)
  nameWithType: TextureSpec.TextureResizeFilterType.TextureResizeFilterType(boolean appliesToMagFilter, int glType)
- uid: util.specs.TextureSpec.TextureResizeFilterType.TextureResizeFilterType*
  name: TextureResizeFilterType
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureResizeFilterType.TextureResizeFilterType
  nameWithType: TextureSpec.TextureResizeFilterType.TextureResizeFilterType
  package: util.specs
- uid: util.specs.TextureSpec.TextureResizeFilterType.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_valueOf_java_lang_String_
  fullName: util.specs.TextureSpec.TextureResizeFilterType.valueOf(String name)
  nameWithType: TextureSpec.TextureResizeFilterType.valueOf(String name)
- uid: util.specs.TextureSpec.TextureResizeFilterType.valueOf*
  name: valueOf
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_valueOf_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureResizeFilterType.valueOf
  nameWithType: TextureSpec.TextureResizeFilterType.valueOf
  package: util.specs
- uid: util.specs.TextureSpec.TextureResizeFilterType.values()
  name: values()
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_values__
  fullName: util.specs.TextureSpec.TextureResizeFilterType.values()
  nameWithType: TextureSpec.TextureResizeFilterType.values()
- uid: util.specs.TextureSpec.TextureResizeFilterType.values*
  name: values
  href: api/util.specs.TextureSpec.TextureResizeFilterType.html#util_specs_TextureSpec_TextureResizeFilterType_values_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureResizeFilterType.values
  nameWithType: TextureSpec.TextureResizeFilterType.values
  package: util.specs
- uid: util.specs.TextureSpec.TextureSpec()
  name: TextureSpec()
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_TextureSpec__
  fullName: util.specs.TextureSpec.TextureSpec()
  nameWithType: TextureSpec.TextureSpec()
- uid: util.specs.TextureSpec.TextureSpec(util.specs.TextureSpec.TextureFormat)
  name: TextureSpec(TextureSpec.TextureFormat format)
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_TextureSpec_util_specs_TextureSpec_TextureFormat_
  fullName: util.specs.TextureSpec.TextureSpec(TextureSpec.TextureFormat format)
  nameWithType: TextureSpec.TextureSpec(TextureSpec.TextureFormat format)
- uid: util.specs.TextureSpec.TextureSpec(util.specs.TextureSpec.TextureFormat,util.specs.TextureSpec.TextureResizeFilterType,util.specs.TextureSpec.TextureResizeFilterType)
  name: TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter)
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_TextureSpec_util_specs_TextureSpec_TextureFormat_util_specs_TextureSpec_TextureResizeFilterType_util_specs_TextureSpec_TextureResizeFilterType_
  fullName: util.specs.TextureSpec.TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter)
  nameWithType: TextureSpec.TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter)
- uid: util.specs.TextureSpec.TextureSpec(util.specs.TextureSpec.TextureFormat,util.specs.TextureSpec.TextureResizeFilterType,util.specs.TextureSpec.TextureResizeFilterType,util.specs.TextureSpec.TextureWrapFilterType)
  name: TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter, TextureSpec.TextureWrapFilterType wrapFilters)
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_TextureSpec_util_specs_TextureSpec_TextureFormat_util_specs_TextureSpec_TextureResizeFilterType_util_specs_TextureSpec_TextureResizeFilterType_util_specs_TextureSpec_TextureWrapFilterType_
  fullName: util.specs.TextureSpec.TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter, TextureSpec.TextureWrapFilterType wrapFilters)
  nameWithType: TextureSpec.TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter, TextureSpec.TextureWrapFilterType wrapFilters)
- uid: util.specs.TextureSpec.TextureSpec(util.specs.TextureSpec.TextureFormat,util.specs.TextureSpec.TextureResizeFilterType,util.specs.TextureSpec.TextureResizeFilterType,util.specs.TextureSpec.TextureWrapFilterType,util.specs.TextureSpec.TextureWrapFilterType,util.specs.TextureSpec.TextureWrapFilterType)
  name: TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter, TextureSpec.TextureWrapFilterType rFilter, TextureSpec.TextureWrapFilterType sFilter, TextureSpec.TextureWrapFilterType tFilter)
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_TextureSpec_util_specs_TextureSpec_TextureFormat_util_specs_TextureSpec_TextureResizeFilterType_util_specs_TextureSpec_TextureResizeFilterType_util_specs_TextureSpec_TextureWrapFilterType_util_specs_TextureSpec_TextureWrapFilterType_util_specs_TextureSpec_TextureWrapFilterType_
  fullName: util.specs.TextureSpec.TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter, TextureSpec.TextureWrapFilterType rFilter, TextureSpec.TextureWrapFilterType sFilter, TextureSpec.TextureWrapFilterType tFilter)
  nameWithType: TextureSpec.TextureSpec(TextureSpec.TextureFormat format, TextureSpec.TextureResizeFilterType minificationFilter, TextureSpec.TextureResizeFilterType magnificationFilter, TextureSpec.TextureWrapFilterType rFilter, TextureSpec.TextureWrapFilterType sFilter, TextureSpec.TextureWrapFilterType tFilter)
- uid: util.specs.TextureSpec.TextureSpec*
  name: TextureSpec
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_TextureSpec_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureSpec
  nameWithType: TextureSpec.TextureSpec
  package: util.specs
- uid: util.specs.TextureSpec.TextureWrapFilterType
  name: TextureSpec.TextureWrapFilterType
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType
  fullName: util.specs.TextureSpec.TextureWrapFilterType
  nameWithType: TextureSpec.TextureWrapFilterType
- uid: util.specs.TextureSpec.TextureWrapFilterType.CLAMP_TO_BORDER
  name: CLAMP_TO_BORDER
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_CLAMP_TO_BORDER
  fullName: util.specs.TextureSpec.TextureWrapFilterType.CLAMP_TO_BORDER
  nameWithType: TextureSpec.TextureWrapFilterType.CLAMP_TO_BORDER
- uid: util.specs.TextureSpec.TextureWrapFilterType.CLAMP_TO_EDGE
  name: CLAMP_TO_EDGE
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_CLAMP_TO_EDGE
  fullName: util.specs.TextureSpec.TextureWrapFilterType.CLAMP_TO_EDGE
  nameWithType: TextureSpec.TextureWrapFilterType.CLAMP_TO_EDGE
- uid: util.specs.TextureSpec.TextureWrapFilterType.glType
  name: glType
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_glType
  fullName: util.specs.TextureSpec.TextureWrapFilterType.glType
  nameWithType: TextureSpec.TextureWrapFilterType.glType
- uid: util.specs.TextureSpec.TextureWrapFilterType.MIRROR_CLAMP_TO_EDGE
  name: MIRROR_CLAMP_TO_EDGE
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_MIRROR_CLAMP_TO_EDGE
  fullName: util.specs.TextureSpec.TextureWrapFilterType.MIRROR_CLAMP_TO_EDGE
  nameWithType: TextureSpec.TextureWrapFilterType.MIRROR_CLAMP_TO_EDGE
- uid: util.specs.TextureSpec.TextureWrapFilterType.MIRRORED_REPEAT
  name: MIRRORED_REPEAT
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_MIRRORED_REPEAT
  fullName: util.specs.TextureSpec.TextureWrapFilterType.MIRRORED_REPEAT
  nameWithType: TextureSpec.TextureWrapFilterType.MIRRORED_REPEAT
- uid: util.specs.TextureSpec.TextureWrapFilterType.REPEAT
  name: REPEAT
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_REPEAT
  fullName: util.specs.TextureSpec.TextureWrapFilterType.REPEAT
  nameWithType: TextureSpec.TextureWrapFilterType.REPEAT
- uid: util.specs.TextureSpec.TextureWrapFilterType.TextureWrapFilterType(int)
  name: TextureWrapFilterType(int glType)
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html
  fullName: util.specs.TextureSpec.TextureWrapFilterType.TextureWrapFilterType(int glType)
  nameWithType: TextureSpec.TextureWrapFilterType.TextureWrapFilterType(int glType)
- uid: util.specs.TextureSpec.TextureWrapFilterType.TextureWrapFilterType*
  name: TextureWrapFilterType
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureWrapFilterType.TextureWrapFilterType
  nameWithType: TextureSpec.TextureWrapFilterType.TextureWrapFilterType
  package: util.specs
- uid: util.specs.TextureSpec.TextureWrapFilterType.valueOf(java.lang.String)
  name: valueOf(String name)
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_valueOf_java_lang_String_
  fullName: util.specs.TextureSpec.TextureWrapFilterType.valueOf(String name)
  nameWithType: TextureSpec.TextureWrapFilterType.valueOf(String name)
- uid: util.specs.TextureSpec.TextureWrapFilterType.valueOf*
  name: valueOf
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_valueOf_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureWrapFilterType.valueOf
  nameWithType: TextureSpec.TextureWrapFilterType.valueOf
  package: util.specs
- uid: util.specs.TextureSpec.TextureWrapFilterType.values()
  name: values()
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_values__
  fullName: util.specs.TextureSpec.TextureWrapFilterType.values()
  nameWithType: TextureSpec.TextureWrapFilterType.values()
- uid: util.specs.TextureSpec.TextureWrapFilterType.values*
  name: values
  href: api/util.specs.TextureSpec.TextureWrapFilterType.html#util_specs_TextureSpec_TextureWrapFilterType_values_
  isSpec: "True"
  fullName: util.specs.TextureSpec.TextureWrapFilterType.values
  nameWithType: TextureSpec.TextureWrapFilterType.values
  package: util.specs
- uid: util.specs.TextureSpec.tFilter
  name: tFilter
  href: api/util.specs.TextureSpec.html#util_specs_TextureSpec_tFilter
  fullName: util.specs.TextureSpec.tFilter
  nameWithType: TextureSpec.tFilter
- uid: util.Transform
  name: Transform
  href: api/util.Transform.html
  fullName: util.Transform
  nameWithType: Transform
- uid: util.Transform.addRotationDegree(float)
  name: addRotationDegree(float r)
  href: api/util.Transform.html#util_Transform_addRotationDegree_float_
  fullName: util.Transform.addRotationDegree(float r)
  nameWithType: Transform.addRotationDegree(float r)
- uid: util.Transform.addRotationDegree*
  name: addRotationDegree
  href: api/util.Transform.html#util_Transform_addRotationDegree_
  isSpec: "True"
  fullName: util.Transform.addRotationDegree
  nameWithType: Transform.addRotationDegree
  package: util
- uid: util.Transform.addRotationRadians(float)
  name: addRotationRadians(float r)
  href: api/util.Transform.html#util_Transform_addRotationRadians_float_
  fullName: util.Transform.addRotationRadians(float r)
  nameWithType: Transform.addRotationRadians(float r)
- uid: util.Transform.addRotationRadians*
  name: addRotationRadians
  href: api/util.Transform.html#util_Transform_addRotationRadians_
  isSpec: "True"
  fullName: util.Transform.addRotationRadians
  nameWithType: Transform.addRotationRadians
  package: util
- uid: util.Transform.addX(float)
  name: addX(float x)
  href: api/util.Transform.html#util_Transform_addX_float_
  fullName: util.Transform.addX(float x)
  nameWithType: Transform.addX(float x)
- uid: util.Transform.addX*
  name: addX
  href: api/util.Transform.html#util_Transform_addX_
  isSpec: "True"
  fullName: util.Transform.addX
  nameWithType: Transform.addX
  package: util
- uid: util.Transform.addY(float)
  name: addY(float y)
  href: api/util.Transform.html#util_Transform_addY_float_
  fullName: util.Transform.addY(float y)
  nameWithType: Transform.addY(float y)
- uid: util.Transform.addY*
  name: addY
  href: api/util.Transform.html#util_Transform_addY_
  isSpec: "True"
  fullName: util.Transform.addY
  nameWithType: Transform.addY
  package: util
- uid: util.Transform.copy()
  name: copy()
  href: api/util.Transform.html#util_Transform_copy__
  fullName: util.Transform.copy()
  nameWithType: Transform.copy()
- uid: util.Transform.copy(util.Transform)
  name: copy(Transform to)
  href: api/util.Transform.html#util_Transform_copy_util_Transform_
  fullName: util.Transform.copy(Transform to)
  nameWithType: Transform.copy(Transform to)
- uid: util.Transform.copy*
  name: copy
  href: api/util.Transform.html#util_Transform_copy_
  isSpec: "True"
  fullName: util.Transform.copy
  nameWithType: Transform.copy
  package: util
- uid: util.Transform.equals(java.lang.Object)
  name: equals(Object o)
  href: api/util.Transform.html#util_Transform_equals_java_lang_Object_
  fullName: util.Transform.equals(Object o)
  nameWithType: Transform.equals(Object o)
- uid: util.Transform.equals*
  name: equals
  href: api/util.Transform.html#util_Transform_equals_
  isSpec: "True"
  fullName: util.Transform.equals
  nameWithType: Transform.equals
  package: util
- uid: util.Transform.getHeight()
  name: getHeight()
  href: api/util.Transform.html#util_Transform_getHeight__
  fullName: util.Transform.getHeight()
  nameWithType: Transform.getHeight()
- uid: util.Transform.getHeight*
  name: getHeight
  href: api/util.Transform.html#util_Transform_getHeight_
  isSpec: "True"
  fullName: util.Transform.getHeight
  nameWithType: Transform.getHeight
  package: util
- uid: util.Transform.getPosition()
  name: getPosition()
  href: api/util.Transform.html#util_Transform_getPosition__
  fullName: util.Transform.getPosition()
  nameWithType: Transform.getPosition()
- uid: util.Transform.getPosition*
  name: getPosition
  href: api/util.Transform.html#util_Transform_getPosition_
  isSpec: "True"
  fullName: util.Transform.getPosition
  nameWithType: Transform.getPosition
  package: util
- uid: util.Transform.getRotation()
  name: getRotation()
  href: api/util.Transform.html#util_Transform_getRotation__
  fullName: util.Transform.getRotation()
  nameWithType: Transform.getRotation()
- uid: util.Transform.getRotation*
  name: getRotation
  href: api/util.Transform.html#util_Transform_getRotation_
  isSpec: "True"
  fullName: util.Transform.getRotation
  nameWithType: Transform.getRotation
  package: util
- uid: util.Transform.getRotationRadians()
  name: getRotationRadians()
  href: api/util.Transform.html#util_Transform_getRotationRadians__
  fullName: util.Transform.getRotationRadians()
  nameWithType: Transform.getRotationRadians()
- uid: util.Transform.getRotationRadians*
  name: getRotationRadians
  href: api/util.Transform.html#util_Transform_getRotationRadians_
  isSpec: "True"
  fullName: util.Transform.getRotationRadians
  nameWithType: Transform.getRotationRadians
  package: util
- uid: util.Transform.getScale()
  name: getScale()
  href: api/util.Transform.html#util_Transform_getScale__
  fullName: util.Transform.getScale()
  nameWithType: Transform.getScale()
- uid: util.Transform.getScale*
  name: getScale
  href: api/util.Transform.html#util_Transform_getScale_
  isSpec: "True"
  fullName: util.Transform.getScale
  nameWithType: Transform.getScale
  package: util
- uid: util.Transform.getWidth()
  name: getWidth()
  href: api/util.Transform.html#util_Transform_getWidth__
  fullName: util.Transform.getWidth()
  nameWithType: Transform.getWidth()
- uid: util.Transform.getWidth*
  name: getWidth
  href: api/util.Transform.html#util_Transform_getWidth_
  isSpec: "True"
  fullName: util.Transform.getWidth
  nameWithType: Transform.getWidth
  package: util
- uid: util.Transform.getX()
  name: getX()
  href: api/util.Transform.html#util_Transform_getX__
  fullName: util.Transform.getX()
  nameWithType: Transform.getX()
- uid: util.Transform.getX*
  name: getX
  href: api/util.Transform.html#util_Transform_getX_
  isSpec: "True"
  fullName: util.Transform.getX
  nameWithType: Transform.getX
  package: util
- uid: util.Transform.getY()
  name: getY()
  href: api/util.Transform.html#util_Transform_getY__
  fullName: util.Transform.getY()
  nameWithType: Transform.getY()
- uid: util.Transform.getY*
  name: getY
  href: api/util.Transform.html#util_Transform_getY_
  isSpec: "True"
  fullName: util.Transform.getY
  nameWithType: Transform.getY
  package: util
- uid: util.Transform.scale
  name: scale
  href: api/util.Transform.html#util_Transform_scale
  fullName: util.Transform.scale
  nameWithType: Transform.scale
- uid: util.Transform.setPosition(org.joml.Vector2f)
  name: setPosition(Vector2f position)
  href: api/util.Transform.html#util_Transform_setPosition_org_joml_Vector2f_
  fullName: util.Transform.setPosition(Vector2f position)
  nameWithType: Transform.setPosition(Vector2f position)
- uid: util.Transform.setPosition*
  name: setPosition
  href: api/util.Transform.html#util_Transform_setPosition_
  isSpec: "True"
  fullName: util.Transform.setPosition
  nameWithType: Transform.setPosition
  package: util
- uid: util.Transform.setRotation(float)
  name: setRotation(float r)
  href: api/util.Transform.html#util_Transform_setRotation_float_
  fullName: util.Transform.setRotation(float r)
  nameWithType: Transform.setRotation(float r)
- uid: util.Transform.setRotation*
  name: setRotation
  href: api/util.Transform.html#util_Transform_setRotation_
  isSpec: "True"
  fullName: util.Transform.setRotation
  nameWithType: Transform.setRotation
  package: util
- uid: util.Transform.setRotationRadians(float)
  name: setRotationRadians(float r)
  href: api/util.Transform.html#util_Transform_setRotationRadians_float_
  fullName: util.Transform.setRotationRadians(float r)
  nameWithType: Transform.setRotationRadians(float r)
- uid: util.Transform.setRotationRadians*
  name: setRotationRadians
  href: api/util.Transform.html#util_Transform_setRotationRadians_
  isSpec: "True"
  fullName: util.Transform.setRotationRadians
  nameWithType: Transform.setRotationRadians
  package: util
- uid: util.Transform.setScale(org.joml.Vector2f)
  name: setScale(Vector2f scale)
  href: api/util.Transform.html#util_Transform_setScale_org_joml_Vector2f_
  fullName: util.Transform.setScale(Vector2f scale)
  nameWithType: Transform.setScale(Vector2f scale)
- uid: util.Transform.setScale*
  name: setScale
  href: api/util.Transform.html#util_Transform_setScale_
  isSpec: "True"
  fullName: util.Transform.setScale
  nameWithType: Transform.setScale
  package: util
- uid: util.Transform.setX(float)
  name: setX(float x)
  href: api/util.Transform.html#util_Transform_setX_float_
  fullName: util.Transform.setX(float x)
  nameWithType: Transform.setX(float x)
- uid: util.Transform.setX*
  name: setX
  href: api/util.Transform.html#util_Transform_setX_
  isSpec: "True"
  fullName: util.Transform.setX
  nameWithType: Transform.setX
  package: util
- uid: util.Transform.setY(float)
  name: setY(float y)
  href: api/util.Transform.html#util_Transform_setY_float_
  fullName: util.Transform.setY(float y)
  nameWithType: Transform.setY(float y)
- uid: util.Transform.setY*
  name: setY
  href: api/util.Transform.html#util_Transform_setY_
  isSpec: "True"
  fullName: util.Transform.setY
  nameWithType: Transform.setY
  package: util
- uid: util.Transform.Transform()
  name: Transform()
  href: api/util.Transform.html#util_Transform_Transform__
  fullName: util.Transform.Transform()
  nameWithType: Transform.Transform()
- uid: util.Transform.Transform(float,float,float,float)
  name: Transform(float x, float y, float w, float h)
  href: api/util.Transform.html#util_Transform_Transform_float_float_float_float_
  fullName: util.Transform.Transform(float x, float y, float w, float h)
  nameWithType: Transform.Transform(float x, float y, float w, float h)
- uid: util.Transform.Transform(float,float,float,float,float)
  name: Transform(float x, float y, float r, float w, float h)
  href: api/util.Transform.html#util_Transform_Transform_float_float_float_float_float_
  fullName: util.Transform.Transform(float x, float y, float r, float w, float h)
  nameWithType: Transform.Transform(float x, float y, float r, float w, float h)
- uid: util.Transform.Transform(org.joml.Vector2f)
  name: Transform(Vector2f position)
  href: api/util.Transform.html#util_Transform_Transform_org_joml_Vector2f_
  fullName: util.Transform.Transform(Vector2f position)
  nameWithType: Transform.Transform(Vector2f position)
- uid: util.Transform.Transform(org.joml.Vector2f,float)
  name: Transform(Vector2f position, float rotation)
  href: api/util.Transform.html#util_Transform_Transform_org_joml_Vector2f_float_
  fullName: util.Transform.Transform(Vector2f position, float rotation)
  nameWithType: Transform.Transform(Vector2f position, float rotation)
- uid: util.Transform.Transform(org.joml.Vector2f,float,org.joml.Vector2f)
  name: Transform(Vector2f position, float rotation, Vector2f scale)
  href: api/util.Transform.html#util_Transform_Transform_org_joml_Vector2f_float_org_joml_Vector2f_
  fullName: util.Transform.Transform(Vector2f position, float rotation, Vector2f scale)
  nameWithType: Transform.Transform(Vector2f position, float rotation, Vector2f scale)
- uid: util.Transform.Transform(org.joml.Vector2f,org.joml.Vector2f)
  name: Transform(Vector2f position, Vector2f scale)
  href: api/util.Transform.html#util_Transform_Transform_org_joml_Vector2f_org_joml_Vector2f_
  fullName: util.Transform.Transform(Vector2f position, Vector2f scale)
  nameWithType: Transform.Transform(Vector2f position, Vector2f scale)
- uid: util.Transform.Transform(util.Transform)
  name: Transform(Transform transform)
  href: api/util.Transform.html#util_Transform_Transform_util_Transform_
  fullName: util.Transform.Transform(Transform transform)
  nameWithType: Transform.Transform(Transform transform)
- uid: util.Transform.Transform*
  name: Transform
  href: api/util.Transform.html#util_Transform_Transform_
  isSpec: "True"
  fullName: util.Transform.Transform
  nameWithType: Transform.Transform
  package: util
- uid: util.Triple
  name: Triple<L,M,R>
  href: api/util.Triple.html
  fullName: util.Triple<L,M,R>
  nameWithType: Triple<L,M,R>
- uid: util.Triple.getLeft()
  name: getLeft()
  href: api/util.Triple.html#util_Triple_getLeft__
  fullName: util.Triple<L,M,R>.getLeft()
  nameWithType: Triple<L,M,R>.getLeft()
- uid: util.Triple.getLeft*
  name: getLeft
  href: api/util.Triple.html#util_Triple_getLeft_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.getLeft
  nameWithType: Triple<L,M,R>.getLeft
  package: util
- uid: util.Triple.getMiddle()
  name: getMiddle()
  href: api/util.Triple.html#util_Triple_getMiddle__
  fullName: util.Triple<L,M,R>.getMiddle()
  nameWithType: Triple<L,M,R>.getMiddle()
- uid: util.Triple.getMiddle*
  name: getMiddle
  href: api/util.Triple.html#util_Triple_getMiddle_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.getMiddle
  nameWithType: Triple<L,M,R>.getMiddle
  package: util
- uid: util.Triple.getRight()
  name: getRight()
  href: api/util.Triple.html#util_Triple_getRight__
  fullName: util.Triple<L,M,R>.getRight()
  nameWithType: Triple<L,M,R>.getRight()
- uid: util.Triple.getRight*
  name: getRight
  href: api/util.Triple.html#util_Triple_getRight_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.getRight
  nameWithType: Triple<L,M,R>.getRight
  package: util
- uid: util.Triple.setLeft(L)
  name: setLeft(L left)
  href: api/util.Triple.html#util_Triple_setLeft_L_
  fullName: util.Triple<L,M,R>.setLeft(L left)
  nameWithType: Triple<L,M,R>.setLeft(L left)
- uid: util.Triple.setLeft*
  name: setLeft
  href: api/util.Triple.html#util_Triple_setLeft_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.setLeft
  nameWithType: Triple<L,M,R>.setLeft
  package: util
- uid: util.Triple.setMiddle(M)
  name: setMiddle(M middle)
  href: api/util.Triple.html#util_Triple_setMiddle_M_
  fullName: util.Triple<L,M,R>.setMiddle(M middle)
  nameWithType: Triple<L,M,R>.setMiddle(M middle)
- uid: util.Triple.setMiddle*
  name: setMiddle
  href: api/util.Triple.html#util_Triple_setMiddle_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.setMiddle
  nameWithType: Triple<L,M,R>.setMiddle
  package: util
- uid: util.Triple.setRight(R)
  name: setRight(R right)
  href: api/util.Triple.html#util_Triple_setRight_R_
  fullName: util.Triple<L,M,R>.setRight(R right)
  nameWithType: Triple<L,M,R>.setRight(R right)
- uid: util.Triple.setRight*
  name: setRight
  href: api/util.Triple.html#util_Triple_setRight_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.setRight
  nameWithType: Triple<L,M,R>.setRight
  package: util
- uid: util.Triple.Triple()
  name: Triple()
  href: api/util.Triple.html#util_Triple_Triple__
  fullName: util.Triple<L,M,R>.Triple()
  nameWithType: Triple<L,M,R>.Triple()
- uid: util.Triple.Triple(L,M,R)
  name: Triple(L left, M middle, R right)
  href: api/util.Triple.html#util_Triple_Triple_L_M_R_
  fullName: util.Triple<L,M,R>.Triple(L left, M middle, R right)
  nameWithType: Triple<L,M,R>.Triple(L left, M middle, R right)
- uid: util.Triple.Triple*
  name: Triple
  href: api/util.Triple.html#util_Triple_Triple_
  isSpec: "True"
  fullName: util.Triple<L,M,R>.Triple
  nameWithType: Triple<L,M,R>.Triple
  package: util
